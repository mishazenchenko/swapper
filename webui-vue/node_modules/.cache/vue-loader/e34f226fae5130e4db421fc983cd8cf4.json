{"remainingRequest":"/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/node_modules/vue-loader/dist/index.js??ruleSet[0].use[1]!/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/node_modules/vue-svg-inline-loader/src/index.js!/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/src/views/SecurityAndAccess/Policies/Policies.vue?vue&type=style&index=0&id=44c51111&lang=scss&scoped=true","dependencies":[{"path":"/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/src/views/SecurityAndAccess/Policies/Policies.vue","mtime":1749201729612},{"path":"/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js","mtime":1750686224404},{"path":"/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/node_modules/vue-loader/dist/stylePostLoader.js","mtime":1750686215520},{"path":"/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/node_modules/@vue/cli-service/node_modules/postcss-loader/dist/cjs.js","mtime":1750686224356},{"path":"/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/node_modules/sass-loader/dist/cjs.js","mtime":1750686215808},{"path":"/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/node_modules/cache-loader/dist/cjs.js","mtime":1750686218200},{"path":"/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/node_modules/vue-loader/dist/index.js","mtime":1750686215328},{"path":"/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/node_modules/vue-svg-inline-loader/src/index.js","mtime":1750686215304}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CkBpbXBvcnQgJ0AvYXNzZXRzL3N0eWxlcy9ibWMvaGVscGVycy9faW5kZXguc2Nzcyc7CkBpbXBvcnQgJ0AvYXNzZXRzL3N0eWxlcy9ib290c3RyYXAvX2hlbHBlcnMuc2Nzcyc7Cgouc2V0dGluZy1zZWN0aW9uIHsKICBib3JkZXItYm90dG9tOiAxcHggc29saWQgZ3JheSgnMzAwJyk7Cn0KLnNlc3Npb24tdGltZW91dCB7CiAgYWxpZ24tc2VsZjogY2VudGVyOwp9Cg=="},{"version":3,"sources":["/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/src/views/SecurityAndAccess/Policies/Policies.vue"],"names":[],"mappings":";AAmQA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAEjD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtC;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB","file":"/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/src/views/SecurityAndAccess/Policies/Policies.vue","sourceRoot":"","sourcesContent":["<template>\n  <b-container fluid=\"xl\">\n    <page-title />\n    <b-row>\n      <b-col md=\"8\">\n        <b-row v-if=\"!modifySSHPolicyDisabled\" class=\"setting-section\">\n          <b-col class=\"d-flex align-items-center justify-content-between\">\n            <dl class=\"mr-3 w-75\">\n              <dt>{{ $t('pagePolicies.ssh') }}</dt>\n              <dd>\n                {{ $t('pagePolicies.sshDescription') }}\n              </dd>\n            </dl>\n            <b-form-checkbox\n              id=\"sshSwitch\"\n              v-model=\"sshProtocolState\"\n              data-test-id=\"policies-toggle-bmcShell\"\n              switch\n              @change=\"changeSshProtocolState\"\n            >\n              <span class=\"sr-only\">\n                {{ $t('pagePolicies.ssh') }}\n              </span>\n              <span v-if=\"sshProtocolState\">\n                {{ $t('global.status.enabled') }}\n              </span>\n              <span v-else>{{ $t('global.status.disabled') }}</span>\n            </b-form-checkbox>\n          </b-col>\n        </b-row>\n        <b-row class=\"setting-section\">\n          <b-col class=\"d-flex align-items-center justify-content-between\">\n            <dl class=\"mt-3 mr-3 w-75\">\n              <dt>{{ $t('pagePolicies.ipmi') }}</dt>\n              <dd>\n                {{ $t('pagePolicies.ipmiDescription') }}\n              </dd>\n            </dl>\n            <b-form-checkbox\n              id=\"ipmiSwitch\"\n              v-model=\"ipmiProtocolState\"\n              data-test-id=\"polices-toggle-networkIpmi\"\n              switch\n              @change=\"changeIpmiProtocolState\"\n            >\n              <span class=\"sr-only\">\n                {{ $t('pagePolicies.ipmi') }}\n              </span>\n              <span v-if=\"ipmiProtocolState\">\n                {{ $t('global.status.enabled') }}\n              </span>\n              <span v-else>{{ $t('global.status.disabled') }}</span>\n            </b-form-checkbox>\n          </b-col>\n        </b-row>\n        <b-row class=\"setting-section\">\n          <b-col class=\"d-flex align-items-center justify-content-between\">\n            <dl class=\"mt-3 mr-3 w-75\">\n              <dt>{{ $t('pagePolicies.vtpm') }}</dt>\n              <dd>\n                {{ $t('pagePolicies.vtpmDescription') }}\n              </dd>\n            </dl>\n            <b-form-checkbox\n              id=\"vtpmSwitch\"\n              v-model=\"vtpmState\"\n              data-test-id=\"policies-toggle-vtpm\"\n              switch\n              @change=\"changeVtpmState\"\n            >\n              <span class=\"sr-only\">\n                {{ $t('pagePolicies.vtpm') }}\n              </span>\n              <span v-if=\"vtpmState\">\n                {{ $t('global.status.enabled') }}\n              </span>\n              <span v-else>{{ $t('global.status.disabled') }}</span>\n            </b-form-checkbox>\n          </b-col>\n        </b-row>\n        <b-row class=\"setting-section\">\n          <b-col class=\"d-flex align-items-center justify-content-between\">\n            <dl class=\"mt-3 mr-3 w-75\">\n              <dt>{{ $t('pagePolicies.rtad') }}</dt>\n              <dd>\n                {{ $t('pagePolicies.rtadDescription') }}\n              </dd>\n            </dl>\n            <b-form-checkbox\n              id=\"rtadSwitch\"\n              v-model=\"rtadState\"\n              data-test-id=\"policies-toggle-rtad\"\n              switch\n              @change=\"changeRtadState\"\n            >\n              <span class=\"sr-only\">\n                {{ $t('pagePolicies.rtad') }}\n              </span>\n              <span v-if=\"rtadState\">\n                {{ $t('global.status.enabled') }}\n              </span>\n              <span v-else>{{ $t('global.status.disabled') }}</span>\n            </b-form-checkbox>\n          </b-col>\n        </b-row>\n        <b-row class=\"setting-section\">\n          <b-col class=\"d-flex align-items-center justify-content-between\">\n            <dl class=\"mt-3 mr-3 w-75\">\n              <dt>{{ $t('pagePolicies.webSessionTimeOut') }}</dt>\n              <dd>\n                {{ $t('pagePolicies.webSessionTimeOutDescription') }}\n              </dd>\n            </dl>\n          </b-col>\n          <b-col lg=\"3\" class=\"session-timeout\">\n            <b-form-select\n              id=\"session-timeout-options\"\n              v-model=\"sessionTimeoutState\"\n              :options=\"sessionTimeOutOptions\"\n              @change=\"saveSessionTimeoutValue\"\n            >\n              <template #first>\n                <b-form-select-option :value=\"null\" disabled>\n                  {{ $t('global.form.selectAnOption') }}\n                </b-form-select-option>\n              </template>\n            </b-form-select>\n          </b-col>\n        </b-row>\n      </b-col>\n    </b-row>\n  </b-container>\n</template>\n\n<script>\nimport PageTitle from '@/components/Global/PageTitle';\n\nimport LoadingBarMixin from '@/components/Mixins/LoadingBarMixin';\nimport BVToastMixin from '@/components/Mixins/BVToastMixin';\nimport { useI18n } from 'vue-i18n';\nimport i18n from '@/i18n';\n\nexport default {\n  name: 'Policies',\n  components: { PageTitle },\n  mixins: [LoadingBarMixin, BVToastMixin],\n  beforeRouteLeave(to, from, next) {\n    this.hideLoader();\n    next();\n  },\n  data() {\n    return {\n      $t: useI18n().t,\n      modifySSHPolicyDisabled:\n        process.env.VUE_APP_MODIFY_SSH_POLICY_DISABLED === 'true',\n      sessionTimeOutOptions: [\n        { value: 1800, text: i18n.global.t('pagePolicies.options.30minutes') },\n        { value: 3600, text: i18n.global.t('pagePolicies.options.1hour') },\n        { value: 7200, text: i18n.global.t('pagePolicies.options.2hours') },\n        { value: 14400, text: i18n.global.t('pagePolicies.options.4hours') },\n        { value: 28800, text: i18n.global.t('pagePolicies.options.8hours') },\n        { value: 86400, text: i18n.global.t('pagePolicies.options.1day') },\n      ],\n    };\n  },\n  computed: {\n    sshProtocolState: {\n      get() {\n        return this.$store.getters['policies/sshProtocolEnabled'];\n      },\n      set(newValue) {\n        return newValue;\n      },\n    },\n    ipmiProtocolState: {\n      get() {\n        return this.$store.getters['policies/ipmiProtocolEnabled'];\n      },\n      set(newValue) {\n        return newValue;\n      },\n    },\n    rtadState: {\n      get() {\n        if (this.$store.getters['policies/rtadEnabled'] === 'Enabled') {\n          return true;\n        } else {\n          return false;\n        }\n      },\n      set(newValue) {\n        return newValue;\n      },\n    },\n    vtpmState: {\n      get() {\n        if (this.$store.getters['policies/vtpmEnabled'] === 'Enabled') {\n          return true;\n        } else {\n          return false;\n        }\n      },\n      set(newValue) {\n        return newValue;\n      },\n    },\n    sessionTimeoutState: {\n      get() {\n        return this.$store.getters['policies/getSessionTimeoutValue'];\n      },\n      set(newValue) {\n        return newValue;\n      },\n    },\n  },\n  created() {\n    this.startLoader();\n    Promise.all([\n      this.$store.dispatch('policies/getBiosStatus'),\n      this.$store.dispatch('policies/getNetworkProtocolStatus'),\n      this.$store.dispatch('policies/getSessionTimeout'),\n    ]).finally(() => this.endLoader());\n  },\n  methods: {\n    changeIpmiProtocolState(state) {\n      this.$store\n        .dispatch('policies/saveIpmiProtocolState', state)\n        .then((message) => this.successToast(message))\n        .catch(({ message }) => this.errorToast(message));\n    },\n    changeSshProtocolState(state) {\n      this.$store\n        .dispatch('policies/saveSshProtocolState', state)\n        .then((message) => this.successToast(message))\n        .catch(({ message }) => this.errorToast(message));\n    },\n    changeRtadState(state) {\n      this.$store\n        .dispatch('policies/saveRtadState', state ? 'Enabled' : 'Disabled')\n        .then((message) => this.successToast(message))\n        .catch(({ message }) => this.errorToast(message));\n    },\n    changeVtpmState(state) {\n      this.$store\n        .dispatch('policies/saveVtpmState', state ? 'Enabled' : 'Disabled')\n        .then((message) => this.successToast(message))\n        .catch(({ message }) => this.errorToast(message));\n    },\n    saveSessionTimeoutValue(sessionTimeoutState) {\n      this.$store\n        .dispatch('policies/saveSessionTimeoutValue', sessionTimeoutState)\n        .then((message) => this.successToast(message))\n        .catch(({ message }) => this.errorToast(message));\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import '@/assets/styles/bmc/helpers/_index.scss';\n@import '@/assets/styles/bootstrap/_helpers.scss';\n\n.setting-section {\n  border-bottom: 1px solid gray('300');\n}\n.session-timeout {\n  align-self: center;\n}\n</style>\n"]}]}