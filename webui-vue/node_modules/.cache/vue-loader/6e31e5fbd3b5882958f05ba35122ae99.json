{"remainingRequest":"/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/node_modules/vue-loader/dist/index.js??ruleSet[0].use[1]!/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/node_modules/vue-svg-inline-loader/src/index.js!/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/src/views/Overview/Overview.vue?vue&type=template&id=938e51b6","dependencies":[{"path":"/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/src/views/Overview/Overview.vue","mtime":1749201729612},{"path":"/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/node_modules/babel-loader/lib/index.js","mtime":1750686226660},{"path":"/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/node_modules/vue-loader/dist/templateLoader.js","mtime":1750686215536},{"path":"/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/node_modules/cache-loader/dist/cjs.js","mtime":1750686218200},{"path":"/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/node_modules/vue-loader/dist/index.js","mtime":1750686215328},{"path":"/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/node_modules/vue-svg-inline-loader/src/index.js","mtime":1750686215304}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgPGItY29udGFpbmVyIGZsdWlkPSJ4bCI+CiAgICA8cGFnZS10aXRsZSAvPgogICAgPG92ZXJ2aWV3LXF1aWNrLWxpbmtzIGNsYXNzPSJtYi00IiAvPgogICAgPHBhZ2Utc2VjdGlvbgogICAgICA6c2VjdGlvbi10aXRsZT0iJHQoJ3BhZ2VPdmVydmlldy5zeXN0ZW1JbmZvcm1hdGlvbicpIgogICAgICBjbGFzcz0ibWItMSIKICAgID4KICAgICAgPGItY2FyZC1ncm91cCBkZWNrPgogICAgICAgIDxvdmVydmlldy1zZXJ2ZXIgLz4KICAgICAgICA8b3ZlcnZpZXctZmlybXdhcmUgLz4KICAgICAgPC9iLWNhcmQtZ3JvdXA+CiAgICAgIDxiLWNhcmQtZ3JvdXAgZGVjaz4KICAgICAgICA8b3ZlcnZpZXctbmV0d29yayAvPgogICAgICAgIDxvdmVydmlldy1wb3dlciAvPgogICAgICA8L2ItY2FyZC1ncm91cD4KICAgIDwvcGFnZS1zZWN0aW9uPgogICAgPHBhZ2Utc2VjdGlvbiA6c2VjdGlvbi10aXRsZT0iJHQoJ3BhZ2VPdmVydmlldy5zdGF0dXNJbmZvcm1hdGlvbicpIj4KICAgICAgPGItY2FyZC1ncm91cCBkZWNrPgogICAgICAgIDxvdmVydmlldy1ldmVudHMgLz4KICAgICAgICA8b3ZlcnZpZXctaW52ZW50b3J5IC8+CiAgICAgICAgPG92ZXJ2aWV3LWR1bXBzIHYtaWY9InNob3dEdW1wcyIgLz4KICAgICAgPC9iLWNhcmQtZ3JvdXA+CiAgICA8L3BhZ2Utc2VjdGlvbj4KICA8L2ItY29udGFpbmVyPgo="},{"version":3,"sources":["/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/src/views/Overview/Overview.vue"],"names":[],"mappings":"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","file":"/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/src/views/Overview/Overview.vue","sourceRoot":"","sourcesContent":["<template>\n  <b-container fluid=\"xl\">\n    <page-title />\n    <overview-quick-links class=\"mb-4\" />\n    <page-section\n      :section-title=\"$t('pageOverview.systemInformation')\"\n      class=\"mb-1\"\n    >\n      <b-card-group deck>\n        <overview-server />\n        <overview-firmware />\n      </b-card-group>\n      <b-card-group deck>\n        <overview-network />\n        <overview-power />\n      </b-card-group>\n    </page-section>\n    <page-section :section-title=\"$t('pageOverview.statusInformation')\">\n      <b-card-group deck>\n        <overview-events />\n        <overview-inventory />\n        <overview-dumps v-if=\"showDumps\" />\n      </b-card-group>\n    </page-section>\n  </b-container>\n</template>\n\n<script>\nimport LoadingBarMixin from '@/components/Mixins/LoadingBarMixin';\nimport OverviewDumps from './OverviewDumps.vue';\nimport OverviewEvents from './OverviewEvents.vue';\nimport OverviewFirmware from './OverviewFirmware.vue';\nimport OverviewInventory from './OverviewInventory.vue';\nimport OverviewNetwork from './OverviewNetwork';\nimport OverviewPower from './OverviewPower';\nimport OverviewQuickLinks from './OverviewQuickLinks';\nimport OverviewServer from './OverviewServer';\nimport PageSection from '@/components/Global/PageSection';\nimport PageTitle from '@/components/Global/PageTitle';\nimport { useI18n } from 'vue-i18n';\n\nexport default {\n  name: 'Overview',\n  components: {\n    OverviewDumps,\n    OverviewEvents,\n    OverviewFirmware,\n    OverviewInventory,\n    OverviewNetwork,\n    OverviewPower,\n    OverviewQuickLinks,\n    OverviewServer,\n    PageSection,\n    PageTitle,\n  },\n  mixins: [LoadingBarMixin],\n  data() {\n    return {\n      $t: useI18n().t,\n      showDumps: process.env.VUE_APP_ENV_NAME === 'ibm',\n    };\n  },\n  created() {\n    this.startLoader();\n    const dumpsPromise = new Promise((resolve) => {\n      this.$root.$on('overview-dumps-complete', () => resolve());\n    });\n    const eventsPromise = new Promise((resolve) => {\n      this.$root.$on('overview-events-complete', () => resolve());\n    });\n    const firmwarePromise = new Promise((resolve) => {\n      this.$root.$on('overview-firmware-complete', () => resolve());\n    });\n    const inventoryPromise = new Promise((resolve) => {\n      this.$root.$on('overview-inventory-complete', () => resolve());\n    });\n    const networkPromise = new Promise((resolve) => {\n      this.$root.$on('overview-network-complete', () => resolve());\n    });\n    const powerPromise = new Promise((resolve) => {\n      this.$root.$on('overview-power-complete', () => resolve());\n    });\n    const quicklinksPromise = new Promise((resolve) => {\n      this.$root.$on('overview-quicklinks-complete', () => resolve());\n    });\n    const serverPromise = new Promise((resolve) => {\n      this.$root.$on('overview-server-complete', () => resolve());\n    });\n\n    const promises = [\n      eventsPromise,\n      firmwarePromise,\n      inventoryPromise,\n      networkPromise,\n      powerPromise,\n      quicklinksPromise,\n      serverPromise,\n    ];\n    if (this.showDumps) promises.push(dumpsPromise);\n    Promise.all(promises).finally(() => this.endLoader());\n  },\n};\n</script>\n"]}]}