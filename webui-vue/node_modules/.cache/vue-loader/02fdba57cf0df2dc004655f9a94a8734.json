{"remainingRequest":"/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/node_modules/vue-loader/dist/index.js??ruleSet[0].use[1]!/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/node_modules/vue-svg-inline-loader/src/index.js!/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/src/views/Logs/PostCodeLogs/PostCodeLogs.vue?vue&type=template&id=b003efee","dependencies":[{"path":"/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/src/views/Logs/PostCodeLogs/PostCodeLogs.vue","mtime":1749201729612},{"path":"/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/node_modules/babel-loader/lib/index.js","mtime":1750686226660},{"path":"/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/node_modules/vue-loader/dist/templateLoader.js","mtime":1750686215536},{"path":"/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/node_modules/cache-loader/dist/cjs.js","mtime":1750686218200},{"path":"/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/node_modules/vue-loader/dist/index.js","mtime":1750686215328},{"path":"/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/node_modules/vue-svg-inline-loader/src/index.js","mtime":1750686215304}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgPGItY29udGFpbmVyIGZsdWlkPSJ4bCI+CiAgICA8cGFnZS10aXRsZSAvPgogICAgPGItcm93IGNsYXNzPSJhbGlnbi1pdGVtcy1zdGFydCI+CiAgICAgIDxiLWNvbCBzbT0iOCIgeGw9IjYiIGNsYXNzPSJkLXNtLWZsZXggYWxpZ24taXRlbXMtZW5kIG1iLTQiPgogICAgICAgIDxzZWFyY2gKICAgICAgICAgIDpwbGFjZWhvbGRlcj0iJHQoJ3BhZ2VQb3N0Q29kZUxvZ3MudGFibGUuc2VhcmNoTG9ncycpIgogICAgICAgICAgQGNoYW5nZS1zZWFyY2g9Im9uQ2hhbmdlU2VhcmNoSW5wdXQiCiAgICAgICAgICBAY2xlYXItc2VhcmNoPSJvbkNsZWFyU2VhcmNoSW5wdXQiCiAgICAgICAgLz4KICAgICAgICA8ZGl2IGNsYXNzPSJtbC1zbS00Ij4KICAgICAgICAgIDx0YWJsZS1jZWxsLWNvdW50CiAgICAgICAgICAgIDpmaWx0ZXJlZC1pdGVtcy1jb3VudD0iZmlsdGVyZWRSb3dzIgogICAgICAgICAgICA6dG90YWwtbnVtYmVyLW9mLWNlbGxzPSJhbGxMb2dzLmxlbmd0aCIKICAgICAgICAgID48L3RhYmxlLWNlbGwtY291bnQ+CiAgICAgICAgPC9kaXY+CiAgICAgIDwvYi1jb2w+CiAgICAgIDxiLWNvbCBzbT0iOCIgbWQ9IjciIHhsPSI2Ij4KICAgICAgICA8dGFibGUtZGF0ZS1maWx0ZXIgQGNoYW5nZT0ib25DaGFuZ2VEYXRlVGltZUZpbHRlciIgLz4KICAgICAgPC9iLWNvbD4KICAgIDwvYi1yb3c+CiAgICA8Yi1yb3c+CiAgICAgIDxiLWNvbCB4bD0iMTIiIGNsYXNzPSJ0ZXh0LXJpZ2h0Ij4KICAgICAgICA8Yi1idXR0b24KICAgICAgICAgIHZhcmlhbnQ9ImxpbmsiCiAgICAgICAgICA6ZGlzYWJsZWQ9ImFsbExvZ3MubGVuZ3RoID09PSAwIgogICAgICAgICAgQGNsaWNrPSJkZWxldGVBbGxMb2dzIgogICAgICAgID4KICAgICAgICAgIDxpY29uLWRlbGV0ZSAvPiB7eyAkdCgnZ2xvYmFsLmFjdGlvbi5kZWxldGVBbGwnKSB9fQogICAgICAgIDwvYi1idXR0b24+CiAgICAgICAgPGItYnV0dG9uCiAgICAgICAgICB2YXJpYW50PSJwcmltYXJ5IgogICAgICAgICAgOmRpc2FibGVkPSJhbGxMb2dzLmxlbmd0aCA9PT0gMCIKICAgICAgICAgIDpkb3dubG9hZD0iZXhwb3J0RmlsZU5hbWVCeURhdGUoKSIKICAgICAgICAgIDpocmVmPSJocmVmIgogICAgICAgID4KICAgICAgICAgIDxpY29uLWV4cG9ydCAvPiB7eyAkdCgncGFnZVBvc3RDb2RlTG9ncy5idXR0b24uZXhwb3J0QWxsJykgfX0KICAgICAgICA8L2ItYnV0dG9uPgogICAgICA8L2ItY29sPgogICAgPC9iLXJvdz4KICAgIDxiLXJvdz4KICAgICAgPGItY29sPgogICAgICAgIDx0YWJsZS10b29sYmFyCiAgICAgICAgICByZWY9InRvb2xiYXIiCiAgICAgICAgICA6c2VsZWN0ZWQtaXRlbXMtY291bnQ9InNlbGVjdGVkUm93cy5sZW5ndGgiCiAgICAgICAgICBAY2xlYXItc2VsZWN0ZWQ9ImNsZWFyU2VsZWN0ZWRSb3dzKCRyZWZzLnRhYmxlKSIKICAgICAgICA+CiAgICAgICAgICA8dGVtcGxhdGUgI3Rvb2xiYXItYnV0dG9ucz4KICAgICAgICAgICAgPHRhYmxlLXRvb2xiYXItZXhwb3J0CiAgICAgICAgICAgICAgOmRhdGE9ImJhdGNoRXhwb3J0RGF0YSIKICAgICAgICAgICAgICA6ZmlsZS1uYW1lPSJleHBvcnRGaWxlTmFtZUJ5RGF0ZSgpIgogICAgICAgICAgICAvPgogICAgICAgICAgPC90ZW1wbGF0ZT4KICAgICAgICA8L3RhYmxlLXRvb2xiYXI+CiAgICAgICAgPGItdGFibGUKICAgICAgICAgIGlkPSJ0YWJsZS1wb3N0LWNvZGUtbG9ncyIKICAgICAgICAgIHJlZj0idGFibGUiCiAgICAgICAgICByZXNwb25zaXZlPSJtZCIKICAgICAgICAgIHNlbGVjdGFibGUKICAgICAgICAgIG5vLXNlbGVjdC1vbi1jbGljawogICAgICAgICAgc29ydC1pY29uLWxlZnQKICAgICAgICAgIGhvdmVyCiAgICAgICAgICBuby1zb3J0LXJlc2V0CiAgICAgICAgICBzb3J0LWRlc2MKICAgICAgICAgIHNob3ctZW1wdHkKICAgICAgICAgIHNvcnQtYnk9ImlkIgogICAgICAgICAgOmZpZWxkcz0iZmllbGRzIgogICAgICAgICAgOml0ZW1zPSJmaWx0ZXJlZExvZ3MiCiAgICAgICAgICA6ZW1wdHktdGV4dD0iJHQoJ2dsb2JhbC50YWJsZS5lbXB0eU1lc3NhZ2UnKSIKICAgICAgICAgIDplbXB0eS1maWx0ZXJlZC10ZXh0PSIkdCgnZ2xvYmFsLnRhYmxlLmVtcHR5U2VhcmNoTWVzc2FnZScpIgogICAgICAgICAgOnBlci1wYWdlPSJwZXJQYWdlIgogICAgICAgICAgOmN1cnJlbnQtcGFnZT0iY3VycmVudFBhZ2UiCiAgICAgICAgICA6ZmlsdGVyPSJzZWFyY2hGaWx0ZXIiCiAgICAgICAgICA6YnVzeT0iaXNCdXN5IgogICAgICAgICAgQGZpbHRlcmVkPSJvbkZpbHRlcmVkIgogICAgICAgICAgQHJvdy1zZWxlY3RlZD0ib25Sb3dTZWxlY3RlZCgkZXZlbnQsIGZpbHRlcmVkTG9ncy5sZW5ndGgpIgogICAgICAgID4KICAgICAgICAgIDwhLS0gQ2hlY2tib3ggY29sdW1uIC0tPgogICAgICAgICAgPHRlbXBsYXRlICNoZWFkKGNoZWNrYm94KT4KICAgICAgICAgICAgPGItZm9ybS1jaGVja2JveAogICAgICAgICAgICAgIHYtbW9kZWw9InRhYmxlSGVhZGVyQ2hlY2tib3hNb2RlbCIKICAgICAgICAgICAgICBkYXRhLXRlc3QtaWQ9InBvc3RDb2RlLWNoZWNrYm94LXNlbGVjdEFsbCIKICAgICAgICAgICAgICA6aW5kZXRlcm1pbmF0ZT0idGFibGVIZWFkZXJDaGVja2JveEluZGV0ZXJtaW5hdGUiCiAgICAgICAgICAgICAgQGNoYW5nZT0ib25DaGFuZ2VIZWFkZXJDaGVja2JveCgkcmVmcy50YWJsZSkiCiAgICAgICAgICAgID4KICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic3Itb25seSI+e3sgJHQoJ2dsb2JhbC50YWJsZS5zZWxlY3RBbGwnKSB9fTwvc3Bhbj4KICAgICAgICAgICAgPC9iLWZvcm0tY2hlY2tib3g+CiAgICAgICAgICA8L3RlbXBsYXRlPgogICAgICAgICAgPHRlbXBsYXRlICNjZWxsKGNoZWNrYm94KT0icm93Ij4KICAgICAgICAgICAgPGItZm9ybS1jaGVja2JveAogICAgICAgICAgICAgIHYtbW9kZWw9InJvdy5yb3dTZWxlY3RlZCIKICAgICAgICAgICAgICA6ZGF0YS10ZXN0LWlkPSJgcG9zdENvZGUtY2hlY2tib3gtc2VsZWN0Um93LSR7cm93LmluZGV4fWAiCiAgICAgICAgICAgICAgQGNoYW5nZT0idG9nZ2xlU2VsZWN0Um93KCRyZWZzLnRhYmxlLCByb3cuaW5kZXgpIgogICAgICAgICAgICA+CiAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InNyLW9ubHkiPnt7ICR0KCdnbG9iYWwudGFibGUuc2VsZWN0SXRlbScpIH19PC9zcGFuPgogICAgICAgICAgICA8L2ItZm9ybS1jaGVja2JveD4KICAgICAgICAgIDwvdGVtcGxhdGU+CiAgICAgICAgICA8IS0tIERhdGUgY29sdW1uIC0tPgogICAgICAgICAgPHRlbXBsYXRlICNjZWxsKGRhdGUpPSJ7IHZhbHVlIH0iPgogICAgICAgICAgICA8cCBjbGFzcz0ibWItMCI+e3sgJGZpbHRlcnMuZm9ybWF0RGF0ZSh2YWx1ZSkgfX08L3A+CiAgICAgICAgICAgIDxwIGNsYXNzPSJtYi0wIj57eyAkZmlsdGVycy5mb3JtYXRUaW1lKHZhbHVlKSB9fTwvcD4KICAgICAgICAgIDwvdGVtcGxhdGU+CgogICAgICAgICAgPCEtLSBBY3Rpb25zIGNvbHVtbiAtLT4KICAgICAgICAgIDx0ZW1wbGF0ZSAjY2VsbChhY3Rpb25zKT0icm93Ij4KICAgICAgICAgICAgPHRhYmxlLXJvdy1hY3Rpb24KICAgICAgICAgICAgICB2LWZvcj0iKGFjdGlvbiwgaW5kZXgpIGluIHJvdy5pdGVtLmFjdGlvbnMiCiAgICAgICAgICAgICAgOmtleT0iaW5kZXgiCiAgICAgICAgICAgICAgOnZhbHVlPSJhY3Rpb24udmFsdWUiCiAgICAgICAgICAgICAgOnRpdGxlPSJhY3Rpb24udGl0bGUiCiAgICAgICAgICAgICAgOnJvdy1kYXRhPSJyb3cuaXRlbSIKICAgICAgICAgICAgICA6YnRuLWljb24tb25seT0idHJ1ZSIKICAgICAgICAgICAgICA6ZXhwb3J0LW5hbWU9ImV4cG9ydEZpbGVOYW1lQnlEYXRlKGFjdGlvbi52YWx1ZSkiCiAgICAgICAgICAgICAgOmRvd25sb2FkLWxvY2F0aW9uPSJyb3cuaXRlbS51cmkiCiAgICAgICAgICAgICAgOmRvd25sb2FkLWluLW5ldy10YWI9InRydWUiCiAgICAgICAgICAgICAgOnNob3ctYnV0dG9uPSJmYWxzZSIKICAgICAgICAgICAgPgogICAgICAgICAgICAgIDx0ZW1wbGF0ZSAjaWNvbj4KICAgICAgICAgICAgICAgIDxpY29uLWV4cG9ydCB2LWlmPSJhY3Rpb24udmFsdWUgPT09ICdleHBvcnQnIiAvPgogICAgICAgICAgICAgICAgPGljb24tZG93bmxvYWQgdi1pZj0iYWN0aW9uLnZhbHVlID09PSAnZG93bmxvYWQnIiAvPgogICAgICAgICAgICAgIDwvdGVtcGxhdGU+CiAgICAgICAgICAgIDwvdGFibGUtcm93LWFjdGlvbj4KICAgICAgICAgIDwvdGVtcGxhdGU+CiAgICAgICAgPC9iLXRhYmxlPgogICAgICA8L2ItY29sPgogICAgPC9iLXJvdz4KCiAgICA8IS0tIFRhYmxlIHBhZ2luYXRpb24gLS0+CiAgICA8Yi1yb3c+CiAgICAgIDxiLWNvbCBzbT0iNiI+CiAgICAgICAgPGItZm9ybS1ncm91cAogICAgICAgICAgY2xhc3M9InRhYmxlLXBhZ2luYXRpb24tc2VsZWN0IgogICAgICAgICAgOmxhYmVsPSIkdCgnZ2xvYmFsLnRhYmxlLml0ZW1zUGVyUGFnZScpIgogICAgICAgICAgbGFiZWwtZm9yPSJwYWdpbmF0aW9uLWl0ZW1zLXBlci1wYWdlIgogICAgICAgID4KICAgICAgICAgIDxiLWZvcm0tc2VsZWN0CiAgICAgICAgICAgIGlkPSJwYWdpbmF0aW9uLWl0ZW1zLXBlci1wYWdlIgogICAgICAgICAgICB2LW1vZGVsPSJwZXJQYWdlIgogICAgICAgICAgICA6b3B0aW9ucz0iaXRlbXNQZXJQYWdlT3B0aW9ucyIKICAgICAgICAgIC8+CiAgICAgICAgPC9iLWZvcm0tZ3JvdXA+CiAgICAgIDwvYi1jb2w+CiAgICAgIDxiLWNvbCBzbT0iNiI+CiAgICAgICAgPGItcGFnaW5hdGlvbgogICAgICAgICAgdi1tb2RlbD0iY3VycmVudFBhZ2UiCiAgICAgICAgICBmaXJzdC1udW1iZXIKICAgICAgICAgIGxhc3QtbnVtYmVyCiAgICAgICAgICA6cGVyLXBhZ2U9InBlclBhZ2UiCiAgICAgICAgICA6dG90YWwtcm93cz0iZ2V0VG90YWxSb3dDb3VudChmaWx0ZXJlZFJvd3MpIgogICAgICAgICAgYXJpYS1jb250cm9scz0idGFibGUtcG9zdC1jb2RlLWxvZ3MiCiAgICAgICAgLz4KICAgICAgPC9iLWNvbD4KICAgIDwvYi1yb3c+CiAgPC9iLWNvbnRhaW5lcj4K"},{"version":3,"sources":["/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/src/views/Logs/PostCodeLogs/PostCodeLogs.vue"],"names":[],"mappings":"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AAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;cACzD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAClD;cACE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACjE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACV,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;UACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;YAC/B,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,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","file":"/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/src/views/Logs/PostCodeLogs/PostCodeLogs.vue","sourceRoot":"","sourcesContent":["<template>\n  <b-container fluid=\"xl\">\n    <page-title />\n    <b-row class=\"align-items-start\">\n      <b-col sm=\"8\" xl=\"6\" class=\"d-sm-flex align-items-end mb-4\">\n        <search\n          :placeholder=\"$t('pagePostCodeLogs.table.searchLogs')\"\n          @change-search=\"onChangeSearchInput\"\n          @clear-search=\"onClearSearchInput\"\n        />\n        <div class=\"ml-sm-4\">\n          <table-cell-count\n            :filtered-items-count=\"filteredRows\"\n            :total-number-of-cells=\"allLogs.length\"\n          ></table-cell-count>\n        </div>\n      </b-col>\n      <b-col sm=\"8\" md=\"7\" xl=\"6\">\n        <table-date-filter @change=\"onChangeDateTimeFilter\" />\n      </b-col>\n    </b-row>\n    <b-row>\n      <b-col xl=\"12\" class=\"text-right\">\n        <b-button\n          variant=\"link\"\n          :disabled=\"allLogs.length === 0\"\n          @click=\"deleteAllLogs\"\n        >\n          <icon-delete /> {{ $t('global.action.deleteAll') }}\n        </b-button>\n        <b-button\n          variant=\"primary\"\n          :disabled=\"allLogs.length === 0\"\n          :download=\"exportFileNameByDate()\"\n          :href=\"href\"\n        >\n          <icon-export /> {{ $t('pagePostCodeLogs.button.exportAll') }}\n        </b-button>\n      </b-col>\n    </b-row>\n    <b-row>\n      <b-col>\n        <table-toolbar\n          ref=\"toolbar\"\n          :selected-items-count=\"selectedRows.length\"\n          @clear-selected=\"clearSelectedRows($refs.table)\"\n        >\n          <template #toolbar-buttons>\n            <table-toolbar-export\n              :data=\"batchExportData\"\n              :file-name=\"exportFileNameByDate()\"\n            />\n          </template>\n        </table-toolbar>\n        <b-table\n          id=\"table-post-code-logs\"\n          ref=\"table\"\n          responsive=\"md\"\n          selectable\n          no-select-on-click\n          sort-icon-left\n          hover\n          no-sort-reset\n          sort-desc\n          show-empty\n          sort-by=\"id\"\n          :fields=\"fields\"\n          :items=\"filteredLogs\"\n          :empty-text=\"$t('global.table.emptyMessage')\"\n          :empty-filtered-text=\"$t('global.table.emptySearchMessage')\"\n          :per-page=\"perPage\"\n          :current-page=\"currentPage\"\n          :filter=\"searchFilter\"\n          :busy=\"isBusy\"\n          @filtered=\"onFiltered\"\n          @row-selected=\"onRowSelected($event, filteredLogs.length)\"\n        >\n          <!-- Checkbox column -->\n          <template #head(checkbox)>\n            <b-form-checkbox\n              v-model=\"tableHeaderCheckboxModel\"\n              data-test-id=\"postCode-checkbox-selectAll\"\n              :indeterminate=\"tableHeaderCheckboxIndeterminate\"\n              @change=\"onChangeHeaderCheckbox($refs.table)\"\n            >\n              <span class=\"sr-only\">{{ $t('global.table.selectAll') }}</span>\n            </b-form-checkbox>\n          </template>\n          <template #cell(checkbox)=\"row\">\n            <b-form-checkbox\n              v-model=\"row.rowSelected\"\n              :data-test-id=\"`postCode-checkbox-selectRow-${row.index}`\"\n              @change=\"toggleSelectRow($refs.table, row.index)\"\n            >\n              <span class=\"sr-only\">{{ $t('global.table.selectItem') }}</span>\n            </b-form-checkbox>\n          </template>\n          <!-- Date column -->\n          <template #cell(date)=\"{ value }\">\n            <p class=\"mb-0\">{{ $filters.formatDate(value) }}</p>\n            <p class=\"mb-0\">{{ $filters.formatTime(value) }}</p>\n          </template>\n\n          <!-- Actions column -->\n          <template #cell(actions)=\"row\">\n            <table-row-action\n              v-for=\"(action, index) in row.item.actions\"\n              :key=\"index\"\n              :value=\"action.value\"\n              :title=\"action.title\"\n              :row-data=\"row.item\"\n              :btn-icon-only=\"true\"\n              :export-name=\"exportFileNameByDate(action.value)\"\n              :download-location=\"row.item.uri\"\n              :download-in-new-tab=\"true\"\n              :show-button=\"false\"\n            >\n              <template #icon>\n                <icon-export v-if=\"action.value === 'export'\" />\n                <icon-download v-if=\"action.value === 'download'\" />\n              </template>\n            </table-row-action>\n          </template>\n        </b-table>\n      </b-col>\n    </b-row>\n\n    <!-- Table pagination -->\n    <b-row>\n      <b-col sm=\"6\">\n        <b-form-group\n          class=\"table-pagination-select\"\n          :label=\"$t('global.table.itemsPerPage')\"\n          label-for=\"pagination-items-per-page\"\n        >\n          <b-form-select\n            id=\"pagination-items-per-page\"\n            v-model=\"perPage\"\n            :options=\"itemsPerPageOptions\"\n          />\n        </b-form-group>\n      </b-col>\n      <b-col sm=\"6\">\n        <b-pagination\n          v-model=\"currentPage\"\n          first-number\n          last-number\n          :per-page=\"perPage\"\n          :total-rows=\"getTotalRowCount(filteredRows)\"\n          aria-controls=\"table-post-code-logs\"\n        />\n      </b-col>\n    </b-row>\n  </b-container>\n</template>\n\n<script>\nimport IconDelete from '@carbon/icons-vue/es/trash-can/20';\nimport IconDownload from '@carbon/icons-vue/es/download/20';\nimport IconExport from '@carbon/icons-vue/es/document--export/20';\nimport { omit } from 'lodash';\nimport PageTitle from '@/components/Global/PageTitle';\nimport Search from '@/components/Global/Search';\nimport TableCellCount from '@/components/Global/TableCellCount';\nimport TableDateFilter from '@/components/Global/TableDateFilter';\nimport TableRowAction from '@/components/Global/TableRowAction';\nimport TableToolbar from '@/components/Global/TableToolbar';\nimport TableToolbarExport from '@/components/Global/TableToolbarExport';\nimport LoadingBarMixin from '@/components/Mixins/LoadingBarMixin';\nimport TableFilterMixin from '@/components/Mixins/TableFilterMixin';\nimport BVPaginationMixin, {\n  currentPage,\n  perPage,\n  itemsPerPageOptions,\n} from '@/components/Mixins/BVPaginationMixin';\nimport BVTableSelectableMixin, {\n  selectedRows,\n  tableHeaderCheckboxModel,\n  tableHeaderCheckboxIndeterminate,\n} from '@/components/Mixins/BVTableSelectableMixin';\nimport BVToastMixin from '@/components/Mixins/BVToastMixin';\nimport TableSortMixin from '@/components/Mixins/TableSortMixin';\nimport TableRowExpandMixin, {\n  expandRowLabel,\n} from '@/components/Mixins/TableRowExpandMixin';\nimport SearchFilterMixin, {\n  searchFilter,\n} from '@/components/Mixins/SearchFilterMixin';\nimport { useI18n } from 'vue-i18n';\nimport i18n from '@/i18n';\n\nexport default {\n  components: {\n    IconDelete,\n    IconExport,\n    IconDownload,\n    PageTitle,\n    Search,\n    TableCellCount,\n    TableRowAction,\n    TableToolbar,\n    TableToolbarExport,\n    TableDateFilter,\n  },\n  mixins: [\n    BVPaginationMixin,\n    BVTableSelectableMixin,\n    BVToastMixin,\n    LoadingBarMixin,\n    TableFilterMixin,\n    TableSortMixin,\n    TableRowExpandMixin,\n    SearchFilterMixin,\n  ],\n  beforeRouteLeave(to, from, next) {\n    // Hide loader if the user navigates to another page\n    // before request is fulfilled.\n    this.hideLoader();\n    next();\n  },\n  data() {\n    return {\n      $t: useI18n().t,\n      isBusy: true,\n      fields: [\n        {\n          key: 'checkbox',\n          sortable: false,\n        },\n        {\n          key: 'date',\n          label: i18n.global.t('pagePostCodeLogs.table.created'),\n          sortable: true,\n        },\n        {\n          key: 'timeStampOffset',\n          label: i18n.global.t('pagePostCodeLogs.table.timeStampOffset'),\n        },\n        {\n          key: 'bootCount',\n          label: i18n.global.t('pagePostCodeLogs.table.bootCount'),\n        },\n        {\n          key: 'postCode',\n          label: i18n.global.t('pagePostCodeLogs.table.postCode'),\n        },\n        {\n          key: 'actions',\n          label: '',\n          tdClass: 'text-right text-nowrap',\n        },\n      ],\n      expandRowLabel,\n      activeFilters: [],\n      currentPage: currentPage,\n      filterStartDate: null,\n      filterEndDate: null,\n      itemsPerPageOptions: itemsPerPageOptions,\n      perPage: perPage,\n      searchFilter: searchFilter,\n      searchTotalFilteredRows: 0,\n      selectedRows: selectedRows,\n      tableHeaderCheckboxModel: tableHeaderCheckboxModel,\n      tableHeaderCheckboxIndeterminate: tableHeaderCheckboxIndeterminate,\n    };\n  },\n  computed: {\n    href() {\n      return `data:text/json;charset=utf-8,${this.exportAllLogsString()}`;\n    },\n    filteredRows() {\n      return this.searchFilter\n        ? this.searchTotalFilteredRows\n        : this.filteredLogs.length;\n    },\n    allLogs() {\n      return this.$store.getters['postCodeLogs/allPostCodes'].map(\n        (postCodes) => {\n          return {\n            ...postCodes,\n            actions: [\n              {\n                value: 'export',\n                title: i18n.global.t('pagePostCodeLogs.action.exportLogs'),\n              },\n              {\n                value: 'download',\n                title: i18n.global.t('pagePostCodeLogs.action.downloadDetails'),\n              },\n            ],\n          };\n        },\n      );\n    },\n    batchExportData() {\n      return this.selectedRows.map((row) => omit(row, 'actions'));\n    },\n    filteredLogsByDate() {\n      return this.getFilteredTableDataByDate(\n        this.allLogs,\n        this.filterStartDate,\n        this.filterEndDate,\n      );\n    },\n    filteredLogs() {\n      return this.getFilteredTableData(\n        this.filteredLogsByDate,\n        this.activeFilters,\n      );\n    },\n  },\n  created() {\n    this.startLoader();\n    this.$store.dispatch('postCodeLogs/getPostCodesLogData').finally(() => {\n      this.endLoader();\n      this.isBusy = false;\n    });\n  },\n  methods: {\n    deleteAllLogs() {\n      this.$bvModal\n        .msgBoxConfirm(i18n.global.t('pageEventLogs.modal.deleteAllMessage'), {\n          title: i18n.global.t('pageEventLogs.modal.deleteAllTitle'),\n          okTitle: i18n.global.t('global.action.delete'),\n          okVariant: 'danger',\n          cancelTitle: i18n.global.t('global.action.cancel'),\n          autoFocusButton: 'cancel',\n        })\n        .then((deleteConfirmed) => {\n          if (deleteConfirmed) {\n            this.$store\n              .dispatch('postCodeLogs/deleteAllPostCodeLogs', this.allLogs)\n              .then((message) => this.successToast(message))\n              .catch(({ message }) => this.errorToast(message));\n          }\n        });\n    },\n    exportAllLogsString() {\n      {\n        return this.$store.getters['postCodeLogs/allPostCodes'].map(\n          (postCodes) => {\n            const allLogsString = JSON.stringify(postCodes);\n            return allLogsString;\n          },\n        );\n      }\n    },\n    onFilterChange({ activeFilters }) {\n      this.activeFilters = activeFilters;\n    },\n    onChangeDateTimeFilter({ fromDate, toDate }) {\n      this.filterStartDate = fromDate;\n      this.filterEndDate = toDate;\n    },\n    onFiltered(filteredItems) {\n      this.searchTotalFilteredRows = filteredItems.length;\n    },\n    // Create export file name based on date and action\n    exportFileNameByDate(value) {\n      let date = new Date();\n      date =\n        date.toISOString().slice(0, 10) +\n        '_' +\n        date.toString().split(':').join('-').split(' ')[4];\n      let fileName;\n      if (value === 'download') {\n        fileName = i18n.global.t('pagePostCodeLogs.downloadFilePrefix');\n      } else if (value === 'export') {\n        fileName = i18n.global.t('pagePostCodeLogs.exportFilePrefix');\n      } else {\n        fileName = i18n.global.t('pagePostCodeLogs.allExportFilePrefix');\n      }\n      return fileName + date;\n    },\n  },\n};\n</script>\n"]}]}