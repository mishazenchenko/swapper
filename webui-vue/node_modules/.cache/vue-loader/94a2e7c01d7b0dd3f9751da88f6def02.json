{"remainingRequest":"/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/node_modules/vue-loader/dist/index.js??ruleSet[0].use[1]!/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/node_modules/vue-svg-inline-loader/src/index.js!/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/src/layouts/AppLayout.vue?vue&type=template&id=5b01577c&scoped=true","dependencies":[{"path":"/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/src/layouts/AppLayout.vue","mtime":1749201729608},{"path":"/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/node_modules/babel-loader/lib/index.js","mtime":1750686226660},{"path":"/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/node_modules/vue-loader/dist/templateLoader.js","mtime":1750686215536},{"path":"/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/node_modules/cache-loader/dist/cjs.js","mtime":1750686218200},{"path":"/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/node_modules/vue-loader/dist/index.js","mtime":1750686215328},{"path":"/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/node_modules/vue-svg-inline-loader/src/index.js","mtime":1750686215304}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgPGRpdiBjbGFzcz0iYXBwLWNvbnRhaW5lciI+CiAgICA8YXBwLWhlYWRlcgogICAgICByZWY9ImZvY3VzVGFyZ2V0IgogICAgICBjbGFzcz0iYXBwLWhlYWRlciIKICAgICAgOnJvdXRlci1rZXk9InJvdXRlcktleSIKICAgICAgQHJlZnJlc2g9InJlZnJlc2giCiAgICAvPgogICAgPGFwcC1uYXZpZ2F0aW9uIGNsYXNzPSJhcHAtbmF2aWdhdGlvbiIgLz4KICAgIDxwYWdlLWNvbnRhaW5lciBjbGFzcz0iYXBwLWNvbnRlbnQiPgogICAgICA8cm91dGVyLXZpZXcgcmVmPSJyb3V0ZXJWaWV3IiA6a2V5PSJyb3V0ZXJLZXkiIC8+CiAgICAgIDwhLS0gU2Nyb2xsIHRvIHRvcCBidXR0b24gLS0+CiAgICAgIDxidXR0b24tYmFjay10by10b3AgLz4KICAgIDwvcGFnZS1jb250YWluZXI+CiAgPC9kaXY+Cg=="},{"version":3,"sources":["/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/src/layouts/AppLayout.vue"],"names":[],"mappings":";EACE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC;IACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IACxC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;MAChD,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;MAC5B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAClB,CAAC,CAAC,CAAC,CAAC,CAAC","file":"/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/src/layouts/AppLayout.vue","sourceRoot":"","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <app-header\n      ref=\"focusTarget\"\n      class=\"app-header\"\n      :router-key=\"routerKey\"\n      @refresh=\"refresh\"\n    />\n    <app-navigation class=\"app-navigation\" />\n    <page-container class=\"app-content\">\n      <router-view ref=\"routerView\" :key=\"routerKey\" />\n      <!-- Scroll to top button -->\n      <button-back-to-top />\n    </page-container>\n  </div>\n</template>\n\n<script>\nimport AppHeader from '@/components/AppHeader';\nimport AppNavigation from '@/components/AppNavigation';\nimport PageContainer from '@/components/Global/PageContainer';\nimport ButtonBackToTop from '@/components/Global/ButtonBackToTop';\nimport JumpLinkMixin from '@/components/Mixins/JumpLinkMixin';\n\nexport default {\n  name: 'App',\n  components: {\n    AppHeader,\n    AppNavigation,\n    PageContainer,\n    ButtonBackToTop,\n  },\n  mixins: [JumpLinkMixin],\n  data() {\n    return {\n      routerKey: 0,\n    };\n  },\n  watch: {\n    $route: function () {\n      this.$nextTick(function () {\n        this.setFocus(this.$refs.focusTarget.$el);\n      });\n    },\n  },\n  mounted() {\n    this.$root.$on('refresh-application', () => this.refresh());\n    setInterval(() => {\n      if (!localStorage.getItem('storedUsername')) {\n        this.$eventBus.$consoleWindow?.close();\n        this.refresh();\n      }\n    }, 10000);\n  },\n  methods: {\n    refresh() {\n      // Clear all toast messages\n      document.querySelectorAll('.toast').forEach((toast) => {\n        const toastId = toast.id;\n        if (toastId) {\n          this.$bvToast.hide(toastId);\n        }\n      });\n      // Changing the component :key value will trigger\n      // a component re-rendering and 'refresh' the view\n      this.routerKey += 1;\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import '@/assets/styles/bmc/helpers/_index.scss';\n@import '@/assets/styles/bootstrap/_helpers.scss';\n\n.app-container {\n  display: grid;\n  grid-template-columns: 100%;\n  grid-template-rows: auto;\n  grid-template-areas:\n    'header'\n    'content';\n\n  @include media-breakpoint-up($responsive-layout-bp) {\n    grid-template-columns: $navigation-width 1fr;\n    grid-template-areas:\n      'header header'\n      'navigation content';\n  }\n}\n\n.app-header {\n  grid-area: header;\n  position: sticky;\n  top: 0;\n  z-index: $zindex-fixed + 1;\n}\n\n.app-navigation {\n  grid-area: navigation;\n}\n\n.app-content {\n  grid-area: content;\n  background-color: $white;\n}\n</style>\n"]}]}