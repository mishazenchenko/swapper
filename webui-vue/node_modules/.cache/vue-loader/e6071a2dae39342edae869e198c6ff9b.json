{"remainingRequest":"/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/node_modules/vue-loader/dist/index.js??ruleSet[0].use[1]!/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/node_modules/vue-svg-inline-loader/src/index.js!/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/src/views/Operations/Kvm/KvmConsole.vue?vue&type=style&index=1&id=060237db&lang=scss&scoped=true","dependencies":[{"path":"/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/src/views/Operations/Kvm/KvmConsole.vue","mtime":1749201729612},{"path":"/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js","mtime":1750686224404},{"path":"/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/node_modules/vue-loader/dist/stylePostLoader.js","mtime":1750686215520},{"path":"/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/node_modules/@vue/cli-service/node_modules/postcss-loader/dist/cjs.js","mtime":1750686224356},{"path":"/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/node_modules/sass-loader/dist/cjs.js","mtime":1750686215808},{"path":"/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/node_modules/cache-loader/dist/cjs.js","mtime":1750686218200},{"path":"/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/node_modules/vue-loader/dist/index.js","mtime":1750686215328},{"path":"/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/node_modules/vue-svg-inline-loader/src/index.js","mtime":1750686215304}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CkBpbXBvcnQgJ0AvYXNzZXRzL3N0eWxlcy9ibWMvaGVscGVycy9faW5kZXguc2Nzcyc7CkBpbXBvcnQgJ0AvYXNzZXRzL3N0eWxlcy9ib290c3RyYXAvX2hlbHBlcnMuc2Nzcyc7CgouYnV0dG9uLWN0cmwtYWx0LWRlbGV0ZSB7CiAgZmxvYXQ6IHJpZ2h0Owp9Cgoua3ZtLXN0YXR1cyB7CiAgcGFkZGluZy10b3A6ICRzcGFjZXIgLyAyOwogIHBhZGRpbmctbGVmdDogJHNwYWNlciAvIDQ7CiAgZGlzcGxheTogaW5saW5lLWJsb2NrOwp9CgoubWFyZ2luLWxlZnQtZnVsbC13aW5kb3cgewogIG1hcmdpbi1sZWZ0OiA1cHg7Cn0K"},{"version":3,"sources":["/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/src/views/Operations/Kvm/KvmConsole.vue"],"names":[],"mappings":";AAuLA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAEjD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACtB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AACd;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;EACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;EACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAClB","file":"/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/src/views/Operations/Kvm/KvmConsole.vue","sourceRoot":"","sourcesContent":["<template>\n  <div :class=\"marginClass\">\n    <div ref=\"toolbar\" class=\"kvm-toolbar\">\n      <b-row class=\"d-flex\">\n        <b-col class=\"d-flex flex-column justify-content-end\" cols=\"4\">\n          <dl class=\"mb-2\" sm=\"2\" md=\"2\">\n            <dt class=\"d-inline font-weight-bold mr-1\">\n              {{ $t('pageKvm.status') }}:\n            </dt>\n            <dd class=\"d-inline\">\n              <status-icon :status=\"serverStatusIcon\" />\n              <span class=\"d-none d-md-inline\"> {{ serverStatus }}</span>\n            </dd>\n          </dl>\n        </b-col>\n\n        <b-col class=\"d-flex justify-content-end pr-1\">\n          <b-button\n            v-if=\"isConnected\"\n            variant=\"link\"\n            type=\"button\"\n            @click=\"sendCtrlAltDel\"\n          >\n            <icon-arrow-down />\n            {{ $t('pageKvm.buttonCtrlAltDelete') }}\n          </b-button>\n          <b-button\n            v-if=\"!isFullWindow\"\n            variant=\"link\"\n            type=\"button\"\n            @click=\"openConsoleWindow()\"\n          >\n            <icon-launch />\n            {{ $t('pageKvm.openNewTab') }}\n          </b-button>\n        </b-col>\n      </b-row>\n    </div>\n    <div id=\"terminal-kvm\" ref=\"panel\" :class=\"terminalClass\"></div>\n  </div>\n</template>\n\n<script>\nimport RFB from '@novnc/novnc/core/rfb';\nimport StatusIcon from '@/components/Global/StatusIcon';\nimport IconLaunch from '@carbon/icons-vue/es/launch/20';\nimport IconArrowDown from '@carbon/icons-vue/es/arrow--down/16';\nimport { throttle } from 'lodash';\nimport { useI18n } from 'vue-i18n';\nimport i18n from '@/i18n';\n\nconst Connecting = 0;\nconst Connected = 1;\nconst Disconnected = 2;\n\nexport default {\n  name: 'KvmConsole',\n  components: { StatusIcon, IconLaunch, IconArrowDown },\n  props: {\n    isFullWindow: {\n      type: Boolean,\n      default: true,\n    },\n  },\n  data() {\n    return {\n      $t: useI18n().t,\n      rfb: null,\n      isConnected: false,\n      terminalClass: this.isFullWindow ? 'full-window' : '',\n      marginClass: this.isFullWindow ? 'margin-left-full-window' : '',\n      status: Connecting,\n      convasRef: null,\n      resizeKvmWindow: null,\n    };\n  },\n  computed: {\n    serverStatusIcon() {\n      if (this.status === Connected) {\n        return 'success';\n      } else if (this.status === Disconnected) {\n        return 'danger';\n      }\n      return 'secondary';\n    },\n    serverStatus() {\n      if (this.status === Connected) {\n        return i18n.global.t('pageKvm.connected');\n      } else if (this.status === Disconnected) {\n        return i18n.global.t('pageKvm.disconnected');\n      }\n      return i18n.global.t('pageKvm.connecting');\n    },\n  },\n  created() {\n    this.$store.dispatch('global/getSystemInfo');\n  },\n  mounted() {\n    this.openTerminal();\n  },\n  beforeUnmount() {\n    window.removeEventListener('resize', this.resizeKvmWindow);\n    this.closeTerminal();\n  },\n  methods: {\n    sendCtrlAltDel() {\n      this.rfb.sendCtrlAltDel();\n    },\n    closeTerminal() {\n      this.rfb.disconnect();\n      this.rfb = null;\n    },\n    openTerminal() {\n      const token = this.$store.getters['authentication/token'];\n      this.rfb = new RFB(\n        this.$refs.panel,\n        `wss://${window.location.host}/kvm/0`,\n        { wsProtocols: [token] },\n      );\n\n      this.rfb.scaleViewport = true;\n      this.rfb.clipViewport = true;\n      const that = this;\n\n      this.resizeKvmWindow = throttle(() => {\n        setTimeout(that.setWidthToolbar, 0);\n      }, 1000);\n      window.addEventListener('resize', this.resizeKvmWindow);\n\n      this.rfb.addEventListener('connect', () => {\n        that.isConnected = true;\n        that.status = Connected;\n        that.setWidthToolbar();\n      });\n\n      this.rfb.addEventListener('disconnect', () => {\n        this.isConnected = false;\n        that.status = Disconnected;\n      });\n    },\n    setWidthToolbar() {\n      if (\n        this.$refs.panel.children &&\n        this.$refs.panel.children.length > 0 &&\n        this.$refs.panel.children[0].children.length > 0\n      ) {\n        this.$refs.toolbar.style.width =\n          this.$refs.panel.children[0].children[0].clientWidth - 10 + 'px';\n      }\n    },\n    openConsoleWindow() {\n      // If consoleWindow is not null\n      // Check the newly opened window is closed or not\n      if (this.$eventBus.$consoleWindow) {\n        // If window is not closed set focus to new window\n        // If window is closed, do open new window\n        if (!this.$eventBus.$consoleWindow.closed) {\n          this.$eventBus.$consoleWindow.focus();\n          return;\n        } else {\n          this.openNewWindow();\n        }\n      } else {\n        // If consoleWindow is null, open new window\n        this.openNewWindow();\n      }\n    },\n    openNewWindow() {\n      this.$eventBus.$consoleWindow = window.open(\n        '#/console/kvm',\n        'kvmConsoleWindow',\n        'directories=no,titlebar=no,toolbar=no,location=no,status=no,menubar=no,scrollbars=no,resizable=yes,width=700,height=550',\n      );\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\">\n@import '@/assets/styles/bmc/custom/_kvm.scss';\n</style>\n\n<style lang=\"scss\" scoped>\n@import '@/assets/styles/bmc/helpers/_index.scss';\n@import '@/assets/styles/bootstrap/_helpers.scss';\n\n.button-ctrl-alt-delete {\n  float: right;\n}\n\n.kvm-status {\n  padding-top: $spacer / 2;\n  padding-left: $spacer / 4;\n  display: inline-block;\n}\n\n.margin-left-full-window {\n  margin-left: 5px;\n}\n</style>\n"]}]}