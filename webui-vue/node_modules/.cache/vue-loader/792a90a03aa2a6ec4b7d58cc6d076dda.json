{"remainingRequest":"/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/node_modules/vue-loader/dist/index.js??ruleSet[0].use[1]!/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/node_modules/vue-svg-inline-loader/src/index.js!/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/src/views/Logs/Dumps/DumpsForm.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/src/views/Logs/Dumps/DumpsForm.vue","mtime":1749201729608},{"path":"/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/node_modules/babel-loader/lib/index.js","mtime":1750686226660},{"path":"/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/node_modules/cache-loader/dist/cjs.js","mtime":1750686218200},{"path":"/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/node_modules/vue-loader/dist/index.js","mtime":1750686215328},{"path":"/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/node_modules/vue-svg-inline-loader/src/index.js","mtime":1750686215304}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCB7IHVzZVZ1ZWxpZGF0ZSB9IGZyb20gJ0B2dWVsaWRhdGUvY29yZSc7CmltcG9ydCB7IHJlcXVpcmVkIH0gZnJvbSAnQHZ1ZWxpZGF0ZS92YWxpZGF0b3JzJzsKaW1wb3J0IE1vZGFsQ29uZmlybWF0aW9uIGZyb20gJy4vRHVtcHNNb2RhbENvbmZpcm1hdGlvbic7CmltcG9ydCBBbGVydCBmcm9tICdAL2NvbXBvbmVudHMvR2xvYmFsL0FsZXJ0JzsKaW1wb3J0IEJWVG9hc3RNaXhpbiBmcm9tICdAL2NvbXBvbmVudHMvTWl4aW5zL0JWVG9hc3RNaXhpbic7CmltcG9ydCBWdWVsaWRhdGVNaXhpbiBmcm9tICdAL2NvbXBvbmVudHMvTWl4aW5zL1Z1ZWxpZGF0ZU1peGluLmpzJzsKaW1wb3J0IGkxOG4gZnJvbSAnQC9pMThuJzsKaW1wb3J0IHsgdXNlSTE4biB9IGZyb20gJ3Z1ZS1pMThuJzsKCmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7IEFsZXJ0LCBNb2RhbENvbmZpcm1hdGlvbiB9LAogIG1peGluczogW0JWVG9hc3RNaXhpbiwgVnVlbGlkYXRlTWl4aW5dLAogIHNldHVwKCkgewogICAgcmV0dXJuIHsKICAgICAgdiQ6IHVzZVZ1ZWxpZGF0ZSgpLAogICAgfTsKICB9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICAkdDogdXNlSTE4bigpLnQsCiAgICAgIHNlbGVjdGVkRHVtcFR5cGU6IG51bGwsCiAgICAgIGR1bXBUeXBlT3B0aW9uczogWwogICAgICAgIHsgdmFsdWU6ICdibWMnLCB0ZXh0OiBpMThuLmdsb2JhbC50KCdwYWdlRHVtcHMuZm9ybS5ibWNEdW1wJykgfSwKICAgICAgICB7IHZhbHVlOiAnc3lzdGVtJywgdGV4dDogaTE4bi5nbG9iYWwudCgncGFnZUR1bXBzLmZvcm0uc3lzdGVtRHVtcCcpIH0sCiAgICAgIF0sCiAgICB9OwogIH0sCiAgdmFsaWRhdGlvbnMoKSB7CiAgICByZXR1cm4gewogICAgICBzZWxlY3RlZER1bXBUeXBlOiB7IHJlcXVpcmVkIH0sCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgaGFuZGxlU3VibWl0KCkgewogICAgICB0aGlzLnYkLiR0b3VjaCgpOwogICAgICBpZiAodGhpcy52JC4kaW52YWxpZCkgcmV0dXJuOwoKICAgICAgLy8gU3lzdGVtIGR1bXAgaW5pdGlhdGlvbgogICAgICBpZiAodGhpcy5zZWxlY3RlZER1bXBUeXBlID09PSAnc3lzdGVtJykgewogICAgICAgIHRoaXMuc2hvd0NvbmZpcm1hdGlvbk1vZGFsKCk7CiAgICAgIH0KICAgICAgLy8gQk1DIGR1bXAgaW5pdGlhdGlvbgogICAgICBlbHNlIGlmICh0aGlzLnNlbGVjdGVkRHVtcFR5cGUgPT09ICdibWMnKSB7CiAgICAgICAgdGhpcy4kc3RvcmUKICAgICAgICAgIC5kaXNwYXRjaCgnZHVtcHMvY3JlYXRlQm1jRHVtcCcpCiAgICAgICAgICAudGhlbigoKSA9PgogICAgICAgICAgICB0aGlzLmluZm9Ub2FzdCgKICAgICAgICAgICAgICBpMThuLmdsb2JhbC50KCdwYWdlRHVtcHMudG9hc3Quc3VjY2Vzc1N0YXJ0Qm1jRHVtcCcpLAogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIHRpdGxlOiBpMThuLmdsb2JhbC50KAogICAgICAgICAgICAgICAgICAncGFnZUR1bXBzLnRvYXN0LnN1Y2Nlc3NTdGFydEJtY0R1bXBUaXRsZScsCiAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICAgdGltZXN0YW1wOiB0cnVlLAogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICksCiAgICAgICAgICApCiAgICAgICAgICAuY2F0Y2goKHsgbWVzc2FnZSB9KSA9PiB0aGlzLmVycm9yVG9hc3QobWVzc2FnZSkpOwogICAgICB9CiAgICB9LAogICAgc2hvd0NvbmZpcm1hdGlvbk1vZGFsKCkgewogICAgICB0aGlzLiRidk1vZGFsLnNob3coJ21vZGFsLWNvbmZpcm1hdGlvbicpOwogICAgfSwKICAgIGNyZWF0ZVN5c3RlbUR1bXAoKSB7CiAgICAgIHRoaXMuJHN0b3JlCiAgICAgICAgLmRpc3BhdGNoKCdkdW1wcy9jcmVhdGVTeXN0ZW1EdW1wJykKICAgICAgICAudGhlbigoKSA9PgogICAgICAgICAgdGhpcy5pbmZvVG9hc3QoCiAgICAgICAgICAgIGkxOG4uZ2xvYmFsLnQoJ3BhZ2VEdW1wcy50b2FzdC5zdWNjZXNzU3RhcnRTeXN0ZW1EdW1wJyksCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICB0aXRsZTogaTE4bi5nbG9iYWwudCgKICAgICAgICAgICAgICAgICdwYWdlRHVtcHMudG9hc3Quc3VjY2Vzc1N0YXJ0U3lzdGVtRHVtcFRpdGxlJywKICAgICAgICAgICAgICApLAogICAgICAgICAgICAgIHRpbWVzdGFtcDogdHJ1ZSwKICAgICAgICAgICAgfSwKICAgICAgICAgICksCiAgICAgICAgKQogICAgICAgIC5jYXRjaCgoeyBtZXNzYWdlIH0pID0+IHRoaXMuZXJyb3JUb2FzdChtZXNzYWdlKSk7CiAgICB9LAogIH0sCn07Cg=="},{"version":3,"sources":["/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/src/views/Logs/Dumps/DumpsForm.vue"],"names":[],"mappings":";AAmCA,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9C,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChD,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxD,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC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","file":"/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/src/views/Logs/Dumps/DumpsForm.vue","sourceRoot":"","sourcesContent":["<template>\n  <div class=\"form-background p-3\">\n    <b-form id=\"form-new-dump\" novalidate @submit.prevent=\"handleSubmit\">\n      <b-form-group\n        :label=\"$t('pageDumps.form.selectDumpType')\"\n        label-for=\"selectDumpType\"\n      >\n        <b-form-select\n          id=\"selectDumpType\"\n          v-model=\"selectedDumpType\"\n          :options=\"dumpTypeOptions\"\n          :state=\"getValidationState(v$.selectedDumpType)\"\n        >\n          <template #first>\n            <b-form-select-option :value=\"null\" disabled>\n              {{ $t('global.form.selectAnOption') }}\n            </b-form-select-option>\n          </template>\n        </b-form-select>\n        <b-form-invalid-feedback role=\"alert\">\n          {{ $t('global.form.required') }}\n        </b-form-invalid-feedback>\n      </b-form-group>\n      <alert variant=\"info\" class=\"mb-3\" :show=\"selectedDumpType === 'system'\">\n        {{ $t('pageDumps.form.systemDumpInfo') }}\n      </alert>\n      <b-button variant=\"primary\" type=\"submit\" form=\"form-new-dump\">\n        {{ $t('pageDumps.form.initiateDump') }}\n      </b-button>\n    </b-form>\n    <modal-confirmation @ok=\"createSystemDump\" />\n  </div>\n</template>\n\n<script>\nimport { useVuelidate } from '@vuelidate/core';\nimport { required } from '@vuelidate/validators';\nimport ModalConfirmation from './DumpsModalConfirmation';\nimport Alert from '@/components/Global/Alert';\nimport BVToastMixin from '@/components/Mixins/BVToastMixin';\nimport VuelidateMixin from '@/components/Mixins/VuelidateMixin.js';\nimport i18n from '@/i18n';\nimport { useI18n } from 'vue-i18n';\n\nexport default {\n  components: { Alert, ModalConfirmation },\n  mixins: [BVToastMixin, VuelidateMixin],\n  setup() {\n    return {\n      v$: useVuelidate(),\n    };\n  },\n  data() {\n    return {\n      $t: useI18n().t,\n      selectedDumpType: null,\n      dumpTypeOptions: [\n        { value: 'bmc', text: i18n.global.t('pageDumps.form.bmcDump') },\n        { value: 'system', text: i18n.global.t('pageDumps.form.systemDump') },\n      ],\n    };\n  },\n  validations() {\n    return {\n      selectedDumpType: { required },\n    };\n  },\n  methods: {\n    handleSubmit() {\n      this.v$.$touch();\n      if (this.v$.$invalid) return;\n\n      // System dump initiation\n      if (this.selectedDumpType === 'system') {\n        this.showConfirmationModal();\n      }\n      // BMC dump initiation\n      else if (this.selectedDumpType === 'bmc') {\n        this.$store\n          .dispatch('dumps/createBmcDump')\n          .then(() =>\n            this.infoToast(\n              i18n.global.t('pageDumps.toast.successStartBmcDump'),\n              {\n                title: i18n.global.t(\n                  'pageDumps.toast.successStartBmcDumpTitle',\n                ),\n                timestamp: true,\n              },\n            ),\n          )\n          .catch(({ message }) => this.errorToast(message));\n      }\n    },\n    showConfirmationModal() {\n      this.$bvModal.show('modal-confirmation');\n    },\n    createSystemDump() {\n      this.$store\n        .dispatch('dumps/createSystemDump')\n        .then(() =>\n          this.infoToast(\n            i18n.global.t('pageDumps.toast.successStartSystemDump'),\n            {\n              title: i18n.global.t(\n                'pageDumps.toast.successStartSystemDumpTitle',\n              ),\n              timestamp: true,\n            },\n          ),\n        )\n        .catch(({ message }) => this.errorToast(message));\n    },\n  },\n};\n</script>\n"]}]}