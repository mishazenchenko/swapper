{"remainingRequest":"/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/node_modules/vue-loader/dist/index.js??ruleSet[0].use[1]!/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/node_modules/vue-svg-inline-loader/src/index.js!/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/src/views/Operations/SerialOverLan/SerialOverLanConsole.vue?vue&type=style&index=0&id=eef61b86&lang=scss&scoped=true","dependencies":[{"path":"/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/src/views/Operations/SerialOverLan/SerialOverLanConsole.vue","mtime":1749201729612},{"path":"/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js","mtime":1750686224404},{"path":"/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/node_modules/vue-loader/dist/stylePostLoader.js","mtime":1750686215520},{"path":"/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/node_modules/@vue/cli-service/node_modules/postcss-loader/dist/cjs.js","mtime":1750686224356},{"path":"/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/node_modules/sass-loader/dist/cjs.js","mtime":1750686215808},{"path":"/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/node_modules/cache-loader/dist/cjs.js","mtime":1750686218200},{"path":"/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/node_modules/vue-loader/dist/index.js","mtime":1750686215328},{"path":"/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/node_modules/vue-svg-inline-loader/src/index.js","mtime":1750686215304}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CkBpbXBvcnQgJ0AvYXNzZXRzL3N0eWxlcy9ibWMvaGVscGVycy9faW5kZXguc2Nzcyc7CkBpbXBvcnQgJ0AvYXNzZXRzL3N0eWxlcy9ib290c3RyYXAvX2hlbHBlcnMuc2Nzcyc7CgpAaW1wb3J0ICd+eHRlcm0vY3NzL3h0ZXJtLmNzcyc7CgojdGVybWluYWwgewogIG92ZXJmbG93OiBhdXRvOwp9CgouZnVsbC13aW5kb3ctY29udGFpbmVyIHsKICB3aWR0aDogOTclOwogIG1hcmdpbjogMS41JTsKfQo="},{"version":3,"sources":["/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/src/views/Operations/SerialOverLan/SerialOverLanConsole.vue"],"names":[],"mappings":";AAqKA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAEjD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAE9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AAChB;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACrB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACd","file":"/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/src/views/Operations/SerialOverLan/SerialOverLanConsole.vue","sourceRoot":"","sourcesContent":["<template>\n  <div :class=\"isFullWindow ? 'full-window-container' : 'terminal-container'\">\n    <b-row class=\"d-flex\">\n      <b-col sm=\"4\" md=\"6\">\n        <alert\n          v-if=\"connection ? false : true\"\n          variant=\"warning\"\n          :small=\"true\"\n          class=\"mt-4\"\n        >\n          <p class=\"col-form-label\">\n            {{ $t('pageSerialOverLan.alert.disconnectedAlertMessage') }}\n          </p>\n        </alert>\n      </b-col>\n    </b-row>\n    <b-row class=\"d-flex\">\n      <b-col class=\"d-flex flex-column justify-content-end\">\n        <dl class=\"mb-2\" sm=\"6\" md=\"6\">\n          <dt class=\"d-inline font-weight-bold mr-1\">\n            {{ $t('pageSerialOverLan.status') }}:\n          </dt>\n          <dd class=\"d-inline\">\n            <status-icon :status=\"serverStatusIcon\" />\n            {{\n              connection\n                ? $t('pageSerialOverLan.connected')\n                : $t('pageSerialOverLan.disconnected')\n            }}\n          </dd>\n        </dl>\n      </b-col>\n\n      <b-col v-if=\"!isFullWindow\" class=\"d-flex justify-content-end\">\n        <b-button variant=\"link\" type=\"button\" @click=\"openConsoleWindow()\">\n          <icon-launch />\n          {{ $t('pageSerialOverLan.openNewTab') }}\n        </b-button>\n      </b-col>\n    </b-row>\n    <div id=\"terminal\" ref=\"panel\"></div>\n  </div>\n</template>\n\n<script>\nimport Alert from '@/components/Global/Alert';\nimport { AttachAddon } from 'xterm-addon-attach';\nimport { FitAddon } from 'xterm-addon-fit';\nimport { Terminal } from 'xterm';\nimport { throttle } from 'lodash';\nimport IconLaunch from '@carbon/icons-vue/es/launch/20';\nimport StatusIcon from '@/components/Global/StatusIcon';\nimport { useI18n } from 'vue-i18n';\n\nexport default {\n  name: 'SerialOverLanConsole',\n  components: {\n    Alert,\n    IconLaunch,\n    StatusIcon,\n  },\n  props: {\n    isFullWindow: {\n      type: Boolean,\n      default: true,\n    },\n  },\n  data() {\n    return {\n      $t: useI18n().t,\n      resizeConsoleWindow: null,\n    };\n  },\n  computed: {\n    serverStatus() {\n      return this.$store.getters['global/serverStatus'];\n    },\n    connection() {\n      return this.serverStatus === 'off' ? false : true;\n    },\n    serverStatusIcon() {\n      return this.connection ? 'success' : 'danger';\n    },\n  },\n  created() {\n    this.$store.dispatch('global/getSystemInfo');\n  },\n  mounted() {\n    this.openTerminal();\n  },\n  beforeUnmount() {\n    window.removeEventListener('resize', this.resizeConsoleWindow);\n    this.closeTerminal();\n  },\n  methods: {\n    openTerminal() {\n      const token = this.$store.getters['authentication/token'];\n      this.ws = new WebSocket(`wss://${window.location.host}/console/default`, [\n        token,\n      ]);\n\n      // Refer https://github.com/xtermjs/xterm.js/ for xterm implementation and addons.\n\n      this.term = new Terminal({\n        fontSize: 15,\n        fontFamily:\n          'SFMono-Regular, Menlo, Monaco, Consolas, Liberation Mono, Courier New, monospace',\n      });\n\n      const attachAddon = new AttachAddon(this.ws);\n      this.term.loadAddon(attachAddon);\n\n      const fitAddon = new FitAddon();\n      this.term.loadAddon(fitAddon);\n\n      const SOL_THEME = {\n        background: '#19273c',\n        cursor: 'rgba(83, 146, 255, .5)',\n        scrollbar: 'rgba(83, 146, 255, .5)',\n      };\n      this.term.setOption('theme', SOL_THEME);\n\n      this.term.open(this.$refs.panel);\n      fitAddon.fit();\n\n      this.resizeConsoleWindow = throttle(() => {\n        fitAddon.fit();\n      }, 1000);\n      window.addEventListener('resize', this.resizeConsoleWindow);\n\n      try {\n        this.ws.onopen = function () {\n          console.log('websocket console/default opened');\n        };\n        this.ws.onclose = function (event) {\n          console.log(\n            'websocket console/default closed. code: ' +\n              event.code +\n              ' reason: ' +\n              event.reason,\n          );\n        };\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    closeTerminal() {\n      console.log('closeTerminal');\n      this.term.dispose();\n      this.term = null;\n      this.ws.close();\n      this.ws = null;\n    },\n    openConsoleWindow() {\n      window.open(\n        '#/console/serial-over-lan-console',\n        '_blank',\n        'directories=no,titlebar=no,toolbar=no,location=no,status=no,menubar=no,scrollbars=no,resizable=yes,width=600,height=550',\n      );\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import '@/assets/styles/bmc/helpers/_index.scss';\n@import '@/assets/styles/bootstrap/_helpers.scss';\n\n@import '~xterm/css/xterm.css';\n\n#terminal {\n  overflow: auto;\n}\n\n.full-window-container {\n  width: 97%;\n  margin: 1.5%;\n}\n</style>\n"]}]}