{"remainingRequest":"/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/node_modules/vue-loader/dist/index.js??ruleSet[0].use[1]!/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/node_modules/vue-svg-inline-loader/src/index.js!/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/src/views/Overview/OverviewFirmware.vue?vue&type=template&id=1e839b00","dependencies":[{"path":"/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/src/views/Overview/OverviewFirmware.vue","mtime":1749201729612},{"path":"/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/node_modules/babel-loader/lib/index.js","mtime":1750686226660},{"path":"/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/node_modules/vue-loader/dist/templateLoader.js","mtime":1750686215536},{"path":"/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/node_modules/cache-loader/dist/cjs.js","mtime":1750686218200},{"path":"/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/node_modules/vue-loader/dist/index.js","mtime":1750686215328},{"path":"/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/node_modules/vue-svg-inline-loader/src/index.js","mtime":1750686215304}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgPG92ZXJ2aWV3LWNhcmQKICAgIDp0aXRsZT0iJHQoJ3BhZ2VPdmVydmlldy5maXJtd2FyZUluZm9ybWF0aW9uJykiCiAgICA6dG89ImAvb3BlcmF0aW9ucy9maXJtd2FyZWAiCiAgPgogICAgPGItcm93IGNsYXNzPSJtdC0zIj4KICAgICAgPGItY29sIHNtPSI2Ij4KICAgICAgICA8ZGw+CiAgICAgICAgICA8ZHQ+e3sgJHQoJ3BhZ2VPdmVydmlldy5ydW5uaW5nVmVyc2lvbicpIH19PC9kdD4KICAgICAgICAgIDxkZD57eyBkYXRhRm9ybWF0dGVyKHJ1bm5pbmdWZXJzaW9uKSB9fTwvZGQ+CiAgICAgICAgICA8ZHQ+e3sgJHQoJ3BhZ2VPdmVydmlldy5iYWNrdXBWZXJzaW9uJykgfX08L2R0PgogICAgICAgICAgPGRkPnt7IGRhdGFGb3JtYXR0ZXIoYmFja3VwVmVyc2lvbikgfX08L2RkPgogICAgICAgIDwvZGw+CiAgICAgIDwvYi1jb2w+CiAgICAgIDxiLWNvbCBzbT0iNiI+CiAgICAgICAgPGRsPgogICAgICAgICAgPGR0Pnt7ICR0KCdwYWdlT3ZlcnZpZXcuZmlybXdhcmVWZXJzaW9uJykgfX08L2R0PgogICAgICAgICAgPGRkPnt7IGRhdGFGb3JtYXR0ZXIoZmlybXdhcmVWZXJzaW9uKSB9fTwvZGQ+CiAgICAgICAgPC9kbD4KICAgICAgPC9iLWNvbD4KICAgIDwvYi1yb3c+CiAgPC9vdmVydmlldy1jYXJkPgo="},{"version":3,"sources":["/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/src/views/Overview/OverviewFirmware.vue"],"names":[],"mappings":";EACE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC7B;IACE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACjB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACX,CAAC,CAAC,CAAC;UACD,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UAC/C,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UAC3C,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UAC9C,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC5C,CAAC,CAAC,CAAC,CAAC;MACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACP,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACX,CAAC,CAAC,CAAC;UACD,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UAChD,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC9C,CAAC,CAAC,CAAC,CAAC;MACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC","file":"/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/src/views/Overview/OverviewFirmware.vue","sourceRoot":"","sourcesContent":["<template>\n  <overview-card\n    :title=\"$t('pageOverview.firmwareInformation')\"\n    :to=\"`/operations/firmware`\"\n  >\n    <b-row class=\"mt-3\">\n      <b-col sm=\"6\">\n        <dl>\n          <dt>{{ $t('pageOverview.runningVersion') }}</dt>\n          <dd>{{ dataFormatter(runningVersion) }}</dd>\n          <dt>{{ $t('pageOverview.backupVersion') }}</dt>\n          <dd>{{ dataFormatter(backupVersion) }}</dd>\n        </dl>\n      </b-col>\n      <b-col sm=\"6\">\n        <dl>\n          <dt>{{ $t('pageOverview.firmwareVersion') }}</dt>\n          <dd>{{ dataFormatter(firmwareVersion) }}</dd>\n        </dl>\n      </b-col>\n    </b-row>\n  </overview-card>\n</template>\n\n<script>\nimport OverviewCard from './OverviewCard';\nimport DataFormatterMixin from '@/components/Mixins/DataFormatterMixin';\nimport { mapState } from 'vuex';\nimport { useI18n } from 'vue-i18n';\n\nexport default {\n  name: 'Firmware',\n  components: {\n    OverviewCard,\n  },\n  mixins: [DataFormatterMixin],\n  data() {\n    return {\n      $t: useI18n().t,\n    };\n  },\n  computed: {\n    ...mapState({\n      server: (state) => state.system.systems[0],\n      backupBmcFirmware() {\n        return this.$store.getters['firmware/backupBmcFirmware'];\n      },\n      backupVersion() {\n        return this.backupBmcFirmware?.version;\n      },\n      activeBmcFirmware() {\n        return this.$store.getters[`firmware/activeBmcFirmware`];\n      },\n      firmwareVersion() {\n        return this.server?.firmwareVersion;\n      },\n      runningVersion() {\n        return this.activeBmcFirmware?.version;\n      },\n    }),\n  },\n  created() {\n    this.$store.dispatch('firmware/getFirmwareInformation').finally(() => {\n      this.$root.$emit('overview-firmware-complete');\n    });\n  },\n};\n</script>\n"]}]}