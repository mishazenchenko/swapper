{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createBlock as _createBlock, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = {\n  key: 1\n};\nconst _hoisted_3 = {\n  class: \"text-nowrap\"\n};\nconst _hoisted_4 = {\n  class: \"h5\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_b_form_checkbox = _resolveComponent(\"b-form-checkbox\");\n  const _component_b_col = _resolveComponent(\"b-col\");\n  const _component_icon_edit = _resolveComponent(\"icon-edit\");\n  const _component_b_button = _resolveComponent(\"b-button\");\n  const _component_b_row = _resolveComponent(\"b-row\");\n  const _component_icon_add = _resolveComponent(\"icon-add\");\n  const _component_icon_trashcan = _resolveComponent(\"icon-trashcan\");\n  const _component_table_row_action = _resolveComponent(\"table-row-action\");\n  const _component_b_table = _resolveComponent(\"b-table\");\n  const _component_page_section = _resolveComponent(\"page-section\");\n  return _openBlock(), _createBlock(_component_page_section, {\n    \"section-title\": $data.$t('pageNetwork.ipv6')\n  }, {\n    default: _withCtx(() => [_createVNode(_component_b_row, {\n      class: \"mb-4\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_b_col, {\n        lg: \"2\",\n        md: \"6\"\n      }, {\n        default: _withCtx(() => [_createElementVNode(\"dl\", null, [_createElementVNode(\"dt\", null, _toDisplayString($data.$t('pageNetwork.dhcp6')), 1 /* TEXT */), _createElementVNode(\"dd\", null, [_createVNode(_component_b_form_checkbox, {\n          id: \"dhcp6Switch\",\n          modelValue: $options.dhcp6EnabledState,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $options.dhcp6EnabledState = $event),\n          \"data-test-id\": \"networkSettings-switch-dhcp6Enabled\",\n          switch: \"\",\n          onChange: $options.changeDhcp6EnabledState\n        }, {\n          default: _withCtx(() => [$options.dhcp6EnabledState ? (_openBlock(), _createElementBlock(\"span\", _hoisted_1, _toDisplayString($data.$t('global.status.enabled')), 1 /* TEXT */)) : (_openBlock(), _createElementBlock(\"span\", _hoisted_2, _toDisplayString($data.$t('global.status.disabled')), 1 /* TEXT */))], undefined, true),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"modelValue\", \"onChange\"])])])], undefined, true),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_b_col, {\n        lg: \"2\",\n        md: \"6\"\n      }, {\n        default: _withCtx(() => [_createElementVNode(\"dl\", _hoisted_3, [_createElementVNode(\"dt\", null, [_createTextVNode(_toDisplayString($data.$t('pageNetwork.ipv6DefaultGateway')) + \" \", 1 /* TEXT */), $data.defaultGatewayEditable ? (_openBlock(), _createBlock(_component_b_button, {\n          key: 0,\n          variant: \"link\",\n          class: \"p-1\",\n          onClick: _cache[1] || (_cache[1] = $event => $options.initDefaultGatewayModal())\n        }, {\n          default: _withCtx(() => [_createVNode(_component_icon_edit, {\n            title: $data.$t('pageNetwork.modal.editIPv6DefaultGatewayTitle')\n          }, null, 8 /* PROPS */, [\"title\"])], undefined, true),\n          _: 1 /* STABLE */\n        })) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"dd\", null, _toDisplayString(_ctx.dataFormatter($data.defaultGateway)), 1 /* TEXT */)])], undefined, true),\n        _: 1 /* STABLE */\n      })], undefined, true),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_b_row, null, {\n      default: _withCtx(() => [_createVNode(_component_b_col, null, {\n        default: _withCtx(() => [_createElementVNode(\"h3\", _hoisted_4, _toDisplayString($data.$t('pageNetwork.ipv6Addresses')), 1 /* TEXT */)], undefined, true),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_b_col, {\n        class: \"text-right\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_b_button, {\n          variant: \"primary\",\n          onClick: _cache[2] || (_cache[2] = $event => $options.initAddIpv6Address())\n        }, {\n          default: _withCtx(() => [_createVNode(_component_icon_add), _createTextVNode(\" \" + _toDisplayString($data.$t('pageNetwork.table.addIpv6Address')), 1 /* TEXT */)], undefined, true),\n          _: 1 /* STABLE */\n        })], undefined, true),\n        _: 1 /* STABLE */\n      })], undefined, true),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_b_table, {\n      responsive: \"md\",\n      hover: \"\",\n      fields: $data.ipv6TableFields,\n      items: $data.form.ipv6TableItems,\n      \"empty-text\": $data.$t('global.table.emptyMessage'),\n      class: \"mb-0\",\n      \"show-empty\": \"\"\n    }, {\n      \"cell(actions)\": _withCtx(({\n        item,\n        index\n      }) => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.filteredActions(item), (action, actionIndex) => {\n        return _openBlock(), _createBlock(_component_table_row_action, {\n          key: actionIndex,\n          value: action.value,\n          title: action.title,\n          enabled: action.enabled,\n          onClickTableAction: $event => $options.onIpv6TableAction(action, $event, index)\n        }, {\n          icon: _withCtx(() => [action.value === 'edit' ? (_openBlock(), _createBlock(_component_icon_edit, {\n            key: 0\n          })) : _createCommentVNode(\"v-if\", true), action.value === 'delete' ? (_openBlock(), _createBlock(_component_icon_trashcan, {\n            key: 1\n          })) : _createCommentVNode(\"v-if\", true)]),\n          _: 2 /* DYNAMIC */\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"value\", \"title\", \"enabled\", \"onClickTableAction\"]);\n      }), 128 /* KEYED_FRAGMENT */))]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"fields\", \"items\", \"empty-text\"])], undefined, true),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"section-title\"]);\n}","map":{"version":3,"names":["key","class","_createBlock","_component_page_section","$data","$t","default","_withCtx","_createVNode","_component_b_row","_component_b_col","lg","md","_createElementVNode","_toDisplayString","_component_b_form_checkbox","id","modelValue","$options","dhcp6EnabledState","_cache","$event","switch","onChange","changeDhcp6EnabledState","_createElementBlock","_hoisted_1","_hoisted_2","_","_hoisted_3","_createTextVNode","defaultGatewayEditable","_component_b_button","variant","onClick","initDefaultGatewayModal","_component_icon_edit","title","_createCommentVNode","_ctx","dataFormatter","defaultGateway","_hoisted_4","initAddIpv6Address","_component_icon_add","_component_b_table","responsive","hover","fields","ipv6TableFields","items","form","ipv6TableItems","item","index","_Fragment","_renderList","filteredActions","action","actionIndex","_component_table_row_action","value","enabled","onClickTableAction","onIpv6TableAction","icon","_component_icon_trashcan"],"sources":["/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/src/views/Settings/Network/TableIpv6.vue"],"sourcesContent":["<template>\n  <page-section :section-title=\"$t('pageNetwork.ipv6')\">\n    <b-row class=\"mb-4\">\n      <b-col lg=\"2\" md=\"6\">\n        <dl>\n          <dt>{{ $t('pageNetwork.dhcp6') }}</dt>\n          <dd>\n            <b-form-checkbox\n              id=\"dhcp6Switch\"\n              v-model=\"dhcp6EnabledState\"\n              data-test-id=\"networkSettings-switch-dhcp6Enabled\"\n              switch\n              @change=\"changeDhcp6EnabledState\"\n            >\n              <span v-if=\"dhcp6EnabledState\">\n                {{ $t('global.status.enabled') }}\n              </span>\n              <span v-else>{{ $t('global.status.disabled') }}</span>\n            </b-form-checkbox>\n          </dd>\n        </dl>\n      </b-col>\n      <b-col lg=\"2\" md=\"6\">\n        <dl class=\"text-nowrap\">\n          <dt>\n            {{ $t('pageNetwork.ipv6DefaultGateway') }}\n            <b-button\n              v-if=\"defaultGatewayEditable\"\n              variant=\"link\"\n              class=\"p-1\"\n              @click=\"initDefaultGatewayModal()\"\n            >\n              <icon-edit\n                :title=\"$t('pageNetwork.modal.editIPv6DefaultGatewayTitle')\"\n              />\n            </b-button>\n          </dt>\n          <dd>\n            {{ dataFormatter(defaultGateway) }}\n          </dd>\n        </dl>\n      </b-col>\n    </b-row>\n    <b-row>\n      <b-col>\n        <h3 class=\"h5\">\n          {{ $t('pageNetwork.ipv6Addresses') }}\n        </h3>\n      </b-col>\n      <b-col class=\"text-right\">\n        <b-button variant=\"primary\" @click=\"initAddIpv6Address()\">\n          <icon-add />\n          {{ $t('pageNetwork.table.addIpv6Address') }}\n        </b-button>\n      </b-col>\n    </b-row>\n    <b-table\n      responsive=\"md\"\n      hover\n      :fields=\"ipv6TableFields\"\n      :items=\"form.ipv6TableItems\"\n      :empty-text=\"$t('global.table.emptyMessage')\"\n      class=\"mb-0\"\n      show-empty\n    >\n      <template #cell(actions)=\"{ item, index }\">\n        <table-row-action\n          v-for=\"(action, actionIndex) in filteredActions(item)\"\n          :key=\"actionIndex\"\n          :value=\"action.value\"\n          :title=\"action.title\"\n          :enabled=\"action.enabled\"\n          @click-table-action=\"onIpv6TableAction(action, $event, index)\"\n        >\n          <template #icon>\n            <icon-edit v-if=\"action.value === 'edit'\" />\n            <icon-trashcan v-if=\"action.value === 'delete'\" />\n          </template>\n        </table-row-action>\n      </template>\n    </b-table>\n  </page-section>\n</template>\n\n<script>\nimport BVToastMixin from '@/components/Mixins/BVToastMixin';\nimport IconAdd from '@carbon/icons-vue/es/add--alt/20';\nimport IconEdit from '@carbon/icons-vue/es/edit/20';\nimport IconTrashcan from '@carbon/icons-vue/es/trash-can/20';\nimport LoadingBarMixin from '@/components/Mixins/LoadingBarMixin';\nimport PageSection from '@/components/Global/PageSection';\nimport TableRowAction from '@/components/Global/TableRowAction';\nimport DataFormatterMixin from '@/components/Mixins/DataFormatterMixin';\nimport { mapState } from 'vuex';\nimport i18n from '@/i18n';\nimport { useI18n } from 'vue-i18n';\n\nexport default {\n  name: 'Ipv6Table',\n  components: {\n    IconAdd,\n    IconEdit,\n    IconTrashcan,\n    PageSection,\n    TableRowAction,\n  },\n  mixins: [BVToastMixin, LoadingBarMixin, DataFormatterMixin],\n  props: {\n    tabIndex: {\n      type: Number,\n      default: 0,\n    },\n  },\n  data() {\n    return {\n      $t: useI18n().t,\n      form: {\n        ipv6TableItems: [],\n      },\n      actions: [\n        {\n          value: 'edit',\n          title: i18n.global.t('global.action.edit'),\n        },\n        {\n          value: 'delete',\n          title: i18n.global.t('global.action.delete'),\n        },\n      ],\n      ipv6TableFields: [\n        {\n          key: 'Address',\n          label: i18n.global.t('pageNetwork.table.ipAddress'),\n        },\n        {\n          key: 'PrefixLength',\n          label: i18n.global.t('pageNetwork.table.prefixLength'),\n        },\n        {\n          key: 'AddressOrigin',\n          label: i18n.global.t('pageNetwork.table.addressOrigin'),\n        },\n        { key: 'actions', label: '', tdClass: 'text-right' },\n      ],\n      defaultGateway: '',\n      defaultGatewayEditable:\n        process.env.VUE_APP_ENV_NAME !== 'nvidia-bluefield',\n    };\n  },\n  computed: {\n    ...mapState('network', ['ethernetData']),\n    selectedInterface() {\n      return this.$store.getters['network/selectedInterfaceIndex'];\n    },\n    dhcp6EnabledState: {\n      get() {\n        return (\n          this.$store.getters['network/globalNetworkSettings'][\n            this.selectedInterface\n          ].dhcp6Enabled === 'Enabled'\n        );\n      },\n      set(newValue) {\n        return newValue;\n      },\n    },\n    filteredActions() {\n      return (item) => {\n        if (item.AddressOrigin === 'DHCPv6' || item.AddressOrigin === 'SLAAC') {\n          return item.actions.filter((action) => action.value !== 'delete');\n        } else {\n          return item.actions;\n        }\n      };\n    },\n  },\n  watch: {\n    // Watch for change in tab index\n    tabIndex() {\n      this.getIpv6TableItems();\n      this.getDefaultGateway();\n    },\n    ethernetData() {\n      this.getIpv6TableItems();\n      this.getDefaultGateway();\n    },\n  },\n  created() {\n    this.getIpv6TableItems();\n    this.getDefaultGateway();\n    this.$store.dispatch('network/getEthernetData').finally(() => {\n      // Emit initial data fetch complete to parent component\n      this.$root.$emit('network-table-ipv6-complete');\n    });\n  },\n  methods: {\n    getDefaultGateway() {\n      this.defaultGateway = this.ethernetData[this.tabIndex].IPv6DefaultGateway;\n    },\n    getIpv6TableItems() {\n      const index = this.tabIndex;\n      const addresses =\n        this.ethernetData[index].IPv6Addresses.filter(\n          (ipv6) =>\n            ipv6.AddressOrigin === 'LinkLocal' ||\n            ipv6.AddressOrigin === 'Static' ||\n            ipv6.AddressOrigin === 'SLAAC' ||\n            ipv6.AddressOrigin === 'DHCPv6',\n        ) || [];\n      this.form.ipv6TableItems = addresses.map((ipv6) => {\n        return {\n          Address: ipv6.Address,\n          PrefixLength: ipv6.PrefixLength,\n          AddressOrigin: ipv6.AddressOrigin,\n          actions: [\n            {\n              value: 'delete',\n              title: i18n.global.t('pageNetwork.table.deleteIpv6'),\n            },\n          ],\n        };\n      });\n    },\n    onIpv6TableAction(action, $event, index) {\n      if ($event === 'delete') {\n        this.deleteIpv6TableRow(index);\n      }\n    },\n    deleteIpv6TableRow(index) {\n      const AddressOrigin = this.form.ipv6TableItems[index].AddressOrigin;\n      this.form.ipv6TableItems.splice(index, 1);\n      const newIpv6Array = this.form.ipv6TableItems.map((ipv6) => {\n        const { Address, PrefixLength } = ipv6;\n        return {\n          Address,\n          PrefixLength,\n        };\n      });\n      if (\n        newIpv6Array.length == 0 &&\n        (AddressOrigin === 'Static' || AddressOrigin === 'LinkLocal')\n      ) {\n        this.$store\n          .dispatch('network/saveDhcp6EnabledState', true)\n          .then((message) => this.successToast(message))\n          .catch(({ message }) => this.errorToast(message));\n      }\n      this.$store\n        .dispatch('network/editIpv6Address', newIpv6Array)\n        .then((message) => this.successToast(message))\n        .catch(({ message }) => this.errorToast(message));\n    },\n    initAddIpv6Address() {\n      this.$bvModal.show('modal-add-ipv6');\n    },\n    changeDhcp6EnabledState(state) {\n      this.$bvModal\n        .msgBoxConfirm(\n          state\n            ? i18n.global.t('pageNetwork.modal.confirmEnableDhcp')\n            : i18n.global.t('pageNetwork.modal.confirmDisableDhcp'),\n          {\n            title: i18n.global.t('pageNetwork.modal.dhcpConfirmTitle', {\n              dhcpState: state\n                ? i18n.global.t('global.action.enable')\n                : i18n.global.t('global.action.disable'),\n            }),\n            okTitle: state\n              ? i18n.global.t('global.action.enable')\n              : i18n.global.t('global.action.disable'),\n            okVariant: 'danger',\n            cancelTitle: i18n.global.t('global.action.cancel'),\n          },\n        )\n        .then((dhcpEnableConfirmed) => {\n          if (dhcpEnableConfirmed) {\n            this.$store\n              .dispatch('network/saveDhcp6EnabledState', state)\n              .then((message) => this.successToast(message))\n              .catch(({ message }) => this.errorToast(message));\n          } else {\n            let onDhcpCancel = document.getElementById('dhcp6Switch');\n            onDhcpCancel.checked = !state;\n          }\n        });\n    },\n    initDefaultGatewayModal() {\n      this.$bvModal.show('modal-default-gateway');\n    },\n  },\n};\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}