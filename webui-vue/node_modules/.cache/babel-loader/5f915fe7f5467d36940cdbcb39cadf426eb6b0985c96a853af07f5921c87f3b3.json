{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Axios from 'axios';\nimport router from '../router';\nimport { setupCache, buildWebStorage } from 'axios-cache-interceptor';\n\n//Do not change store import.\n//Exact match alias set to support\n//dotenv customizations.\nimport store from '.';\nAxios.defaults.headers.common['Accept'] = 'application/json';\nAxios.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest';\nconst axiosInstance = Axios.create({\n  withCredentials: true\n});\nconst api = setupCache(axiosInstance, {\n  debug: console.log,\n  methods: ['get'],\n  interpretHeader: false,\n  etag: true,\n  modifiedSince: false,\n  staleIfError: false,\n  ttl: 0,\n  storage: buildWebStorage(localStorage, 'webui-vue-cache:')\n});\napi.interceptors.response.use(undefined, error => {\n  let response = error.response;\n\n  // TODO: Provide user with a notification and way to keep system active\n  if (response.status == 401) {\n    if (response.config.url != '/login') {\n      window.location = '/login';\n      // Commit logout to remove XSRF-TOKEN cookie\n      store.commit('authentication/logout');\n    }\n  }\n\n  // Check if action is unauthorized.\n  if (response.status == 403) {\n    if (isPasswordExpired(response.data)) {\n      router.push('/change-password');\n    } else {\n      // Toast error message will appear on screen.\n      store.commit('global/setUnauthorized');\n    }\n  }\n  return Promise.reject(error);\n});\nexport default {\n  get(path, config) {\n    return api.get(path, config);\n  },\n  delete(path, config) {\n    return api.delete(path, config);\n  },\n  post(path, payload, config) {\n    return api.post(path, payload, config);\n  },\n  patch(path, payload, config) {\n    return api.patch(path, payload, config);\n  },\n  put(path, payload, config) {\n    return api.put(path, payload, config);\n  },\n  all(promises) {\n    return Axios.all(promises);\n  },\n  spread(callback) {\n    return Axios.spread(callback);\n  },\n  set_auth_token(token) {\n    axiosInstance.defaults.headers.common['X-Auth-Token'] = token;\n  }\n};\nexport const getResponseCount = responses => {\n  let successCount = 0;\n  let errorCount = 0;\n  responses.forEach(response => {\n    if (response instanceof Error) errorCount++;else successCount++;\n  });\n  return {\n    successCount,\n    errorCount\n  };\n};\nexport const isPasswordExpired = data => {\n  return !!findMessageId(data, 'PasswordChangeRequired');\n};\n\n/**\n * Returns the first ExtendedInfo.Message to start with the\n * Registry Name (Default: \"Base\") and end with the given key\n * Ignore versions (.<X>.<Y>) --or-- (.<X>.<Y>.<Z>.),\n *   but adhere to Registry namespace\n * @param {object} data - AxiosResponse.data\n * @param { {MessageKey: string}} key - key into the message registry\n * @param { {MessageRegistryPrefix: string}} [registry=Base] - the name of the\n *        message registry, undefined param defaults to \"Base\"\n * @returns {ExtendedInfo.Message} ExtendedInfo.Message | undefined\n */\nexport const findMessageId = (data, key, registry = 'Base') => {\n  let extInfoMsgs = data?.['@Message.ExtendedInfo'];\n  return extInfoMsgs && extInfoMsgs.find(i => {\n    const words = i.MessageId.split('.');\n    return words[words.length - 1] === key && words[0] === registry;\n  });\n};","map":{"version":3,"names":["Axios","router","setupCache","buildWebStorage","store","defaults","headers","common","axiosInstance","create","withCredentials","api","debug","console","log","methods","interpretHeader","etag","modifiedSince","staleIfError","ttl","storage","localStorage","interceptors","response","use","undefined","error","status","config","url","window","location","commit","isPasswordExpired","data","push","Promise","reject","get","path","delete","post","payload","patch","put","all","promises","spread","callback","set_auth_token","token","getResponseCount","responses","successCount","errorCount","forEach","Error","findMessageId","key","registry","extInfoMsgs","find","i","words","MessageId","split","length"],"sources":["/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/src/store/api.js"],"sourcesContent":["import Axios from 'axios';\nimport router from '../router';\nimport { setupCache, buildWebStorage } from 'axios-cache-interceptor';\n\n//Do not change store import.\n//Exact match alias set to support\n//dotenv customizations.\nimport store from '.';\n\nAxios.defaults.headers.common['Accept'] = 'application/json';\nAxios.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest';\n\nconst axiosInstance = Axios.create({\n  withCredentials: true,\n});\n\nconst api = setupCache(axiosInstance, {\n  debug: console.log,\n  methods: ['get'],\n  interpretHeader: false,\n  etag: true,\n  modifiedSince: false,\n  staleIfError: false,\n  ttl: 0,\n  storage: buildWebStorage(localStorage, 'webui-vue-cache:'),\n});\n\napi.interceptors.response.use(undefined, (error) => {\n  let response = error.response;\n\n  // TODO: Provide user with a notification and way to keep system active\n  if (response.status == 401) {\n    if (response.config.url != '/login') {\n      window.location = '/login';\n      // Commit logout to remove XSRF-TOKEN cookie\n      store.commit('authentication/logout');\n    }\n  }\n\n  // Check if action is unauthorized.\n  if (response.status == 403) {\n    if (isPasswordExpired(response.data)) {\n      router.push('/change-password');\n    } else {\n      // Toast error message will appear on screen.\n      store.commit('global/setUnauthorized');\n    }\n  }\n\n  return Promise.reject(error);\n});\n\nexport default {\n  get(path, config) {\n    return api.get(path, config);\n  },\n  delete(path, config) {\n    return api.delete(path, config);\n  },\n  post(path, payload, config) {\n    return api.post(path, payload, config);\n  },\n  patch(path, payload, config) {\n    return api.patch(path, payload, config);\n  },\n  put(path, payload, config) {\n    return api.put(path, payload, config);\n  },\n  all(promises) {\n    return Axios.all(promises);\n  },\n  spread(callback) {\n    return Axios.spread(callback);\n  },\n  set_auth_token(token) {\n    axiosInstance.defaults.headers.common['X-Auth-Token'] = token;\n  },\n};\n\nexport const getResponseCount = (responses) => {\n  let successCount = 0;\n  let errorCount = 0;\n\n  responses.forEach((response) => {\n    if (response instanceof Error) errorCount++;\n    else successCount++;\n  });\n\n  return {\n    successCount,\n    errorCount,\n  };\n};\n\nexport const isPasswordExpired = (data) => {\n  return !!findMessageId(data, 'PasswordChangeRequired');\n};\n\n/**\n * Returns the first ExtendedInfo.Message to start with the\n * Registry Name (Default: \"Base\") and end with the given key\n * Ignore versions (.<X>.<Y>) --or-- (.<X>.<Y>.<Z>.),\n *   but adhere to Registry namespace\n * @param {object} data - AxiosResponse.data\n * @param { {MessageKey: string}} key - key into the message registry\n * @param { {MessageRegistryPrefix: string}} [registry=Base] - the name of the\n *        message registry, undefined param defaults to \"Base\"\n * @returns {ExtendedInfo.Message} ExtendedInfo.Message | undefined\n */\nexport const findMessageId = (data, key, registry = 'Base') => {\n  let extInfoMsgs = data?.['@Message.ExtendedInfo'];\n\n  return (\n    extInfoMsgs &&\n    extInfoMsgs.find((i) => {\n      const words = i.MessageId.split('.');\n      return words[words.length - 1] === key && words[0] === registry;\n    })\n  );\n};\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,WAAW;AAC9B,SAASC,UAAU,EAAEC,eAAe,QAAQ,yBAAyB;;AAErE;AACA;AACA;AACA,OAAOC,KAAK,MAAM,GAAG;AAErBJ,KAAK,CAACK,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,QAAQ,CAAC,GAAG,kBAAkB;AAC5DP,KAAK,CAACK,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,kBAAkB,CAAC,GAAG,gBAAgB;AAEpE,MAAMC,aAAa,GAAGR,KAAK,CAACS,MAAM,CAAC;EACjCC,eAAe,EAAE;AACnB,CAAC,CAAC;AAEF,MAAMC,GAAG,GAAGT,UAAU,CAACM,aAAa,EAAE;EACpCI,KAAK,EAAEC,OAAO,CAACC,GAAG;EAClBC,OAAO,EAAE,CAAC,KAAK,CAAC;EAChBC,eAAe,EAAE,KAAK;EACtBC,IAAI,EAAE,IAAI;EACVC,aAAa,EAAE,KAAK;EACpBC,YAAY,EAAE,KAAK;EACnBC,GAAG,EAAE,CAAC;EACNC,OAAO,EAAElB,eAAe,CAACmB,YAAY,EAAE,kBAAkB;AAC3D,CAAC,CAAC;AAEFX,GAAG,CAACY,YAAY,CAACC,QAAQ,CAACC,GAAG,CAACC,SAAS,EAAGC,KAAK,IAAK;EAClD,IAAIH,QAAQ,GAAGG,KAAK,CAACH,QAAQ;;EAE7B;EACA,IAAIA,QAAQ,CAACI,MAAM,IAAI,GAAG,EAAE;IAC1B,IAAIJ,QAAQ,CAACK,MAAM,CAACC,GAAG,IAAI,QAAQ,EAAE;MACnCC,MAAM,CAACC,QAAQ,GAAG,QAAQ;MAC1B;MACA5B,KAAK,CAAC6B,MAAM,CAAC,uBAAuB,CAAC;IACvC;EACF;;EAEA;EACA,IAAIT,QAAQ,CAACI,MAAM,IAAI,GAAG,EAAE;IAC1B,IAAIM,iBAAiB,CAACV,QAAQ,CAACW,IAAI,CAAC,EAAE;MACpClC,MAAM,CAACmC,IAAI,CAAC,kBAAkB,CAAC;IACjC,CAAC,MAAM;MACL;MACAhC,KAAK,CAAC6B,MAAM,CAAC,wBAAwB,CAAC;IACxC;EACF;EAEA,OAAOI,OAAO,CAACC,MAAM,CAACX,KAAK,CAAC;AAC9B,CAAC,CAAC;AAEF,eAAe;EACbY,GAAGA,CAACC,IAAI,EAAEX,MAAM,EAAE;IAChB,OAAOlB,GAAG,CAAC4B,GAAG,CAACC,IAAI,EAAEX,MAAM,CAAC;EAC9B,CAAC;EACDY,MAAMA,CAACD,IAAI,EAAEX,MAAM,EAAE;IACnB,OAAOlB,GAAG,CAAC8B,MAAM,CAACD,IAAI,EAAEX,MAAM,CAAC;EACjC,CAAC;EACDa,IAAIA,CAACF,IAAI,EAAEG,OAAO,EAAEd,MAAM,EAAE;IAC1B,OAAOlB,GAAG,CAAC+B,IAAI,CAACF,IAAI,EAAEG,OAAO,EAAEd,MAAM,CAAC;EACxC,CAAC;EACDe,KAAKA,CAACJ,IAAI,EAAEG,OAAO,EAAEd,MAAM,EAAE;IAC3B,OAAOlB,GAAG,CAACiC,KAAK,CAACJ,IAAI,EAAEG,OAAO,EAAEd,MAAM,CAAC;EACzC,CAAC;EACDgB,GAAGA,CAACL,IAAI,EAAEG,OAAO,EAAEd,MAAM,EAAE;IACzB,OAAOlB,GAAG,CAACkC,GAAG,CAACL,IAAI,EAAEG,OAAO,EAAEd,MAAM,CAAC;EACvC,CAAC;EACDiB,GAAGA,CAACC,QAAQ,EAAE;IACZ,OAAO/C,KAAK,CAAC8C,GAAG,CAACC,QAAQ,CAAC;EAC5B,CAAC;EACDC,MAAMA,CAACC,QAAQ,EAAE;IACf,OAAOjD,KAAK,CAACgD,MAAM,CAACC,QAAQ,CAAC;EAC/B,CAAC;EACDC,cAAcA,CAACC,KAAK,EAAE;IACpB3C,aAAa,CAACH,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,cAAc,CAAC,GAAG4C,KAAK;EAC/D;AACF,CAAC;AAED,OAAO,MAAMC,gBAAgB,GAAIC,SAAS,IAAK;EAC7C,IAAIC,YAAY,GAAG,CAAC;EACpB,IAAIC,UAAU,GAAG,CAAC;EAElBF,SAAS,CAACG,OAAO,CAAEhC,QAAQ,IAAK;IAC9B,IAAIA,QAAQ,YAAYiC,KAAK,EAAEF,UAAU,EAAE,CAAC,KACvCD,YAAY,EAAE;EACrB,CAAC,CAAC;EAEF,OAAO;IACLA,YAAY;IACZC;EACF,CAAC;AACH,CAAC;AAED,OAAO,MAAMrB,iBAAiB,GAAIC,IAAI,IAAK;EACzC,OAAO,CAAC,CAACuB,aAAa,CAACvB,IAAI,EAAE,wBAAwB,CAAC;AACxD,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMuB,aAAa,GAAGA,CAACvB,IAAI,EAAEwB,GAAG,EAAEC,QAAQ,GAAG,MAAM,KAAK;EAC7D,IAAIC,WAAW,GAAG1B,IAAI,GAAG,uBAAuB,CAAC;EAEjD,OACE0B,WAAW,IACXA,WAAW,CAACC,IAAI,CAAEC,CAAC,IAAK;IACtB,MAAMC,KAAK,GAAGD,CAAC,CAACE,SAAS,CAACC,KAAK,CAAC,GAAG,CAAC;IACpC,OAAOF,KAAK,CAACA,KAAK,CAACG,MAAM,GAAG,CAAC,CAAC,KAAKR,GAAG,IAAIK,KAAK,CAAC,CAAC,CAAC,KAAKJ,QAAQ;EACjE,CAAC,CAAC;AAEN,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}