{"ast":null,"code":"import Alert from '@/components/Global/Alert';\nimport { AttachAddon } from 'xterm-addon-attach';\nimport { FitAddon } from 'xterm-addon-fit';\nimport { Terminal } from 'xterm';\nimport { throttle } from 'lodash';\nimport IconLaunch from '@carbon/icons-vue/es/launch/20';\nimport StatusIcon from '@/components/Global/StatusIcon';\nimport { useI18n } from 'vue-i18n';\nexport default {\n  name: 'SerialOverLanConsole',\n  components: {\n    Alert,\n    IconLaunch,\n    StatusIcon\n  },\n  props: {\n    isFullWindow: {\n      type: Boolean,\n      default: true\n    }\n  },\n  data() {\n    return {\n      $t: useI18n().t,\n      resizeConsoleWindow: null\n    };\n  },\n  computed: {\n    serverStatus() {\n      return this.$store.getters['global/serverStatus'];\n    },\n    connection() {\n      return this.serverStatus === 'off' ? false : true;\n    },\n    serverStatusIcon() {\n      return this.connection ? 'success' : 'danger';\n    }\n  },\n  created() {\n    this.$store.dispatch('global/getSystemInfo');\n  },\n  mounted() {\n    this.openTerminal();\n  },\n  beforeUnmount() {\n    window.removeEventListener('resize', this.resizeConsoleWindow);\n    this.closeTerminal();\n  },\n  methods: {\n    openTerminal() {\n      const token = this.$store.getters['authentication/token'];\n      this.ws = new WebSocket(`wss://${window.location.host}/console/default`, [token]);\n\n      // Refer https://github.com/xtermjs/xterm.js/ for xterm implementation and addons.\n\n      this.term = new Terminal({\n        fontSize: 15,\n        fontFamily: 'SFMono-Regular, Menlo, Monaco, Consolas, Liberation Mono, Courier New, monospace'\n      });\n      const attachAddon = new AttachAddon(this.ws);\n      this.term.loadAddon(attachAddon);\n      const fitAddon = new FitAddon();\n      this.term.loadAddon(fitAddon);\n      const SOL_THEME = {\n        background: '#19273c',\n        cursor: 'rgba(83, 146, 255, .5)',\n        scrollbar: 'rgba(83, 146, 255, .5)'\n      };\n      this.term.setOption('theme', SOL_THEME);\n      this.term.open(this.$refs.panel);\n      fitAddon.fit();\n      this.resizeConsoleWindow = throttle(() => {\n        fitAddon.fit();\n      }, 1000);\n      window.addEventListener('resize', this.resizeConsoleWindow);\n      try {\n        this.ws.onopen = function () {\n          console.log('websocket console/default opened');\n        };\n        this.ws.onclose = function (event) {\n          console.log('websocket console/default closed. code: ' + event.code + ' reason: ' + event.reason);\n        };\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    closeTerminal() {\n      console.log('closeTerminal');\n      this.term.dispose();\n      this.term = null;\n      this.ws.close();\n      this.ws = null;\n    },\n    openConsoleWindow() {\n      window.open('#/console/serial-over-lan-console', '_blank', 'directories=no,titlebar=no,toolbar=no,location=no,status=no,menubar=no,scrollbars=no,resizable=yes,width=600,height=550');\n    }\n  }\n};","map":{"version":3,"names":["Alert","AttachAddon","FitAddon","Terminal","throttle","IconLaunch","StatusIcon","useI18n","name","components","props","isFullWindow","type","Boolean","default","data","$t","t","resizeConsoleWindow","computed","serverStatus","$store","getters","connection","serverStatusIcon","created","dispatch","mounted","openTerminal","beforeUnmount","window","removeEventListener","closeTerminal","methods","token","ws","WebSocket","location","host","term","fontSize","fontFamily","attachAddon","loadAddon","fitAddon","SOL_THEME","background","cursor","scrollbar","setOption","open","$refs","panel","fit","addEventListener","onopen","console","log","onclose","event","code","reason","error","dispose","close","openConsoleWindow"],"sources":["/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/src/views/Operations/SerialOverLan/SerialOverLanConsole.vue"],"sourcesContent":["<template>\n  <div :class=\"isFullWindow ? 'full-window-container' : 'terminal-container'\">\n    <b-row class=\"d-flex\">\n      <b-col sm=\"4\" md=\"6\">\n        <alert\n          v-if=\"connection ? false : true\"\n          variant=\"warning\"\n          :small=\"true\"\n          class=\"mt-4\"\n        >\n          <p class=\"col-form-label\">\n            {{ $t('pageSerialOverLan.alert.disconnectedAlertMessage') }}\n          </p>\n        </alert>\n      </b-col>\n    </b-row>\n    <b-row class=\"d-flex\">\n      <b-col class=\"d-flex flex-column justify-content-end\">\n        <dl class=\"mb-2\" sm=\"6\" md=\"6\">\n          <dt class=\"d-inline font-weight-bold mr-1\">\n            {{ $t('pageSerialOverLan.status') }}:\n          </dt>\n          <dd class=\"d-inline\">\n            <status-icon :status=\"serverStatusIcon\" />\n            {{\n              connection\n                ? $t('pageSerialOverLan.connected')\n                : $t('pageSerialOverLan.disconnected')\n            }}\n          </dd>\n        </dl>\n      </b-col>\n\n      <b-col v-if=\"!isFullWindow\" class=\"d-flex justify-content-end\">\n        <b-button variant=\"link\" type=\"button\" @click=\"openConsoleWindow()\">\n          <icon-launch />\n          {{ $t('pageSerialOverLan.openNewTab') }}\n        </b-button>\n      </b-col>\n    </b-row>\n    <div id=\"terminal\" ref=\"panel\"></div>\n  </div>\n</template>\n\n<script>\nimport Alert from '@/components/Global/Alert';\nimport { AttachAddon } from 'xterm-addon-attach';\nimport { FitAddon } from 'xterm-addon-fit';\nimport { Terminal } from 'xterm';\nimport { throttle } from 'lodash';\nimport IconLaunch from '@carbon/icons-vue/es/launch/20';\nimport StatusIcon from '@/components/Global/StatusIcon';\nimport { useI18n } from 'vue-i18n';\n\nexport default {\n  name: 'SerialOverLanConsole',\n  components: {\n    Alert,\n    IconLaunch,\n    StatusIcon,\n  },\n  props: {\n    isFullWindow: {\n      type: Boolean,\n      default: true,\n    },\n  },\n  data() {\n    return {\n      $t: useI18n().t,\n      resizeConsoleWindow: null,\n    };\n  },\n  computed: {\n    serverStatus() {\n      return this.$store.getters['global/serverStatus'];\n    },\n    connection() {\n      return this.serverStatus === 'off' ? false : true;\n    },\n    serverStatusIcon() {\n      return this.connection ? 'success' : 'danger';\n    },\n  },\n  created() {\n    this.$store.dispatch('global/getSystemInfo');\n  },\n  mounted() {\n    this.openTerminal();\n  },\n  beforeUnmount() {\n    window.removeEventListener('resize', this.resizeConsoleWindow);\n    this.closeTerminal();\n  },\n  methods: {\n    openTerminal() {\n      const token = this.$store.getters['authentication/token'];\n      this.ws = new WebSocket(`wss://${window.location.host}/console/default`, [\n        token,\n      ]);\n\n      // Refer https://github.com/xtermjs/xterm.js/ for xterm implementation and addons.\n\n      this.term = new Terminal({\n        fontSize: 15,\n        fontFamily:\n          'SFMono-Regular, Menlo, Monaco, Consolas, Liberation Mono, Courier New, monospace',\n      });\n\n      const attachAddon = new AttachAddon(this.ws);\n      this.term.loadAddon(attachAddon);\n\n      const fitAddon = new FitAddon();\n      this.term.loadAddon(fitAddon);\n\n      const SOL_THEME = {\n        background: '#19273c',\n        cursor: 'rgba(83, 146, 255, .5)',\n        scrollbar: 'rgba(83, 146, 255, .5)',\n      };\n      this.term.setOption('theme', SOL_THEME);\n\n      this.term.open(this.$refs.panel);\n      fitAddon.fit();\n\n      this.resizeConsoleWindow = throttle(() => {\n        fitAddon.fit();\n      }, 1000);\n      window.addEventListener('resize', this.resizeConsoleWindow);\n\n      try {\n        this.ws.onopen = function () {\n          console.log('websocket console/default opened');\n        };\n        this.ws.onclose = function (event) {\n          console.log(\n            'websocket console/default closed. code: ' +\n              event.code +\n              ' reason: ' +\n              event.reason,\n          );\n        };\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    closeTerminal() {\n      console.log('closeTerminal');\n      this.term.dispose();\n      this.term = null;\n      this.ws.close();\n      this.ws = null;\n    },\n    openConsoleWindow() {\n      window.open(\n        '#/console/serial-over-lan-console',\n        '_blank',\n        'directories=no,titlebar=no,toolbar=no,location=no,status=no,menubar=no,scrollbars=no,resizable=yes,width=600,height=550',\n      );\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import '@/assets/styles/bmc/helpers/_index.scss';\n@import '@/assets/styles/bootstrap/_helpers.scss';\n\n@import '~xterm/css/xterm.css';\n\n#terminal {\n  overflow: auto;\n}\n\n.full-window-container {\n  width: 97%;\n  margin: 1.5%;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}