{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, withCtx as _withCtx } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_page_title = _resolveComponent(\"page-title\");\n  const _component_alerts_server_power = _resolveComponent(\"alerts-server-power\");\n  const _component_bmc_cards = _resolveComponent(\"bmc-cards\");\n  const _component_bios_cards = _resolveComponent(\"bios-cards\");\n  const _component_b_col = _resolveComponent(\"b-col\");\n  const _component_b_row = _resolveComponent(\"b-row\");\n  const _component_form_update = _resolveComponent(\"form-update\");\n  const _component_page_section = _resolveComponent(\"page-section\");\n  const _component_b_container = _resolveComponent(\"b-container\");\n  return _openBlock(), _createBlock(_component_b_container, {\n    fluid: \"xl\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_page_title), $data.isServerPowerOffRequired ? (_openBlock(), _createBlock(_component_alerts_server_power, {\n      key: 0,\n      \"is-server-off\": $options.isServerOff\n    }, null, 8 /* PROPS */, [\"is-server-off\"])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Firmware cards \"), _createVNode(_component_b_row, null, {\n      default: _withCtx(() => [_createVNode(_component_b_col, {\n        xl: \"10\"\n      }, {\n        default: _withCtx(() => [_createCommentVNode(\" BMC Firmware \"), _createVNode(_component_bmc_cards, {\n          \"is-page-disabled\": $options.isPageDisabled,\n          \"is-server-off\": $options.isServerOff\n        }, null, 8 /* PROPS */, [\"is-page-disabled\", \"is-server-off\"]), _createCommentVNode(\" Bios Firmware \"), !$options.isSingleFileUploadEnabled ? (_openBlock(), _createBlock(_component_bios_cards, {\n          key: 0\n        })) : _createCommentVNode(\"v-if\", true)], undefined, true),\n        _: 1 /* STABLE */\n      })], undefined, true),\n      _: 1 /* STABLE */\n    }), _createCommentVNode(\" Update firmware\"), _createVNode(_component_page_section, {\n      \"section-title\": $data.$t('pageFirmware.sectionTitleUpdateFirmware')\n    }, {\n      default: _withCtx(() => [_createVNode(_component_b_row, null, {\n        default: _withCtx(() => [_createVNode(_component_b_col, {\n          sm: \"8\",\n          md: \"6\",\n          xl: \"4\"\n        }, {\n          default: _withCtx(() => [_createCommentVNode(\" Update form \"), _createVNode(_component_form_update, {\n            \"is-server-off\": $options.isServerOff,\n            \"is-page-disabled\": $options.isPageDisabled\n          }, null, 8 /* PROPS */, [\"is-server-off\", \"is-page-disabled\"])], undefined, true),\n          _: 1 /* STABLE */\n        })], undefined, true),\n        _: 1 /* STABLE */\n      })], undefined, true),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"section-title\"])], undefined, true),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createBlock","_component_b_container","fluid","default","_withCtx","_createVNode","_component_page_title","$data","isServerPowerOffRequired","_component_alerts_server_power","key","$options","isServerOff","_createCommentVNode","_component_b_row","_component_b_col","xl","_component_bmc_cards","isPageDisabled","isSingleFileUploadEnabled","_component_bios_cards","_","_component_page_section","$t","sm","md","_component_form_update"],"sources":["/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/src/views/Operations/Firmware/Firmware.vue"],"sourcesContent":["<template>\n  <b-container fluid=\"xl\">\n    <page-title />\n    <alerts-server-power\n      v-if=\"isServerPowerOffRequired\"\n      :is-server-off=\"isServerOff\"\n    />\n\n    <!-- Firmware cards -->\n    <b-row>\n      <b-col xl=\"10\">\n        <!-- BMC Firmware -->\n        <bmc-cards\n          :is-page-disabled=\"isPageDisabled\"\n          :is-server-off=\"isServerOff\"\n        />\n\n        <!-- Bios Firmware -->\n        <bios-cards v-if=\"!isSingleFileUploadEnabled\" />\n      </b-col>\n    </b-row>\n\n    <!-- Update firmware-->\n    <page-section\n      :section-title=\"$t('pageFirmware.sectionTitleUpdateFirmware')\"\n    >\n      <b-row>\n        <b-col sm=\"8\" md=\"6\" xl=\"4\">\n          <!-- Update form -->\n          <form-update\n            :is-server-off=\"isServerOff\"\n            :is-page-disabled=\"isPageDisabled\"\n          />\n        </b-col>\n      </b-row>\n    </page-section>\n  </b-container>\n</template>\n\n<script>\nimport AlertsServerPower from './FirmwareAlertServerPower';\nimport BmcCards from './FirmwareCardsBmc';\nimport FormUpdate from './FirmwareFormUpdate';\nimport BiosCards from './FirmwareCardsBios';\nimport PageSection from '@/components/Global/PageSection';\nimport PageTitle from '@/components/Global/PageTitle';\n\nimport LoadingBarMixin, { loading } from '@/components/Mixins/LoadingBarMixin';\nimport { useI18n } from 'vue-i18n';\n\nexport default {\n  name: 'FirmwareSingleImage',\n  components: {\n    AlertsServerPower,\n    BmcCards,\n    FormUpdate,\n    BiosCards,\n    PageSection,\n    PageTitle,\n  },\n  mixins: [LoadingBarMixin],\n  beforeRouteLeave(to, from, next) {\n    this.hideLoader();\n    next();\n  },\n  data() {\n    return {\n      $t: useI18n().t,\n      loading,\n      isServerPowerOffRequired:\n        process.env.VUE_APP_SERVER_OFF_REQUIRED === 'true',\n    };\n  },\n  computed: {\n    serverStatus() {\n      return this.$store.getters['global/serverStatus'];\n    },\n    isServerOff() {\n      return this.serverStatus === 'off' ? true : false;\n    },\n    isSingleFileUploadEnabled() {\n      return this.$store.getters['firmware/isSingleFileUploadEnabled'];\n    },\n    isPageDisabled() {\n      if (this.isServerPowerOffRequired) {\n        return !this.isServerOff || this.loading || this.isOperationInProgress;\n      }\n      return this.loading || this.isOperationInProgress;\n    },\n  },\n  created() {\n    this.startLoader();\n    this.$store\n      .dispatch('firmware/getFirmwareInformation')\n      .finally(() => this.endLoader());\n  },\n};\n</script>\n"],"mappings":";;;;;;;;;;;uBACEA,YAAA,CAmCcC,sBAAA;IAnCDC,KAAK,EAAC;EAAI;IADzBC,OAAA,EAAAC,QAAA,CAEI,MAAc,CAAdC,YAAA,CAAcC,qBAAA,GAENC,KAAA,CAAAC,wBAAwB,I,cADhCR,YAAA,CAGES,8BAAA;MANNC,GAAA;MAKO,eAAa,EAAEC,QAAA,CAAAC;kDALtBC,mBAAA,gBAQIA,mBAAA,oBAAuB,EACvBR,YAAA,CAWQS,gBAAA;MApBZX,OAAA,EAAAC,QAAA,CAUM,MASQ,CATRC,YAAA,CASQU,gBAAA;QATDC,EAAE,EAAC;MAAI;QAVpBb,OAAA,EAAAC,QAAA,CAWQ,MAAqB,CAArBS,mBAAA,kBAAqB,EACrBR,YAAA,CAGEY,oBAAA;UAFC,kBAAgB,EAAEN,QAAA,CAAAO,cAAc;UAChC,eAAa,EAAEP,QAAA,CAAAC;wEAGlBC,mBAAA,mBAAsB,E,CACHF,QAAA,CAAAQ,yBAAyB,I,cAA5CnB,YAAA,CAAgDoB,qBAAA;UAlBxDV,GAAA;QAAA,MAAAG,mBAAA,e;QAAAQ,CAAA;;MAAAA,CAAA;QAsBIR,mBAAA,oBAAuB,EACvBR,YAAA,CAYeiB,uBAAA;MAXZ,eAAa,EAAEf,KAAA,CAAAgB,EAAE;;MAxBxBpB,OAAA,EAAAC,QAAA,CA0BM,MAQQ,CARRC,YAAA,CAQQS,gBAAA;QAlCdX,OAAA,EAAAC,QAAA,CA2BQ,MAMQ,CANRC,YAAA,CAMQU,gBAAA;UANDS,EAAE,EAAC,GAAG;UAACC,EAAE,EAAC,GAAG;UAACT,EAAE,EAAC;;UA3BhCb,OAAA,EAAAC,QAAA,CA4BU,MAAoB,CAApBS,mBAAA,iBAAoB,EACpBR,YAAA,CAGEqB,sBAAA;YAFC,eAAa,EAAEf,QAAA,CAAAC,WAAW;YAC1B,kBAAgB,EAAED,QAAA,CAAAO;;UA/B/BG,CAAA;;QAAAA,CAAA;;MAAAA,CAAA;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}