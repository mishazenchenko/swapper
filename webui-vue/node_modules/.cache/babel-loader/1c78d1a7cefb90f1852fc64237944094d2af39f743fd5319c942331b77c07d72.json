{"ast":null,"code":"import PageTitle from '@/components/Global/PageTitle';\nimport Search from '@/components/Global/Search';\nimport TableCellCount from '@/components/Global/TableCellCount';\nimport TableRowAction from '@/components/Global/TableRowAction';\nimport TableToolbar from '@/components/Global/TableToolbar';\nimport LoadingBarMixin from '@/components/Mixins/LoadingBarMixin';\nimport BVPaginationMixin, { currentPage, perPage, itemsPerPageOptions } from '@/components/Mixins/BVPaginationMixin';\nimport BVTableSelectableMixin, { selectedRows, tableHeaderCheckboxModel, tableHeaderCheckboxIndeterminate } from '@/components/Mixins/BVTableSelectableMixin';\nimport BVToastMixin from '@/components/Mixins/BVToastMixin';\nimport SearchFilterMixin, { searchFilter } from '@/components/Mixins/SearchFilterMixin';\nimport { useI18n } from 'vue-i18n';\nimport i18n from '@/i18n';\nexport default {\n  components: {\n    PageTitle,\n    Search,\n    TableCellCount,\n    TableRowAction,\n    TableToolbar\n  },\n  mixins: [BVPaginationMixin, BVTableSelectableMixin, BVToastMixin, LoadingBarMixin, SearchFilterMixin],\n  beforeRouteLeave(to, from, next) {\n    // Hide loader if the user navigates to another page\n    // before request is fulfilled.\n    this.hideLoader();\n    next();\n  },\n  data() {\n    return {\n      $t: useI18n().t,\n      isBusy: true,\n      fields: [{\n        key: 'checkbox',\n        class: 'text-center'\n      }, {\n        key: 'sessionID',\n        label: i18n.global.t('pageSessions.table.sessionID'),\n        class: 'text-center'\n      }, {\n        key: 'context',\n        label: i18n.global.t('pageSessions.table.context'),\n        class: 'text-center'\n      }, {\n        key: 'username',\n        label: i18n.global.t('pageSessions.table.username'),\n        class: 'text-center'\n      }, {\n        key: 'ipAddress',\n        label: i18n.global.t('pageSessions.table.ipAddress'),\n        class: 'text-center'\n      }, {\n        key: 'actions',\n        label: '',\n        class: 'text-center'\n      }],\n      batchActions: [{\n        value: 'disconnect',\n        label: i18n.global.t('pageSessions.action.disconnect')\n      }],\n      currentPage: currentPage,\n      itemsPerPageOptions: itemsPerPageOptions,\n      perPage: perPage,\n      selectedRows: selectedRows,\n      searchTotalFilteredRows: 0,\n      tableHeaderCheckboxModel: tableHeaderCheckboxModel,\n      tableHeaderCheckboxIndeterminate: tableHeaderCheckboxIndeterminate,\n      searchFilter: searchFilter\n    };\n  },\n  computed: {\n    filteredRows() {\n      return this.searchFilter ? this.searchTotalFilteredRows : this.allConnections.length;\n    },\n    allConnections() {\n      return this.$store.getters['sessions/allConnections'].map(session => {\n        return {\n          ...session,\n          actions: [{\n            value: 'disconnect',\n            title: i18n.global.t('pageSessions.action.disconnect')\n          }]\n        };\n      });\n    }\n  },\n  created() {\n    this.startLoader();\n    this.$store.dispatch('sessions/getSessionsData').finally(() => {\n      this.endLoader();\n      this.isBusy = false;\n    });\n  },\n  methods: {\n    onFiltered(filteredItems) {\n      this.searchTotalFilteredRows = filteredItems.length;\n    },\n    onChangeSearchInput(event) {\n      this.searchFilter = event;\n    },\n    disconnectSessions(uris) {\n      this.$store.dispatch('sessions/disconnectSessions', uris).then(messages => {\n        messages.forEach(({\n          type,\n          message\n        }) => {\n          if (type === 'success') {\n            this.successToast(message);\n          } else if (type === 'error') {\n            this.errorToast(message);\n          }\n        });\n      });\n    },\n    onTableRowAction(action, {\n      uri\n    }) {\n      if (action === 'disconnect') {\n        this.$bvModal.msgBoxConfirm(i18n.global.t('pageSessions.modal.disconnectMessage'), {\n          title: i18n.global.t('pageSessions.modal.disconnectTitle'),\n          okTitle: i18n.global.t('pageSessions.action.disconnect'),\n          cancelTitle: i18n.global.t('global.action.cancel'),\n          autoFocusButton: 'ok'\n        }).then(deleteConfirmed => {\n          if (deleteConfirmed) this.disconnectSessions([uri]);\n        });\n      }\n    },\n    onBatchAction(action) {\n      if (action === 'disconnect') {\n        const uris = this.selectedRows.map(row => row.uri);\n        this.$bvModal.msgBoxConfirm(i18n.global.t('pageSessions.modal.disconnectMessage', this.selectedRows.length), {\n          title: i18n.global.t('pageSessions.modal.disconnectTitle', this.selectedRows.length),\n          okTitle: i18n.global.t('pageSessions.action.disconnect'),\n          cancelTitle: i18n.global.t('global.action.cancel'),\n          autoFocusButton: 'ok'\n        }).then(deleteConfirmed => {\n          if (deleteConfirmed) {\n            this.disconnectSessions(uris);\n          }\n        });\n      }\n    }\n  }\n};","map":{"version":3,"names":["PageTitle","Search","TableCellCount","TableRowAction","TableToolbar","LoadingBarMixin","BVPaginationMixin","currentPage","perPage","itemsPerPageOptions","BVTableSelectableMixin","selectedRows","tableHeaderCheckboxModel","tableHeaderCheckboxIndeterminate","BVToastMixin","SearchFilterMixin","searchFilter","useI18n","i18n","components","mixins","beforeRouteLeave","to","from","next","hideLoader","data","$t","t","isBusy","fields","key","class","label","global","batchActions","value","searchTotalFilteredRows","computed","filteredRows","allConnections","length","$store","getters","map","session","actions","title","created","startLoader","dispatch","finally","endLoader","methods","onFiltered","filteredItems","onChangeSearchInput","event","disconnectSessions","uris","then","messages","forEach","type","message","successToast","errorToast","onTableRowAction","action","uri","$bvModal","msgBoxConfirm","okTitle","cancelTitle","autoFocusButton","deleteConfirmed","onBatchAction","row"],"sources":["/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/src/views/SecurityAndAccess/Sessions/Sessions.vue"],"sourcesContent":["<template>\n  <b-container fluid=\"xl\">\n    <page-title />\n    <b-row class=\"align-items-end\">\n      <b-col sm=\"6\" md=\"5\" xl=\"4\">\n        <search\n          :placeholder=\"$t('pageSessions.table.searchSessions')\"\n          data-test-id=\"sessions-input-searchSessions\"\n          @change-search=\"onChangeSearchInput\"\n          @clear-search=\"onClearSearchInput\"\n        />\n      </b-col>\n      <b-col sm=\"3\" md=\"3\" xl=\"2\">\n        <table-cell-count\n          :filtered-items-count=\"filteredRows\"\n          :total-number-of-cells=\"allConnections.length\"\n        ></table-cell-count>\n      </b-col>\n    </b-row>\n    <b-row>\n      <b-col>\n        <table-toolbar\n          ref=\"toolbar\"\n          :selected-items-count=\"selectedRows.length\"\n          :actions=\"batchActions\"\n          @clear-selected=\"clearSelectedRows($refs.table)\"\n          @batch-action=\"onBatchAction\"\n        >\n        </table-toolbar>\n        <b-table\n          id=\"table-session-logs\"\n          ref=\"table\"\n          responsive=\"md\"\n          selectable\n          no-select-on-click\n          hover\n          show-empty\n          sort-by=\"sessionID\"\n          :busy=\"isBusy\"\n          :fields=\"fields\"\n          :items=\"allConnections\"\n          :filter=\"searchFilter\"\n          :empty-text=\"$t('global.table.emptyMessage')\"\n          :per-page=\"perPage\"\n          :current-page=\"currentPage\"\n          @filtered=\"onFiltered\"\n          @row-selected=\"onRowSelected($event, allConnections.length)\"\n        >\n          <!-- Checkbox column -->\n          <template #head(checkbox)>\n            <b-form-checkbox\n              v-model=\"tableHeaderCheckboxModel\"\n              data-test-id=\"sessions-checkbox-selectAll\"\n              :indeterminate=\"tableHeaderCheckboxIndeterminate\"\n              @change=\"onChangeHeaderCheckbox($refs.table)\"\n            >\n              <span class=\"sr-only\">{{ $t('global.table.selectAll') }}</span>\n            </b-form-checkbox>\n          </template>\n          <template #cell(checkbox)=\"row\">\n            <b-form-checkbox\n              v-model=\"row.rowSelected\"\n              :data-test-id=\"`sessions-checkbox-selectRow-${row.index}`\"\n              @change=\"toggleSelectRow($refs.table, row.index)\"\n            >\n              <span class=\"sr-only\">{{ $t('global.table.selectItem') }}</span>\n            </b-form-checkbox>\n          </template>\n\n          <!-- Actions column -->\n          <template #cell(actions)=\"row\">\n            <table-row-action\n              v-for=\"(action, index) in row.item.actions\"\n              :key=\"index\"\n              :value=\"action.value\"\n              :title=\"action.title\"\n              :row-data=\"row.item\"\n              :btn-icon-only=\"false\"\n              :data-test-id=\"`sessions-button-disconnect-${row.index}`\"\n              @click-table-action=\"onTableRowAction($event, row.item)\"\n            ></table-row-action>\n          </template>\n        </b-table>\n      </b-col>\n    </b-row>\n\n    <!-- Table pagination -->\n    <b-row>\n      <b-col sm=\"6\">\n        <b-form-group\n          class=\"table-pagination-select\"\n          :label=\"$t('global.table.itemsPerPage')\"\n          label-for=\"pagination-items-per-page\"\n        >\n          <b-form-select\n            id=\"pagination-items-per-page\"\n            v-model=\"perPage\"\n            :options=\"itemsPerPageOptions\"\n          />\n        </b-form-group>\n      </b-col>\n      <b-col sm=\"6\">\n        <b-pagination\n          v-model=\"currentPage\"\n          first-number\n          last-number\n          :per-page=\"perPage\"\n          :total-rows=\"getTotalRowCount(filteredRows)\"\n          aria-controls=\"table-session-logs\"\n        />\n      </b-col>\n    </b-row>\n  </b-container>\n</template>\n\n<script>\nimport PageTitle from '@/components/Global/PageTitle';\nimport Search from '@/components/Global/Search';\nimport TableCellCount from '@/components/Global/TableCellCount';\nimport TableRowAction from '@/components/Global/TableRowAction';\nimport TableToolbar from '@/components/Global/TableToolbar';\n\nimport LoadingBarMixin from '@/components/Mixins/LoadingBarMixin';\nimport BVPaginationMixin, {\n  currentPage,\n  perPage,\n  itemsPerPageOptions,\n} from '@/components/Mixins/BVPaginationMixin';\nimport BVTableSelectableMixin, {\n  selectedRows,\n  tableHeaderCheckboxModel,\n  tableHeaderCheckboxIndeterminate,\n} from '@/components/Mixins/BVTableSelectableMixin';\nimport BVToastMixin from '@/components/Mixins/BVToastMixin';\nimport SearchFilterMixin, {\n  searchFilter,\n} from '@/components/Mixins/SearchFilterMixin';\nimport { useI18n } from 'vue-i18n';\nimport i18n from '@/i18n';\n\nexport default {\n  components: {\n    PageTitle,\n    Search,\n    TableCellCount,\n    TableRowAction,\n    TableToolbar,\n  },\n  mixins: [\n    BVPaginationMixin,\n    BVTableSelectableMixin,\n    BVToastMixin,\n    LoadingBarMixin,\n    SearchFilterMixin,\n  ],\n  beforeRouteLeave(to, from, next) {\n    // Hide loader if the user navigates to another page\n    // before request is fulfilled.\n    this.hideLoader();\n    next();\n  },\n  data() {\n    return {\n      $t: useI18n().t,\n      isBusy: true,\n      fields: [\n        {\n          key: 'checkbox',\n          class: 'text-center',\n        },\n        {\n          key: 'sessionID',\n          label: i18n.global.t('pageSessions.table.sessionID'),\n          class: 'text-center',\n        },\n        {\n          key: 'context',\n          label: i18n.global.t('pageSessions.table.context'),\n          class: 'text-center',\n        },\n        {\n          key: 'username',\n          label: i18n.global.t('pageSessions.table.username'),\n          class: 'text-center',\n        },\n        {\n          key: 'ipAddress',\n          label: i18n.global.t('pageSessions.table.ipAddress'),\n          class: 'text-center',\n        },\n        {\n          key: 'actions',\n          label: '',\n          class: 'text-center',\n        },\n      ],\n      batchActions: [\n        {\n          value: 'disconnect',\n          label: i18n.global.t('pageSessions.action.disconnect'),\n        },\n      ],\n      currentPage: currentPage,\n      itemsPerPageOptions: itemsPerPageOptions,\n      perPage: perPage,\n      selectedRows: selectedRows,\n      searchTotalFilteredRows: 0,\n      tableHeaderCheckboxModel: tableHeaderCheckboxModel,\n      tableHeaderCheckboxIndeterminate: tableHeaderCheckboxIndeterminate,\n      searchFilter: searchFilter,\n    };\n  },\n  computed: {\n    filteredRows() {\n      return this.searchFilter\n        ? this.searchTotalFilteredRows\n        : this.allConnections.length;\n    },\n    allConnections() {\n      return this.$store.getters['sessions/allConnections'].map((session) => {\n        return {\n          ...session,\n          actions: [\n            {\n              value: 'disconnect',\n              title: i18n.global.t('pageSessions.action.disconnect'),\n            },\n          ],\n        };\n      });\n    },\n  },\n  created() {\n    this.startLoader();\n    this.$store.dispatch('sessions/getSessionsData').finally(() => {\n      this.endLoader();\n      this.isBusy = false;\n    });\n  },\n  methods: {\n    onFiltered(filteredItems) {\n      this.searchTotalFilteredRows = filteredItems.length;\n    },\n    onChangeSearchInput(event) {\n      this.searchFilter = event;\n    },\n    disconnectSessions(uris) {\n      this.$store\n        .dispatch('sessions/disconnectSessions', uris)\n        .then((messages) => {\n          messages.forEach(({ type, message }) => {\n            if (type === 'success') {\n              this.successToast(message);\n            } else if (type === 'error') {\n              this.errorToast(message);\n            }\n          });\n        });\n    },\n    onTableRowAction(action, { uri }) {\n      if (action === 'disconnect') {\n        this.$bvModal\n          .msgBoxConfirm(\n            i18n.global.t('pageSessions.modal.disconnectMessage'),\n            {\n              title: i18n.global.t('pageSessions.modal.disconnectTitle'),\n              okTitle: i18n.global.t('pageSessions.action.disconnect'),\n              cancelTitle: i18n.global.t('global.action.cancel'),\n              autoFocusButton: 'ok',\n            },\n          )\n          .then((deleteConfirmed) => {\n            if (deleteConfirmed) this.disconnectSessions([uri]);\n          });\n      }\n    },\n    onBatchAction(action) {\n      if (action === 'disconnect') {\n        const uris = this.selectedRows.map((row) => row.uri);\n        this.$bvModal\n          .msgBoxConfirm(\n            i18n.global.t(\n              'pageSessions.modal.disconnectMessage',\n              this.selectedRows.length,\n            ),\n            {\n              title: i18n.global.t(\n                'pageSessions.modal.disconnectTitle',\n                this.selectedRows.length,\n              ),\n              okTitle: i18n.global.t('pageSessions.action.disconnect'),\n              cancelTitle: i18n.global.t('global.action.cancel'),\n              autoFocusButton: 'ok',\n            },\n          )\n          .then((deleteConfirmed) => {\n            if (deleteConfirmed) {\n              this.disconnectSessions(uris);\n            }\n          });\n      }\n    },\n  },\n};\n</script>\n<style lang=\"scss\">\n#table-session-logs {\n  td .btn-link {\n    width: auto !important;\n  }\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}