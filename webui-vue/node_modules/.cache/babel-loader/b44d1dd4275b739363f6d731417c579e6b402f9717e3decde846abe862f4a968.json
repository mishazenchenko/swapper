{"ast":null,"code":"import VuelidateMixin from '@/components/Mixins/VuelidateMixin.js';\nimport { useVuelidate } from '@vuelidate/core';\nimport { ipAddress, required } from '@vuelidate/validators';\nimport { useI18n } from 'vue-i18n';\nexport default {\n  mixins: [VuelidateMixin],\n  props: {\n    defaultGateway: {\n      type: String,\n      default: ''\n    }\n  },\n  setup() {\n    return {\n      v$: useVuelidate()\n    };\n  },\n  data() {\n    return {\n      $t: useI18n().t,\n      form: {\n        ipAddress: '',\n        gateway: '',\n        subnetMask: ''\n      }\n    };\n  },\n  watch: {\n    defaultGateway() {\n      this.form.gateway = this.defaultGateway;\n    }\n  },\n  validations() {\n    return {\n      form: {\n        ipAddress: {\n          required,\n          ipAddress\n        },\n        gateway: {\n          required,\n          ipAddress\n        },\n        subnetMask: {\n          required,\n          ipAddress\n        }\n      }\n    };\n  },\n  methods: {\n    handleSubmit() {\n      this.v$.$touch();\n      if (this.v$.$invalid) return;\n      this.$emit('ok', {\n        Address: this.form.ipAddress,\n        Gateway: this.form.gateway,\n        SubnetMask: this.form.subnetMask\n      });\n      this.closeModal();\n    },\n    closeModal() {\n      this.$nextTick(() => {\n        this.$refs.modal.hide();\n      });\n    },\n    resetForm() {\n      this.form.ipAddress = null;\n      this.form.gateway = this.defaultGateway;\n      this.form.subnetMask = null;\n      this.v$.$reset();\n      this.$emit('hidden');\n    },\n    onOk(bvModalEvt) {\n      // prevent modal close\n      bvModalEvt.preventDefault();\n      this.handleSubmit();\n    }\n  }\n};","map":{"version":3,"names":["VuelidateMixin","useVuelidate","ipAddress","required","useI18n","mixins","props","defaultGateway","type","String","default","setup","v$","data","$t","t","form","gateway","subnetMask","watch","validations","methods","handleSubmit","$touch","$invalid","$emit","Address","Gateway","SubnetMask","closeModal","$nextTick","$refs","modal","hide","resetForm","$reset","onOk","bvModalEvt","preventDefault"],"sources":["/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/src/views/Settings/Network/ModalIpv4.vue"],"sourcesContent":["<template>\n  <b-modal\n    id=\"modal-add-ipv4\"\n    ref=\"modal\"\n    :title=\"$t('pageNetwork.table.addIpv4Address')\"\n    @hidden=\"resetForm\"\n  >\n    <b-form id=\"form-ipv4\" @submit.prevent=\"handleSubmit\">\n      <b-row>\n        <b-col sm=\"6\">\n          <b-form-group\n            :label=\"$t('pageNetwork.modal.ipAddress')\"\n            label-for=\"ipAddress\"\n          >\n            <b-form-input\n              id=\"ipAddress\"\n              v-model=\"form.ipAddress\"\n              type=\"text\"\n              :state=\"getValidationState(v$.form.ipAddress)\"\n              @input=\"v$.form.ipAddress.$touch()\"\n            />\n            <b-form-invalid-feedback role=\"alert\">\n              <template v-if=\"v$.form.ipAddress.required.$invalid\">\n                {{ $t('global.form.fieldRequired') }}\n              </template>\n              <template v-if=\"v$.form.ipAddress.ipAddress.$invalid\">\n                {{ $t('global.form.invalidFormat') }}\n              </template>\n            </b-form-invalid-feedback>\n          </b-form-group>\n        </b-col>\n        <b-col sm=\"6\">\n          <b-form-group\n            :label=\"$t('pageNetwork.modal.gateway')\"\n            label-for=\"gateway\"\n          >\n            <b-form-input\n              id=\"gateway\"\n              v-model=\"form.gateway\"\n              type=\"text\"\n              :state=\"getValidationState(v$.form.gateway)\"\n              @input=\"v$.form.gateway.$touch()\"\n            />\n            <b-form-invalid-feedback role=\"alert\">\n              <template v-if=\"v$.form.gateway.required.$invalid\">\n                {{ $t('global.form.fieldRequired') }}\n              </template>\n              <template v-if=\"v$.form.gateway.ipAddress.$invalid\">\n                {{ $t('global.form.invalidFormat') }}\n              </template>\n            </b-form-invalid-feedback>\n          </b-form-group>\n        </b-col>\n      </b-row>\n      <b-row>\n        <b-col sm=\"6\">\n          <b-form-group\n            :label=\"$t('pageNetwork.modal.subnetMask')\"\n            label-for=\"subnetMask\"\n          >\n            <b-form-input\n              id=\"subnetMask\"\n              v-model=\"form.subnetMask\"\n              type=\"text\"\n              :state=\"getValidationState(v$.form.subnetMask)\"\n              @input=\"v$.form.subnetMask.$touch()\"\n            />\n            <b-form-invalid-feedback role=\"alert\">\n              <template v-if=\"v$.form.subnetMask.required.$invalid\">\n                {{ $t('global.form.fieldRequired') }}\n              </template>\n              <template v-if=\"v$.form.subnetMask.ipAddress.$invalid\">\n                {{ $t('global.form.invalidFormat') }}\n              </template>\n            </b-form-invalid-feedback>\n          </b-form-group>\n        </b-col>\n      </b-row>\n    </b-form>\n    <template #modal-footer=\"{ cancel }\">\n      <b-button variant=\"secondary\" @click=\"cancel()\">\n        {{ $t('global.action.cancel') }}\n      </b-button>\n      <b-button form=\"form-ipv4\" type=\"submit\" variant=\"primary\" @click=\"onOk\">\n        {{ $t('global.action.add') }}\n      </b-button>\n    </template>\n  </b-modal>\n</template>\n\n<script>\nimport VuelidateMixin from '@/components/Mixins/VuelidateMixin.js';\nimport { useVuelidate } from '@vuelidate/core';\n\nimport { ipAddress, required } from '@vuelidate/validators';\nimport { useI18n } from 'vue-i18n';\n\nexport default {\n  mixins: [VuelidateMixin],\n  props: {\n    defaultGateway: {\n      type: String,\n      default: '',\n    },\n  },\n  setup() {\n    return {\n      v$: useVuelidate(),\n    };\n  },\n  data() {\n    return {\n      $t: useI18n().t,\n      form: {\n        ipAddress: '',\n        gateway: '',\n        subnetMask: '',\n      },\n    };\n  },\n  watch: {\n    defaultGateway() {\n      this.form.gateway = this.defaultGateway;\n    },\n  },\n  validations() {\n    return {\n      form: {\n        ipAddress: {\n          required,\n          ipAddress,\n        },\n        gateway: {\n          required,\n          ipAddress,\n        },\n        subnetMask: {\n          required,\n          ipAddress,\n        },\n      },\n    };\n  },\n  methods: {\n    handleSubmit() {\n      this.v$.$touch();\n      if (this.v$.$invalid) return;\n      this.$emit('ok', {\n        Address: this.form.ipAddress,\n        Gateway: this.form.gateway,\n        SubnetMask: this.form.subnetMask,\n      });\n      this.closeModal();\n    },\n    closeModal() {\n      this.$nextTick(() => {\n        this.$refs.modal.hide();\n      });\n    },\n    resetForm() {\n      this.form.ipAddress = null;\n      this.form.gateway = this.defaultGateway;\n      this.form.subnetMask = null;\n      this.v$.$reset();\n      this.$emit('hidden');\n    },\n    onOk(bvModalEvt) {\n      // prevent modal close\n      bvModalEvt.preventDefault();\n      this.handleSubmit();\n    },\n  },\n};\n</script>\n"],"mappings":"AA2FA,OAAOA,cAAa,MAAO,uCAAuC;AAClE,SAASC,YAAW,QAAS,iBAAiB;AAE9C,SAASC,SAAS,EAAEC,QAAO,QAAS,uBAAuB;AAC3D,SAASC,OAAM,QAAS,UAAU;AAElC,eAAe;EACbC,MAAM,EAAE,CAACL,cAAc,CAAC;EACxBM,KAAK,EAAE;IACLC,cAAc,EAAE;MACdC,IAAI,EAAEC,MAAM;MACZC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,KAAKA,CAAA,EAAG;IACN,OAAO;MACLC,EAAE,EAAEX,YAAY,CAAC;IACnB,CAAC;EACH,CAAC;EACDY,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,EAAE,EAAEV,OAAO,CAAC,CAAC,CAACW,CAAC;MACfC,IAAI,EAAE;QACJd,SAAS,EAAE,EAAE;QACbe,OAAO,EAAE,EAAE;QACXC,UAAU,EAAE;MACd;IACF,CAAC;EACH,CAAC;EACDC,KAAK,EAAE;IACLZ,cAAcA,CAAA,EAAG;MACf,IAAI,CAACS,IAAI,CAACC,OAAM,GAAI,IAAI,CAACV,cAAc;IACzC;EACF,CAAC;EACDa,WAAWA,CAAA,EAAG;IACZ,OAAO;MACLJ,IAAI,EAAE;QACJd,SAAS,EAAE;UACTC,QAAQ;UACRD;QACF,CAAC;QACDe,OAAO,EAAE;UACPd,QAAQ;UACRD;QACF,CAAC;QACDgB,UAAU,EAAE;UACVf,QAAQ;UACRD;QACF;MACF;IACF,CAAC;EACH,CAAC;EACDmB,OAAO,EAAE;IACPC,YAAYA,CAAA,EAAG;MACb,IAAI,CAACV,EAAE,CAACW,MAAM,CAAC,CAAC;MAChB,IAAI,IAAI,CAACX,EAAE,CAACY,QAAQ,EAAE;MACtB,IAAI,CAACC,KAAK,CAAC,IAAI,EAAE;QACfC,OAAO,EAAE,IAAI,CAACV,IAAI,CAACd,SAAS;QAC5ByB,OAAO,EAAE,IAAI,CAACX,IAAI,CAACC,OAAO;QAC1BW,UAAU,EAAE,IAAI,CAACZ,IAAI,CAACE;MACxB,CAAC,CAAC;MACF,IAAI,CAACW,UAAU,CAAC,CAAC;IACnB,CAAC;IACDA,UAAUA,CAAA,EAAG;MACX,IAAI,CAACC,SAAS,CAAC,MAAM;QACnB,IAAI,CAACC,KAAK,CAACC,KAAK,CAACC,IAAI,CAAC,CAAC;MACzB,CAAC,CAAC;IACJ,CAAC;IACDC,SAASA,CAAA,EAAG;MACV,IAAI,CAAClB,IAAI,CAACd,SAAQ,GAAI,IAAI;MAC1B,IAAI,CAACc,IAAI,CAACC,OAAM,GAAI,IAAI,CAACV,cAAc;MACvC,IAAI,CAACS,IAAI,CAACE,UAAS,GAAI,IAAI;MAC3B,IAAI,CAACN,EAAE,CAACuB,MAAM,CAAC,CAAC;MAChB,IAAI,CAACV,KAAK,CAAC,QAAQ,CAAC;IACtB,CAAC;IACDW,IAAIA,CAACC,UAAU,EAAE;MACf;MACAA,UAAU,CAACC,cAAc,CAAC,CAAC;MAC3B,IAAI,CAAChB,YAAY,CAAC,CAAC;IACrB;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}