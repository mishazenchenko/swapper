{"ast":null,"code":"import { required, requiredIf } from '@vuelidate/validators';\nimport VuelidateMixin from '@/components/Mixins/VuelidateMixin.js';\nimport { useVuelidate } from '@vuelidate/core';\nimport { useI18n } from 'vue-i18n';\nexport default {\n  mixins: [VuelidateMixin],\n  props: {\n    roleGroup: {\n      type: Object,\n      default: null,\n      validator: prop => {\n        if (prop === null) return true;\n        return Object.prototype.hasOwnProperty.call(prop, 'groupName') && Object.prototype.hasOwnProperty.call(prop, 'groupPrivilege');\n      }\n    }\n  },\n  setup() {\n    return {\n      v$: useVuelidate()\n    };\n  },\n  data() {\n    return {\n      $t: useI18n().t,\n      form: {\n        groupName: null,\n        groupPrivilege: null\n      }\n    };\n  },\n  computed: {\n    accountRoles() {\n      return this.$store.getters['userManagement/accountRoles'];\n    }\n  },\n  watch: {\n    roleGroup: function (value) {\n      if (value === null) return;\n      this.form.groupName = value.groupName;\n      this.form.groupPrivilege = value.groupPrivilege;\n    }\n  },\n  validations() {\n    return {\n      form: {\n        groupName: {\n          required: requiredIf(function () {\n            return !this.roleGroup;\n          })\n        },\n        groupPrivilege: {\n          required\n        }\n      }\n    };\n  },\n  methods: {\n    handleSubmit() {\n      this.v$.$touch();\n      if (this.v$.$invalid) return;\n      this.$emit('ok', {\n        addNew: !this.roleGroup,\n        groupName: this.form.groupName,\n        groupPrivilege: this.form.groupPrivilege\n      });\n      this.closeModal();\n    },\n    closeModal() {\n      this.$nextTick(() => {\n        this.$refs.modal.hide();\n      });\n    },\n    resetForm() {\n      this.form.groupName = null;\n      this.form.groupPrivilege = null;\n      this.v$.$reset();\n      this.$emit('hidden');\n    },\n    onOk(bvModalEvt) {\n      // prevent modal close\n      bvModalEvt.preventDefault();\n      this.handleSubmit();\n    }\n  }\n};","map":{"version":3,"names":["required","requiredIf","VuelidateMixin","useVuelidate","useI18n","mixins","props","roleGroup","type","Object","default","validator","prop","prototype","hasOwnProperty","call","setup","v$","data","$t","t","form","groupName","groupPrivilege","computed","accountRoles","$store","getters","watch","value","validations","methods","handleSubmit","$touch","$invalid","$emit","addNew","closeModal","$nextTick","$refs","modal","hide","resetForm","$reset","onOk","bvModalEvt","preventDefault"],"sources":["/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/src/views/SecurityAndAccess/Ldap/ModalAddRoleGroup.vue"],"sourcesContent":["<template>\n  <b-modal id=\"modal-role-group\" ref=\"modal\" @ok=\"onOk\" @hidden=\"resetForm\">\n    <template #modal-title>\n      <template v-if=\"roleGroup\">\n        {{ $t('pageLdap.modal.editRoleGroup') }}\n      </template>\n      <template v-else>\n        {{ $t('pageLdap.modal.addNewRoleGroup') }}\n      </template>\n    </template>\n    <b-container>\n      <b-row>\n        <b-col sm=\"8\">\n          <b-form id=\"role-group\" @submit.prevent=\"handleSubmit\">\n            <!-- Edit role group -->\n            <template v-if=\"roleGroup !== null\">\n              <dl class=\"mb-4\">\n                <dt>{{ $t('pageLdap.modal.groupName') }}</dt>\n                <dd style=\"word-break: break-all\">{{ form.groupName }}</dd>\n              </dl>\n            </template>\n\n            <!-- Add new role group -->\n            <template v-else>\n              <b-form-group\n                :label=\"$t('pageLdap.modal.groupName')\"\n                label-for=\"role-group-name\"\n              >\n                <b-form-input\n                  id=\"role-group-name\"\n                  v-model=\"form.groupName\"\n                  :state=\"getValidationState(v$.form.groupName)\"\n                  @input=\"v$.form.groupName.$touch()\"\n                />\n                <b-form-invalid-feedback role=\"alert\">\n                  {{ $t('global.form.fieldRequired') }}\n                </b-form-invalid-feedback>\n              </b-form-group>\n            </template>\n\n            <b-form-group\n              :label=\"$t('pageLdap.modal.groupPrivilege')\"\n              label-for=\"privilege\"\n            >\n              <b-form-select\n                id=\"privilege\"\n                v-model=\"form.groupPrivilege\"\n                :options=\"accountRoles\"\n                :state=\"getValidationState(v$.form.groupPrivilege)\"\n                @input=\"v$.form.groupPrivilege.$touch()\"\n              >\n                <template v-if=\"!roleGroup\" #first>\n                  <b-form-select-option :value=\"null\" disabled>\n                    {{ $t('global.form.selectAnOption') }}\n                  </b-form-select-option>\n                </template>\n              </b-form-select>\n              <b-form-invalid-feedback role=\"alert\">\n                {{ $t('global.form.fieldRequired') }}\n              </b-form-invalid-feedback>\n            </b-form-group>\n          </b-form>\n        </b-col>\n      </b-row>\n    </b-container>\n    <template #modal-footer=\"{ cancel }\">\n      <b-button variant=\"secondary\" @click=\"cancel()\">\n        {{ $t('global.action.cancel') }}\n      </b-button>\n      <b-button form=\"role-group\" type=\"submit\" variant=\"primary\" @click=\"onOk\">\n        <template v-if=\"roleGroup\">\n          {{ $t('global.action.save') }}\n        </template>\n        <template v-else>\n          {{ $t('global.action.add') }}\n        </template>\n      </b-button>\n    </template>\n  </b-modal>\n</template>\n\n<script>\nimport { required, requiredIf } from '@vuelidate/validators';\nimport VuelidateMixin from '@/components/Mixins/VuelidateMixin.js';\nimport { useVuelidate } from '@vuelidate/core';\nimport { useI18n } from 'vue-i18n';\n\nexport default {\n  mixins: [VuelidateMixin],\n  props: {\n    roleGroup: {\n      type: Object,\n      default: null,\n      validator: (prop) => {\n        if (prop === null) return true;\n        return (\n          Object.prototype.hasOwnProperty.call(prop, 'groupName') &&\n          Object.prototype.hasOwnProperty.call(prop, 'groupPrivilege')\n        );\n      },\n    },\n  },\n  setup() {\n    return {\n      v$: useVuelidate(),\n    };\n  },\n  data() {\n    return {\n      $t: useI18n().t,\n      form: {\n        groupName: null,\n        groupPrivilege: null,\n      },\n    };\n  },\n  computed: {\n    accountRoles() {\n      return this.$store.getters['userManagement/accountRoles'];\n    },\n  },\n  watch: {\n    roleGroup: function (value) {\n      if (value === null) return;\n      this.form.groupName = value.groupName;\n      this.form.groupPrivilege = value.groupPrivilege;\n    },\n  },\n  validations() {\n    return {\n      form: {\n        groupName: {\n          required: requiredIf(function () {\n            return !this.roleGroup;\n          }),\n        },\n        groupPrivilege: {\n          required,\n        },\n      },\n    };\n  },\n  methods: {\n    handleSubmit() {\n      this.v$.$touch();\n      if (this.v$.$invalid) return;\n      this.$emit('ok', {\n        addNew: !this.roleGroup,\n        groupName: this.form.groupName,\n        groupPrivilege: this.form.groupPrivilege,\n      });\n      this.closeModal();\n    },\n    closeModal() {\n      this.$nextTick(() => {\n        this.$refs.modal.hide();\n      });\n    },\n    resetForm() {\n      this.form.groupName = null;\n      this.form.groupPrivilege = null;\n      this.v$.$reset();\n      this.$emit('hidden');\n    },\n    onOk(bvModalEvt) {\n      // prevent modal close\n      bvModalEvt.preventDefault();\n      this.handleSubmit();\n    },\n  },\n};\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}