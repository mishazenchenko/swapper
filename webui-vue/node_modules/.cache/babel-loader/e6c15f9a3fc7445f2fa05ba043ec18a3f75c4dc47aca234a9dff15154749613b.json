{"ast":null,"code":"import { required } from '@vuelidate/validators';\nimport VuelidateMixin from '@/components/Mixins/VuelidateMixin.js';\nimport { useVuelidate } from '@vuelidate/core';\nimport { useI18n } from 'vue-i18n';\nexport default {\n  mixins: [VuelidateMixin],\n  props: {\n    connection: {\n      type: Object,\n      default: null,\n      validator: prop => {\n        console.log(prop);\n        return true;\n      }\n    }\n  },\n  setup() {\n    return {\n      v$: useVuelidate()\n    };\n  },\n  data() {\n    return {\n      $t: useI18n().t,\n      form: {\n        serverUri: null,\n        username: null,\n        password: null,\n        isRW: false\n      }\n    };\n  },\n  watch: {\n    connection: function (value) {\n      if (value === null) return;\n      Object.assign(this.form, value);\n    }\n  },\n  validations() {\n    return {\n      form: {\n        serverUri: {\n          required\n        }\n      }\n    };\n  },\n  methods: {\n    handleSubmit() {\n      this.v$.$touch();\n      if (this.v$.$invalid) return;\n      let connectionData = {};\n      Object.assign(connectionData, this.form);\n      this.$emit('ok', connectionData);\n      this.closeModal();\n    },\n    initModal() {\n      if (this.connection) {\n        Object.assign(this.form, this.connection);\n      }\n    },\n    closeModal() {\n      this.$nextTick(() => {\n        this.$refs.modal.hide();\n      });\n    },\n    resetForm() {\n      this.form.serverUri = null;\n      this.form.username = null;\n      this.form.password = null;\n      this.form.isRW = false;\n      this.v$.$reset();\n    },\n    onOk(bvModalEvt) {\n      bvModalEvt.preventDefault();\n      this.handleSubmit();\n    }\n  }\n};","map":{"version":3,"names":["required","VuelidateMixin","useVuelidate","useI18n","mixins","props","connection","type","Object","default","validator","prop","console","log","setup","v$","data","$t","t","form","serverUri","username","password","isRW","watch","value","assign","validations","methods","handleSubmit","$touch","$invalid","connectionData","$emit","closeModal","initModal","$nextTick","$refs","modal","hide","resetForm","$reset","onOk","bvModalEvt","preventDefault"],"sources":["/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/src/views/Operations/VirtualMedia/ModalConfigureConnection.vue"],"sourcesContent":["<template>\n  <b-modal\n    id=\"configure-connection\"\n    ref=\"modal\"\n    @ok=\"onOk\"\n    @hidden=\"resetForm\"\n    @show=\"initModal\"\n  >\n    <template #modal-title>\n      {{ $t('pageVirtualMedia.modal.title') }}\n    </template>\n    <b-form>\n      <b-form-group\n        :label=\"$t('pageVirtualMedia.modal.serverUri')\"\n        label-for=\"serverUri\"\n      >\n        <b-form-input\n          id=\"serverUri\"\n          v-model=\"form.serverUri\"\n          type=\"text\"\n          :state=\"getValidationState(v$.form.serverUri)\"\n          data-test-id=\"configureConnection-input-serverUri\"\n          @input=\"v$.form.serverUri.$touch()\"\n        />\n        <b-form-invalid-feedback role=\"alert\">\n          <template v-if=\"v$.form.serverUri.required.$invalid\">\n            {{ $t('global.form.fieldRequired') }}\n          </template>\n        </b-form-invalid-feedback>\n      </b-form-group>\n      <b-form-group\n        :label=\"$t('pageVirtualMedia.modal.username')\"\n        label-for=\"username\"\n      >\n        <b-form-input\n          id=\"username\"\n          v-model=\"form.username\"\n          type=\"text\"\n          data-test-id=\"configureConnection-input-username\"\n        />\n      </b-form-group>\n      <b-form-group\n        :label=\"$t('pageVirtualMedia.modal.password')\"\n        label-for=\"password\"\n      >\n        <b-form-input\n          id=\"password\"\n          v-model=\"form.password\"\n          type=\"password\"\n          data-test-id=\"configureConnection-input-password\"\n        />\n      </b-form-group>\n      <b-form-group>\n        <b-form-checkbox\n          v-model=\"form.isRW\"\n          data-test-id=\"configureConnection-input-isRW\"\n          name=\"check-button\"\n        >\n          RW\n        </b-form-checkbox>\n      </b-form-group>\n    </b-form>\n    <template #modal-ok>\n      {{ $t('global.action.save') }}\n    </template>\n    <template #modal-cancel>\n      {{ $t('global.action.cancel') }}\n    </template>\n  </b-modal>\n</template>\n\n<script>\nimport { required } from '@vuelidate/validators';\nimport VuelidateMixin from '@/components/Mixins/VuelidateMixin.js';\nimport { useVuelidate } from '@vuelidate/core';\nimport { useI18n } from 'vue-i18n';\n\nexport default {\n  mixins: [VuelidateMixin],\n  props: {\n    connection: {\n      type: Object,\n      default: null,\n      validator: (prop) => {\n        console.log(prop);\n        return true;\n      },\n    },\n  },\n  setup() {\n    return {\n      v$: useVuelidate(),\n    };\n  },\n  data() {\n    return {\n      $t: useI18n().t,\n      form: {\n        serverUri: null,\n        username: null,\n        password: null,\n        isRW: false,\n      },\n    };\n  },\n  watch: {\n    connection: function (value) {\n      if (value === null) return;\n      Object.assign(this.form, value);\n    },\n  },\n  validations() {\n    return {\n      form: {\n        serverUri: {\n          required,\n        },\n      },\n    };\n  },\n  methods: {\n    handleSubmit() {\n      this.v$.$touch();\n      if (this.v$.$invalid) return;\n      let connectionData = {};\n      Object.assign(connectionData, this.form);\n      this.$emit('ok', connectionData);\n      this.closeModal();\n    },\n    initModal() {\n      if (this.connection) {\n        Object.assign(this.form, this.connection);\n      }\n    },\n    closeModal() {\n      this.$nextTick(() => {\n        this.$refs.modal.hide();\n      });\n    },\n    resetForm() {\n      this.form.serverUri = null;\n      this.form.username = null;\n      this.form.password = null;\n      this.form.isRW = false;\n      this.v$.$reset();\n    },\n    onOk(bvModalEvt) {\n      bvModalEvt.preventDefault();\n      this.handleSubmit();\n    },\n  },\n};\n</script>\n"],"mappings":"AAwEA,SAASA,QAAO,QAAS,uBAAuB;AAChD,OAAOC,cAAa,MAAO,uCAAuC;AAClE,SAASC,YAAW,QAAS,iBAAiB;AAC9C,SAASC,OAAM,QAAS,UAAU;AAElC,eAAe;EACbC,MAAM,EAAE,CAACH,cAAc,CAAC;EACxBI,KAAK,EAAE;IACLC,UAAU,EAAE;MACVC,IAAI,EAAEC,MAAM;MACZC,OAAO,EAAE,IAAI;MACbC,SAAS,EAAGC,IAAI,IAAK;QACnBC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;QACjB,OAAO,IAAI;MACb;IACF;EACF,CAAC;EACDG,KAAKA,CAAA,EAAG;IACN,OAAO;MACLC,EAAE,EAAEb,YAAY,CAAC;IACnB,CAAC;EACH,CAAC;EACDc,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,EAAE,EAAEd,OAAO,CAAC,CAAC,CAACe,CAAC;MACfC,IAAI,EAAE;QACJC,SAAS,EAAE,IAAI;QACfC,QAAQ,EAAE,IAAI;QACdC,QAAQ,EAAE,IAAI;QACdC,IAAI,EAAE;MACR;IACF,CAAC;EACH,CAAC;EACDC,KAAK,EAAE;IACLlB,UAAU,EAAE,SAAAA,CAAUmB,KAAK,EAAE;MAC3B,IAAIA,KAAI,KAAM,IAAI,EAAE;MACpBjB,MAAM,CAACkB,MAAM,CAAC,IAAI,CAACP,IAAI,EAAEM,KAAK,CAAC;IACjC;EACF,CAAC;EACDE,WAAWA,CAAA,EAAG;IACZ,OAAO;MACLR,IAAI,EAAE;QACJC,SAAS,EAAE;UACTpB;QACF;MACF;IACF,CAAC;EACH,CAAC;EACD4B,OAAO,EAAE;IACPC,YAAYA,CAAA,EAAG;MACb,IAAI,CAACd,EAAE,CAACe,MAAM,CAAC,CAAC;MAChB,IAAI,IAAI,CAACf,EAAE,CAACgB,QAAQ,EAAE;MACtB,IAAIC,cAAa,GAAI,CAAC,CAAC;MACvBxB,MAAM,CAACkB,MAAM,CAACM,cAAc,EAAE,IAAI,CAACb,IAAI,CAAC;MACxC,IAAI,CAACc,KAAK,CAAC,IAAI,EAAED,cAAc,CAAC;MAChC,IAAI,CAACE,UAAU,CAAC,CAAC;IACnB,CAAC;IACDC,SAASA,CAAA,EAAG;MACV,IAAI,IAAI,CAAC7B,UAAU,EAAE;QACnBE,MAAM,CAACkB,MAAM,CAAC,IAAI,CAACP,IAAI,EAAE,IAAI,CAACb,UAAU,CAAC;MAC3C;IACF,CAAC;IACD4B,UAAUA,CAAA,EAAG;MACX,IAAI,CAACE,SAAS,CAAC,MAAM;QACnB,IAAI,CAACC,KAAK,CAACC,KAAK,CAACC,IAAI,CAAC,CAAC;MACzB,CAAC,CAAC;IACJ,CAAC;IACDC,SAASA,CAAA,EAAG;MACV,IAAI,CAACrB,IAAI,CAACC,SAAQ,GAAI,IAAI;MAC1B,IAAI,CAACD,IAAI,CAACE,QAAO,GAAI,IAAI;MACzB,IAAI,CAACF,IAAI,CAACG,QAAO,GAAI,IAAI;MACzB,IAAI,CAACH,IAAI,CAACI,IAAG,GAAI,KAAK;MACtB,IAAI,CAACR,EAAE,CAAC0B,MAAM,CAAC,CAAC;IAClB,CAAC;IACDC,IAAIA,CAACC,UAAU,EAAE;MACfA,UAAU,CAACC,cAAc,CAAC,CAAC;MAC3B,IAAI,CAACf,YAAY,CAAC,CAAC;IACrB;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}