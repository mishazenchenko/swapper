{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { required, sameAs } from '@vuelidate/validators';\nimport Alert from '@/components/Global/Alert';\nimport VuelidateMixin from '@/components/Mixins/VuelidateMixin';\nimport InputPasswordToggle from '@/components/Global/InputPasswordToggle';\nimport BVToastMixin from '@/components/Mixins/BVToastMixin';\nimport { useVuelidate } from '@vuelidate/core';\nimport { useI18n } from 'vue-i18n';\nexport default {\n  name: 'ChangePassword',\n  components: {\n    Alert,\n    InputPasswordToggle\n  },\n  mixins: [VuelidateMixin, BVToastMixin],\n  setup() {\n    return {\n      v$: useVuelidate()\n    };\n  },\n  data() {\n    return {\n      $t: useI18n().t,\n      form: {\n        password: null,\n        passwordConfirm: null\n      },\n      username: this.$store.getters['global/username'],\n      changePasswordError: false\n    };\n  },\n  validations() {\n    return {\n      form: {\n        password: {\n          required\n        },\n        passwordConfirm: {\n          required,\n          sameAsPassword: sameAs('password')\n        }\n      }\n    };\n  },\n  methods: {\n    goBack() {\n      // Remove session created if navigating back to the Login page\n      this.$store.dispatch('authentication/logout');\n    },\n    changePassword() {\n      this.v$.$touch();\n      if (this.v$.$invalid) return;\n      let data = {\n        originalUsername: this.username,\n        password: this.form.password\n      };\n      this.$store.dispatch('userManagement/updateUser', data).then(() => this.$router.push('/')).catch(() => this.changePasswordError = true);\n    }\n  }\n};","map":{"version":3,"names":["required","sameAs","Alert","VuelidateMixin","InputPasswordToggle","BVToastMixin","useVuelidate","useI18n","name","components","mixins","setup","v$","data","$t","t","form","password","passwordConfirm","username","$store","getters","changePasswordError","validations","sameAsPassword","methods","goBack","dispatch","changePassword","$touch","$invalid","originalUsername","then","$router","push","catch"],"sources":["/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/src/views/ChangePassword/ChangePassword.vue"],"sourcesContent":["<template>\n  <div class=\"change-password-container\">\n    <alert variant=\"danger\" class=\"mb-4\">\n      <p v-if=\"changePasswordError\">\n        {{ $t('pageChangePassword.changePasswordError') }}\n      </p>\n      <p v-else>{{ $t('pageChangePassword.changePasswordAlertMessage') }}</p>\n    </alert>\n    <div class=\"change-password__form-container\">\n      <dl>\n        <dt>{{ $t('pageChangePassword.username') }}</dt>\n        <dd>{{ username }}</dd>\n      </dl>\n      <b-form novalidate @submit.prevent=\"changePassword\">\n        <b-form-group\n          label-for=\"password\"\n          :label=\"$t('pageChangePassword.newPassword')\"\n        >\n          <input-password-toggle>\n            <b-form-input\n              id=\"password\"\n              v-model=\"form.password\"\n              autofocus=\"autofocus\"\n              type=\"password\"\n              :state=\"getValidationState(v$.form.password)\"\n              class=\"form-control-with-button\"\n              @change=\"v$.form.password.$touch()\"\n            >\n            </b-form-input>\n            <b-form-invalid-feedback role=\"alert\">\n              <template v-if=\"v$.form.password.required.$invalid\">\n                {{ $t('global.form.fieldRequired') }}\n              </template>\n            </b-form-invalid-feedback>\n          </input-password-toggle>\n        </b-form-group>\n        <b-form-group\n          label-for=\"password-confirm\"\n          :label=\"$t('pageChangePassword.confirmNewPassword')\"\n        >\n          <input-password-toggle>\n            <b-form-input\n              id=\"password-confirm\"\n              v-model=\"form.passwordConfirm\"\n              type=\"password\"\n              :state=\"getValidationState(v$.form.passwordConfirm)\"\n              class=\"form-control-with-button\"\n              @change=\"v$.form.passwordConfirm.$touch()\"\n            >\n            </b-form-input>\n            <b-form-invalid-feedback role=\"alert\">\n              <template v-if=\"v$.form.passwordConfirm.required.$invalid\">\n                {{ $t('global.form.fieldRequired') }}\n              </template>\n              <template\n                v-else-if=\"v$.form.passwordConfirm.sameAsPassword.$invalid\"\n              >\n                {{ $t('global.form.passwordsDoNotMatch') }}\n              </template>\n            </b-form-invalid-feedback>\n          </input-password-toggle>\n        </b-form-group>\n        <div class=\"text-right\">\n          <b-button type=\"button\" variant=\"link\" @click=\"goBack\">\n            {{ $t('pageChangePassword.goBack') }}\n          </b-button>\n          <b-button type=\"submit\" variant=\"primary\">\n            {{ $t('pageChangePassword.changePassword') }}\n          </b-button>\n        </div>\n      </b-form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { required, sameAs } from '@vuelidate/validators';\nimport Alert from '@/components/Global/Alert';\nimport VuelidateMixin from '@/components/Mixins/VuelidateMixin';\nimport InputPasswordToggle from '@/components/Global/InputPasswordToggle';\nimport BVToastMixin from '@/components/Mixins/BVToastMixin';\nimport { useVuelidate } from '@vuelidate/core';\nimport { useI18n } from 'vue-i18n';\n\nexport default {\n  name: 'ChangePassword',\n  components: { Alert, InputPasswordToggle },\n  mixins: [VuelidateMixin, BVToastMixin],\n  setup() {\n    return {\n      v$: useVuelidate(),\n    };\n  },\n  data() {\n    return {\n      $t: useI18n().t,\n      form: {\n        password: null,\n        passwordConfirm: null,\n      },\n      username: this.$store.getters['global/username'],\n      changePasswordError: false,\n    };\n  },\n  validations() {\n    return {\n      form: {\n        password: { required },\n        passwordConfirm: {\n          required,\n          sameAsPassword: sameAs('password'),\n        },\n      },\n    };\n  },\n  methods: {\n    goBack() {\n      // Remove session created if navigating back to the Login page\n      this.$store.dispatch('authentication/logout');\n    },\n    changePassword() {\n      this.v$.$touch();\n      if (this.v$.$invalid) return;\n      let data = {\n        originalUsername: this.username,\n        password: this.form.password,\n      };\n\n      this.$store\n        .dispatch('userManagement/updateUser', data)\n        .then(() => this.$router.push('/'))\n        .catch(() => (this.changePasswordError = true));\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import '@/assets/styles/bmc/helpers/_index.scss';\n@import '@/assets/styles/bootstrap/_helpers.scss';\n\n@import '@/assets/styles/bootstrap/_helpers.scss';\n\n.change-password__form-container {\n  @include media-breakpoint-up('md') {\n    max-width: 360px;\n  }\n}\n</style>\n"],"mappings":";AA4EA,SAASA,QAAQ,EAAEC,MAAK,QAAS,uBAAuB;AACxD,OAAOC,KAAI,MAAO,2BAA2B;AAC7C,OAAOC,cAAa,MAAO,oCAAoC;AAC/D,OAAOC,mBAAkB,MAAO,yCAAyC;AACzE,OAAOC,YAAW,MAAO,kCAAkC;AAC3D,SAASC,YAAW,QAAS,iBAAiB;AAC9C,SAASC,OAAM,QAAS,UAAU;AAElC,eAAe;EACbC,IAAI,EAAE,gBAAgB;EACtBC,UAAU,EAAE;IAAEP,KAAK;IAAEE;EAAoB,CAAC;EAC1CM,MAAM,EAAE,CAACP,cAAc,EAAEE,YAAY,CAAC;EACtCM,KAAKA,CAAA,EAAG;IACN,OAAO;MACLC,EAAE,EAAEN,YAAY,CAAC;IACnB,CAAC;EACH,CAAC;EACDO,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,EAAE,EAAEP,OAAO,CAAC,CAAC,CAACQ,CAAC;MACfC,IAAI,EAAE;QACJC,QAAQ,EAAE,IAAI;QACdC,eAAe,EAAE;MACnB,CAAC;MACDC,QAAQ,EAAE,IAAI,CAACC,MAAM,CAACC,OAAO,CAAC,iBAAiB,CAAC;MAChDC,mBAAmB,EAAE;IACvB,CAAC;EACH,CAAC;EACDC,WAAWA,CAAA,EAAG;IACZ,OAAO;MACLP,IAAI,EAAE;QACJC,QAAQ,EAAE;UAAEjB;QAAS,CAAC;QACtBkB,eAAe,EAAE;UACflB,QAAQ;UACRwB,cAAc,EAAEvB,MAAM,CAAC,UAAU;QACnC;MACF;IACF,CAAC;EACH,CAAC;EACDwB,OAAO,EAAE;IACPC,MAAMA,CAAA,EAAG;MACP;MACA,IAAI,CAACN,MAAM,CAACO,QAAQ,CAAC,uBAAuB,CAAC;IAC/C,CAAC;IACDC,cAAcA,CAAA,EAAG;MACf,IAAI,CAAChB,EAAE,CAACiB,MAAM,CAAC,CAAC;MAChB,IAAI,IAAI,CAACjB,EAAE,CAACkB,QAAQ,EAAE;MACtB,IAAIjB,IAAG,GAAI;QACTkB,gBAAgB,EAAE,IAAI,CAACZ,QAAQ;QAC/BF,QAAQ,EAAE,IAAI,CAACD,IAAI,CAACC;MACtB,CAAC;MAED,IAAI,CAACG,MAAK,CACPO,QAAQ,CAAC,2BAA2B,EAAEd,IAAI,EAC1CmB,IAAI,CAAC,MAAM,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,GAAG,CAAC,EACjCC,KAAK,CAAC,MAAO,IAAI,CAACb,mBAAkB,GAAI,IAAK,CAAC;IACnD;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}