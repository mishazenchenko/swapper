{"ast":null,"code":"import { toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  class: \"mb-4\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_b_form_select = _resolveComponent(\"b-form-select\");\n  const _component_b_form_invalid_feedback = _resolveComponent(\"b-form-invalid-feedback\");\n  const _component_b_form_group = _resolveComponent(\"b-form-group\");\n  const _component_form_file = _resolveComponent(\"form-file\");\n  const _component_b_form = _resolveComponent(\"b-form\");\n  const _component_b_modal = _resolveComponent(\"b-modal\");\n  return _openBlock(), _createBlock(_component_b_modal, {\n    id: \"upload-certificate\",\n    ref: \"modal\",\n    onOk: $options.onOk,\n    onHidden: $options.resetForm\n  }, {\n    \"modal-title\": _withCtx(() => [$props.certificate ? (_openBlock(), _createElementBlock(_Fragment, {\n      key: 0\n    }, [_createTextVNode(_toDisplayString($data.$t('pageCertificates.replaceCertificate')), 1 /* TEXT */)], 64 /* STABLE_FRAGMENT */)) : (_openBlock(), _createElementBlock(_Fragment, {\n      key: 1\n    }, [_createTextVNode(_toDisplayString($data.$t('pageCertificates.addNewCertificate')), 1 /* TEXT */)], 64 /* STABLE_FRAGMENT */))]),\n    \"modal-ok\": _withCtx(() => [$props.certificate ? (_openBlock(), _createElementBlock(_Fragment, {\n      key: 0\n    }, [_createTextVNode(_toDisplayString($data.$t('global.action.replace')), 1 /* TEXT */)], 64 /* STABLE_FRAGMENT */)) : (_openBlock(), _createElementBlock(_Fragment, {\n      key: 1\n    }, [_createTextVNode(_toDisplayString($data.$t('global.action.add')), 1 /* TEXT */)], 64 /* STABLE_FRAGMENT */))]),\n    \"modal-cancel\": _withCtx(() => [_createTextVNode(_toDisplayString($data.$t('global.action.cancel')), 1 /* TEXT */)]),\n    default: _withCtx(() => [_createVNode(_component_b_form, null, {\n      default: _withCtx(() => [_createCommentVNode(\" Replace Certificate type \"), $props.certificate !== null ? (_openBlock(), _createElementBlock(\"dl\", _hoisted_1, [_createElementVNode(\"dt\", null, _toDisplayString($data.$t('pageCertificates.modal.certificateType')), 1 /* TEXT */), _createElementVNode(\"dd\", null, _toDisplayString($props.certificate.certificate), 1 /* TEXT */)])) : (_openBlock(), _createElementBlock(_Fragment, {\n        key: 1\n      }, [_createCommentVNode(\" Add new Certificate type \"), _createVNode(_component_b_form_group, {\n        label: $data.$t('pageCertificates.modal.certificateType'),\n        \"label-for\": \"certificate-type\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_b_form_select, {\n          id: \"certificate-type\",\n          modelValue: $data.form.certificateType,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.form.certificateType = $event),\n          options: $options.certificateOptions,\n          state: _ctx.getValidationState($setup.v$.form.certificateType),\n          onInput: _cache[1] || (_cache[1] = $event => $setup.v$.form.certificateType.$touch())\n        }, null, 8 /* PROPS */, [\"modelValue\", \"options\", \"state\"]), _createVNode(_component_b_form_invalid_feedback, {\n          role: \"alert\"\n        }, {\n          default: _withCtx(() => [$setup.v$.form.certificateType.required.$invalid ? (_openBlock(), _createElementBlock(_Fragment, {\n            key: 0\n          }, [_createTextVNode(_toDisplayString($data.$t('global.form.fieldRequired')), 1 /* TEXT */)], 64 /* STABLE_FRAGMENT */)) : _createCommentVNode(\"v-if\", true)], undefined, true),\n          _: 1 /* STABLE */\n        })], undefined, true),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"label\"])], 64 /* STABLE_FRAGMENT */)), _createVNode(_component_b_form_group, {\n        label: $data.$t('pageCertificates.modal.certificateFile')\n      }, {\n        default: _withCtx(() => [_createVNode(_component_form_file, {\n          id: \"certificate-file\",\n          modelValue: $data.form.file,\n          \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.form.file = $event),\n          accept: \".pem\",\n          state: _ctx.getValidationState($setup.v$.form.file)\n        }, {\n          invalid: _withCtx(() => [_createVNode(_component_b_form_invalid_feedback, {\n            role: \"alert\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString($data.$t('global.form.required')), 1 /* TEXT */)], undefined, true),\n            _: 1 /* STABLE */\n          })]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"modelValue\", \"state\"])], undefined, true),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"label\"])], undefined, true),\n      _: 1 /* STABLE */\n    })], undefined, true),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onOk\", \"onHidden\"]);\n}","map":{"version":3,"names":["key","class","_createBlock","_component_b_modal","id","ref","onOk","$options","onHidden","resetForm","_withCtx","$props","certificate","_createElementBlock","_Fragment","_createTextVNode","_toDisplayString","$data","$t","default","_createVNode","_component_b_form","_createCommentVNode","_hoisted_1","_createElementVNode","_component_b_form_group","label","_component_b_form_select","modelValue","form","certificateType","_cache","$event","options","certificateOptions","state","_ctx","getValidationState","$setup","v$","onInput","$touch","_component_b_form_invalid_feedback","role","required","$invalid","_","_component_form_file","file","accept","invalid"],"sources":["/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/src/views/SecurityAndAccess/Certificates/ModalUploadCertificate.vue"],"sourcesContent":["<template>\n  <b-modal id=\"upload-certificate\" ref=\"modal\" @ok=\"onOk\" @hidden=\"resetForm\">\n    <template #modal-title>\n      <template v-if=\"certificate\">\n        {{ $t('pageCertificates.replaceCertificate') }}\n      </template>\n      <template v-else>\n        {{ $t('pageCertificates.addNewCertificate') }}\n      </template>\n    </template>\n    <b-form>\n      <!-- Replace Certificate type -->\n      <template v-if=\"certificate !== null\">\n        <dl class=\"mb-4\">\n          <dt>{{ $t('pageCertificates.modal.certificateType') }}</dt>\n          <dd>{{ certificate.certificate }}</dd>\n        </dl>\n      </template>\n\n      <!-- Add new Certificate type -->\n      <template v-else>\n        <b-form-group\n          :label=\"$t('pageCertificates.modal.certificateType')\"\n          label-for=\"certificate-type\"\n        >\n          <b-form-select\n            id=\"certificate-type\"\n            v-model=\"form.certificateType\"\n            :options=\"certificateOptions\"\n            :state=\"getValidationState(v$.form.certificateType)\"\n            @input=\"v$.form.certificateType.$touch()\"\n          >\n          </b-form-select>\n          <b-form-invalid-feedback role=\"alert\">\n            <template v-if=\"v$.form.certificateType.required.$invalid\">\n              {{ $t('global.form.fieldRequired') }}\n            </template>\n          </b-form-invalid-feedback>\n        </b-form-group>\n      </template>\n\n      <b-form-group :label=\"$t('pageCertificates.modal.certificateFile')\">\n        <form-file\n          id=\"certificate-file\"\n          v-model=\"form.file\"\n          accept=\".pem\"\n          :state=\"getValidationState(v$.form.file)\"\n        >\n          <template #invalid>\n            <b-form-invalid-feedback role=\"alert\">\n              {{ $t('global.form.required') }}\n            </b-form-invalid-feedback>\n          </template>\n        </form-file>\n      </b-form-group>\n    </b-form>\n    <template #modal-ok>\n      <template v-if=\"certificate\">\n        {{ $t('global.action.replace') }}\n      </template>\n      <template v-else>\n        {{ $t('global.action.add') }}\n      </template>\n    </template>\n    <template #modal-cancel>\n      {{ $t('global.action.cancel') }}\n    </template>\n  </b-modal>\n</template>\n\n<script>\nimport { required, requiredIf } from '@vuelidate/validators';\nimport VuelidateMixin from '@/components/Mixins/VuelidateMixin.js';\nimport { useVuelidate } from '@vuelidate/core';\n\nimport FormFile from '@/components/Global/FormFile';\nimport { useI18n } from 'vue-i18n';\n\nexport default {\n  components: { FormFile },\n  mixins: [VuelidateMixin],\n  props: {\n    certificate: {\n      type: Object,\n      default: null,\n      validator: (prop) => {\n        if (prop === null) return true;\n        return (\n          Object.prototype.hasOwnProperty.call(prop, 'type') &&\n          Object.prototype.hasOwnProperty.call(prop, 'certificate')\n        );\n      },\n    },\n  },\n  setup() {\n    return {\n      v$: useVuelidate(),\n    };\n  },\n  data() {\n    return {\n      $t: useI18n().t,\n      form: {\n        certificateType: null,\n        file: null,\n      },\n    };\n  },\n  computed: {\n    certificateTypes() {\n      return this.$store.getters['certificates/availableUploadTypes'];\n    },\n    certificateOptions() {\n      return this.certificateTypes.map(({ type, label }) => {\n        return {\n          text: label,\n          value: type,\n        };\n      });\n    },\n  },\n  watch: {\n    certificateOptions: function (options) {\n      if (options.length) {\n        this.form.certificateType = options[0].value;\n      }\n    },\n  },\n  validations() {\n    return {\n      form: {\n        certificateType: {\n          required: requiredIf(function () {\n            return !this.certificate;\n          }),\n        },\n        file: {\n          required,\n        },\n      },\n    };\n  },\n  methods: {\n    handleSubmit() {\n      this.v$.$touch();\n      if (this.v$.$invalid) return;\n      this.$emit('ok', {\n        addNew: !this.certificate,\n        file: this.form.file,\n        location: this.certificate ? this.certificate.location : null,\n        type: this.certificate\n          ? this.certificate.type\n          : this.form.certificateType,\n      });\n      this.closeModal();\n    },\n    closeModal() {\n      this.$nextTick(() => {\n        this.$refs.modal.hide();\n      });\n    },\n    resetForm() {\n      this.form.certificateType = this.certificateOptions.length\n        ? this.certificateOptions[0].value\n        : null;\n      this.form.file = null;\n      this.v$.$reset();\n    },\n    onOk(bvModalEvt) {\n      // prevent modal close\n      bvModalEvt.preventDefault();\n      this.handleSubmit();\n    },\n  },\n};\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}