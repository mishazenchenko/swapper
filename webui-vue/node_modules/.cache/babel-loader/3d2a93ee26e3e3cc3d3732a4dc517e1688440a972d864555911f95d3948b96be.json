{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"sr-only\"\n};\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = {\n  key: 1\n};\nconst _hoisted_4 = {\n  key: 1\n};\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"section-divider mb-3 mt-3\"\n}, null, -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_search = _resolveComponent(\"search\");\n  const _component_b_col = _resolveComponent(\"b-col\");\n  const _component_table_cell_count = _resolveComponent(\"table-cell-count\");\n  const _component_b_row = _resolveComponent(\"b-row\");\n  const _component_icon_chevron = _resolveComponent(\"icon-chevron\");\n  const _component_b_button = _resolveComponent(\"b-button\");\n  const _component_status_icon = _resolveComponent(\"status-icon\");\n  const _component_b_form_checkbox = _resolveComponent(\"b-form-checkbox\");\n  const _component_b_container = _resolveComponent(\"b-container\");\n  const _component_b_table = _resolveComponent(\"b-table\");\n  const _component_page_section = _resolveComponent(\"page-section\");\n  return _openBlock(), _createBlock(_component_page_section, {\n    \"section-title\": $data.$t('pageInventory.processors')\n  }, {\n    default: _withCtx(() => [_createCommentVNode(\" Search \"), _createVNode(_component_b_row, {\n      class: \"align-items-end\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_b_col, {\n        sm: \"6\",\n        md: \"5\",\n        xl: \"4\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_search, {\n          onChangeSearch: _ctx.onChangeSearchInput,\n          onClearSearch: _ctx.onClearSearchInput\n        }, null, 8 /* PROPS */, [\"onChangeSearch\", \"onClearSearch\"])], undefined, true),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_b_col, {\n        sm: \"6\",\n        md: \"3\",\n        xl: \"2\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_table_cell_count, {\n          \"filtered-items-count\": $options.filteredRows,\n          \"total-number-of-cells\": $options.processors.length\n        }, null, 8 /* PROPS */, [\"filtered-items-count\", \"total-number-of-cells\"])], undefined, true),\n        _: 1 /* STABLE */\n      })], undefined, true),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_b_table, {\n      \"sort-icon-left\": \"\",\n      \"no-sort-reset\": \"\",\n      hover: \"\",\n      responsive: \"md\",\n      \"show-empty\": \"\",\n      items: $options.processors,\n      fields: $data.fields,\n      \"sort-desc\": true,\n      filter: $data.searchFilter,\n      \"empty-text\": $data.$t('global.table.emptyMessage'),\n      \"empty-filtered-text\": $data.$t('global.table.emptySearchMessage'),\n      busy: $data.isBusy,\n      onFiltered: $options.onFiltered\n    }, {\n      \"cell(expandRow)\": _withCtx(row => [_createVNode(_component_b_button, {\n        variant: \"link\",\n        \"data-test-id\": \"hardwareStatus-button-expandProcessors\",\n        title: $data.expandRowLabel,\n        class: \"btn-icon-only\",\n        onClick: $event => _ctx.toggleRowDetails(row)\n      }, {\n        default: _withCtx(() => [_createVNode(_component_icon_chevron), _createElementVNode(\"span\", _hoisted_1, _toDisplayString($data.expandRowLabel), 1 /* TEXT */)], undefined, true),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"title\", \"onClick\"])]),\n      \"cell(health)\": _withCtx(({\n        value\n      }) => [_createVNode(_component_status_icon, {\n        status: _ctx.statusIcon(value)\n      }, null, 8 /* PROPS */, [\"status\"]), _createTextVNode(\" \" + _toDisplayString(value), 1 /* TEXT */)]),\n      \"cell(statusState)\": _withCtx(({\n        value\n      }) => [_createVNode(_component_status_icon, {\n        status: $options.statusStateIcon(value)\n      }, null, 8 /* PROPS */, [\"status\"]), _createTextVNode(\" \" + _toDisplayString(value), 1 /* TEXT */)]),\n      \"cell(identifyLed)\": _withCtx(row => [$options.hasIdentifyLed(row.item.identifyLed) ? (_openBlock(), _createBlock(_component_b_form_checkbox, {\n        key: 0,\n        modelValue: row.item.identifyLed,\n        \"onUpdate:modelValue\": $event => row.item.identifyLed = $event,\n        name: \"switch\",\n        switch: \"\",\n        onChange: $event => $options.toggleIdentifyLedValue(row.item)\n      }, {\n        default: _withCtx(() => [row.item.identifyLed ? (_openBlock(), _createElementBlock(\"span\", _hoisted_2, _toDisplayString($data.$t('global.status.on')), 1 /* TEXT */)) : (_openBlock(), _createElementBlock(\"span\", _hoisted_3, _toDisplayString($data.$t('global.status.off')), 1 /* TEXT */))], undefined, true),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"modelValue\", \"onUpdate:modelValue\", \"onChange\"])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_4, \"--\"))]),\n      \"row-details\": _withCtx(({\n        item\n      }) => [_createVNode(_component_b_container, {\n        fluid: \"\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_b_row, null, {\n          default: _withCtx(() => [_createVNode(_component_b_col, {\n            class: \"mt-2\",\n            sm: \"6\",\n            xl: \"6\"\n          }, {\n            default: _withCtx(() => [_createElementVNode(\"dl\", null, [_createCommentVNode(\" Name \"), _createElementVNode(\"dt\", null, _toDisplayString($data.$t('pageInventory.table.name')) + \":\", 1 /* TEXT */), _createElementVNode(\"dd\", null, _toDisplayString(_ctx.dataFormatter(item.name)), 1 /* TEXT */), _createCommentVNode(\" Part Number \"), _createElementVNode(\"dt\", null, _toDisplayString($data.$t('pageInventory.table.partNumber')) + \":\", 1 /* TEXT */), _createElementVNode(\"dd\", null, _toDisplayString(_ctx.dataFormatter(item.partNumber)), 1 /* TEXT */), _createCommentVNode(\" Serial Number \"), _createElementVNode(\"dt\", null, _toDisplayString($data.$t('pageInventory.table.serialNumber')) + \":\", 1 /* TEXT */), _createElementVNode(\"dd\", null, _toDisplayString(_ctx.dataFormatter(item.serialNumber)), 1 /* TEXT */), _createCommentVNode(\" Spare Part Number \"), _createElementVNode(\"dt\", null, _toDisplayString($data.$t('pageInventory.table.sparePartNumber')) + \":\", 1 /* TEXT */), _createElementVNode(\"dd\", null, _toDisplayString(_ctx.dataFormatter(item.sparePartNumber)), 1 /* TEXT */), _createCommentVNode(\" Model \"), _createElementVNode(\"dt\", null, _toDisplayString($data.$t('pageInventory.table.model')) + \":\", 1 /* TEXT */), _createElementVNode(\"dd\", null, _toDisplayString(_ctx.dataFormatter(item.model)), 1 /* TEXT */), _createCommentVNode(\" Asset Tag \"), _createElementVNode(\"dt\", null, _toDisplayString($data.$t('pageInventory.table.assetTag')) + \":\", 1 /* TEXT */), _createElementVNode(\"dd\", null, _toDisplayString(_ctx.dataFormatter(item.assetTag)), 1 /* TEXT */)])], undefined, true),\n            _: 2 /* DYNAMIC */\n          }, 1024 /* DYNAMIC_SLOTS */), _createVNode(_component_b_col, {\n            class: \"mt-2\",\n            sm: \"6\",\n            xl: \"6\"\n          }, {\n            default: _withCtx(() => [_createElementVNode(\"dl\", null, [_createCommentVNode(\" Status state \"), _createElementVNode(\"dt\", null, _toDisplayString($data.$t('pageInventory.table.statusState')) + \":\", 1 /* TEXT */), _createElementVNode(\"dd\", null, _toDisplayString(_ctx.dataFormatter(item.statusState)), 1 /* TEXT */), _createCommentVNode(\" Health Rollup \"), _createElementVNode(\"dt\", null, _toDisplayString($data.$t('pageInventory.table.healthRollup')) + \":\", 1 /* TEXT */), _createElementVNode(\"dd\", null, _toDisplayString(_ctx.dataFormatter(item.healthRollup)), 1 /* TEXT */)])], undefined, true),\n            _: 2 /* DYNAMIC */\n          }, 1024 /* DYNAMIC_SLOTS */)], undefined, true),\n          _: 2 /* DYNAMIC */\n        }, 1024 /* DYNAMIC_SLOTS */), _hoisted_5, _createVNode(_component_b_row, null, {\n          default: _withCtx(() => [_createVNode(_component_b_col, {\n            class: \"mt-1\",\n            sm: \"6\",\n            xl: \"6\"\n          }, {\n            default: _withCtx(() => [_createElementVNode(\"dl\", null, [_createCommentVNode(\" Manufacturer \"), _createElementVNode(\"dt\", null, _toDisplayString($data.$t('pageInventory.table.manufacturer')) + \":\", 1 /* TEXT */), _createElementVNode(\"dd\", null, _toDisplayString(_ctx.dataFormatter(item.manufacturer)), 1 /* TEXT */), _createCommentVNode(\" Processor Type \"), _createElementVNode(\"dt\", null, _toDisplayString($data.$t('pageInventory.table.processorType')) + \":\", 1 /* TEXT */), _createElementVNode(\"dd\", null, _toDisplayString(_ctx.dataFormatter(item.processorType)), 1 /* TEXT */), _createCommentVNode(\" Processor Architecture \"), _createElementVNode(\"dt\", null, _toDisplayString($data.$t('pageInventory.table.processorArchitecture')) + \":\", 1 /* TEXT */), _createElementVNode(\"dd\", null, _toDisplayString(_ctx.dataFormatter(item.processorArchitecture)), 1 /* TEXT */), _createCommentVNode(\" Instruction Set \"), _createElementVNode(\"dt\", null, _toDisplayString($data.$t('pageInventory.table.instructionSet')) + \":\", 1 /* TEXT */), _createElementVNode(\"dd\", null, _toDisplayString(_ctx.dataFormatter(item.instructionSet)), 1 /* TEXT */), _createCommentVNode(\" Version \"), _createElementVNode(\"dt\", null, _toDisplayString($data.$t('pageInventory.table.version')) + \":\", 1 /* TEXT */), _createElementVNode(\"dd\", null, _toDisplayString(_ctx.dataFormatter(item.version)), 1 /* TEXT */)])], undefined, true),\n            _: 2 /* DYNAMIC */\n          }, 1024 /* DYNAMIC_SLOTS */), _createVNode(_component_b_col, {\n            class: \"mt-1\",\n            sm: \"6\",\n            xl: \"6\"\n          }, {\n            default: _withCtx(() => [_createElementVNode(\"dl\", null, [_createCommentVNode(\" Min Speed MHz \"), _createElementVNode(\"dt\", null, _toDisplayString($data.$t('pageInventory.table.minSpeedMHz')) + \":\", 1 /* TEXT */), _createElementVNode(\"dd\", null, _toDisplayString(_ctx.dataFormatter(item.minSpeedMHz)) + \" \" + _toDisplayString($data.$t('unit.MHz')), 1 /* TEXT */), _createCommentVNode(\" Max Speed MHz \"), _createElementVNode(\"dt\", null, _toDisplayString($data.$t('pageInventory.table.maxSpeedMHz')) + \":\", 1 /* TEXT */), _createElementVNode(\"dd\", null, _toDisplayString(_ctx.dataFormatter(item.maxSpeedMHz)) + \" \" + _toDisplayString($data.$t('unit.MHz')), 1 /* TEXT */), _createCommentVNode(\" Total Cores \"), _createElementVNode(\"dt\", null, _toDisplayString($data.$t('pageInventory.table.totalCores')) + \":\", 1 /* TEXT */), _createElementVNode(\"dd\", null, _toDisplayString(_ctx.dataFormatter(item.totalCores)), 1 /* TEXT */), _createCommentVNode(\" Total Threads \"), _createElementVNode(\"dt\", null, _toDisplayString($data.$t('pageInventory.table.totalThreads')) + \":\", 1 /* TEXT */), _createElementVNode(\"dd\", null, _toDisplayString(_ctx.dataFormatter(item.totalThreads)), 1 /* TEXT */)])], undefined, true),\n            _: 2 /* DYNAMIC */\n          }, 1024 /* DYNAMIC_SLOTS */)], undefined, true),\n          _: 2 /* DYNAMIC */\n        }, 1024 /* DYNAMIC_SLOTS */)], undefined, true),\n        _: 2 /* DYNAMIC */\n      }, 1024 /* DYNAMIC_SLOTS */)]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"items\", \"fields\", \"filter\", \"empty-text\", \"empty-filtered-text\", \"busy\", \"onFiltered\"])], undefined, true),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"section-title\"]);\n}","map":{"version":3,"names":["class","key","_createElementVNode","_createBlock","_component_page_section","$data","$t","default","_withCtx","_createCommentVNode","_createVNode","_component_b_row","_component_b_col","sm","md","xl","_component_search","onChangeSearch","_ctx","onChangeSearchInput","onClearSearch","onClearSearchInput","_","_component_table_cell_count","$options","filteredRows","processors","length","_component_b_table","hover","responsive","items","fields","filter","searchFilter","busy","isBusy","onFiltered","row","_component_b_button","variant","title","expandRowLabel","onClick","$event","toggleRowDetails","_component_icon_chevron","_hoisted_1","_toDisplayString","value","_component_status_icon","status","statusIcon","_createTextVNode","statusStateIcon","hasIdentifyLed","item","identifyLed","_component_b_form_checkbox","modelValue","name","switch","onChange","toggleIdentifyLedValue","_createElementBlock","_hoisted_2","_hoisted_3","_hoisted_4","_component_b_container","fluid","dataFormatter","partNumber","serialNumber","sparePartNumber","model","assetTag","statusState","healthRollup","_hoisted_5","manufacturer","processorType","processorArchitecture","instructionSet","version","minSpeedMHz","maxSpeedMHz","totalCores","totalThreads"],"sources":["/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/src/views/HardwareStatus/Inventory/InventoryTableProcessors.vue"],"sourcesContent":["<template>\n  <page-section :section-title=\"$t('pageInventory.processors')\">\n    <!-- Search -->\n    <b-row class=\"align-items-end\">\n      <b-col sm=\"6\" md=\"5\" xl=\"4\">\n        <search\n          @change-search=\"onChangeSearchInput\"\n          @clear-search=\"onClearSearchInput\"\n        />\n      </b-col>\n      <b-col sm=\"6\" md=\"3\" xl=\"2\">\n        <table-cell-count\n          :filtered-items-count=\"filteredRows\"\n          :total-number-of-cells=\"processors.length\"\n        ></table-cell-count>\n      </b-col>\n    </b-row>\n    <b-table\n      sort-icon-left\n      no-sort-reset\n      hover\n      responsive=\"md\"\n      show-empty\n      :items=\"processors\"\n      :fields=\"fields\"\n      :sort-desc=\"true\"\n      :filter=\"searchFilter\"\n      :empty-text=\"$t('global.table.emptyMessage')\"\n      :empty-filtered-text=\"$t('global.table.emptySearchMessage')\"\n      :busy=\"isBusy\"\n      @filtered=\"onFiltered\"\n    >\n      <!-- Expand button -->\n      <template #cell(expandRow)=\"row\">\n        <b-button\n          variant=\"link\"\n          data-test-id=\"hardwareStatus-button-expandProcessors\"\n          :title=\"expandRowLabel\"\n          class=\"btn-icon-only\"\n          @click=\"toggleRowDetails(row)\"\n        >\n          <icon-chevron />\n          <span class=\"sr-only\">{{ expandRowLabel }}</span>\n        </b-button>\n      </template>\n      <!-- Health -->\n      <template #cell(health)=\"{ value }\">\n        <status-icon :status=\"statusIcon(value)\" />\n        {{ value }}\n      </template>\n      <!-- StatusState -->\n      <template #cell(statusState)=\"{ value }\">\n        <status-icon :status=\"statusStateIcon(value)\" />\n        {{ value }}\n      </template>\n\n      <!-- Toggle identify LED -->\n      <template #cell(identifyLed)=\"row\">\n        <b-form-checkbox\n          v-if=\"hasIdentifyLed(row.item.identifyLed)\"\n          v-model=\"row.item.identifyLed\"\n          name=\"switch\"\n          switch\n          @change=\"toggleIdentifyLedValue(row.item)\"\n        >\n          <span v-if=\"row.item.identifyLed\">\n            {{ $t('global.status.on') }}\n          </span>\n          <span v-else> {{ $t('global.status.off') }} </span>\n        </b-form-checkbox>\n        <div v-else>--</div>\n      </template>\n\n      <template #row-details=\"{ item }\">\n        <b-container fluid>\n          <b-row>\n            <b-col class=\"mt-2\" sm=\"6\" xl=\"6\">\n              <dl>\n                <!-- Name -->\n                <dt>{{ $t('pageInventory.table.name') }}:</dt>\n                <dd>{{ dataFormatter(item.name) }}</dd>\n                <!-- Part Number -->\n                <dt>{{ $t('pageInventory.table.partNumber') }}:</dt>\n                <dd>{{ dataFormatter(item.partNumber) }}</dd>\n                <!-- Serial Number -->\n                <dt>{{ $t('pageInventory.table.serialNumber') }}:</dt>\n                <dd>{{ dataFormatter(item.serialNumber) }}</dd>\n                <!-- Spare Part Number -->\n                <dt>{{ $t('pageInventory.table.sparePartNumber') }}:</dt>\n                <dd>{{ dataFormatter(item.sparePartNumber) }}</dd>\n                <!-- Model -->\n                <dt>{{ $t('pageInventory.table.model') }}:</dt>\n                <dd>{{ dataFormatter(item.model) }}</dd>\n                <!-- Asset Tag -->\n                <dt>{{ $t('pageInventory.table.assetTag') }}:</dt>\n                <dd>{{ dataFormatter(item.assetTag) }}</dd>\n              </dl>\n            </b-col>\n            <b-col class=\"mt-2\" sm=\"6\" xl=\"6\">\n              <dl>\n                <!-- Status state -->\n                <dt>{{ $t('pageInventory.table.statusState') }}:</dt>\n                <dd>{{ dataFormatter(item.statusState) }}</dd>\n                <!-- Health Rollup -->\n                <dt>{{ $t('pageInventory.table.healthRollup') }}:</dt>\n                <dd>{{ dataFormatter(item.healthRollup) }}</dd>\n              </dl>\n            </b-col>\n          </b-row>\n          <div class=\"section-divider mb-3 mt-3\"></div>\n          <b-row>\n            <b-col class=\"mt-1\" sm=\"6\" xl=\"6\">\n              <dl>\n                <!-- Manufacturer -->\n                <dt>{{ $t('pageInventory.table.manufacturer') }}:</dt>\n                <dd>{{ dataFormatter(item.manufacturer) }}</dd>\n                <!-- Processor Type -->\n                <dt>{{ $t('pageInventory.table.processorType') }}:</dt>\n                <dd>{{ dataFormatter(item.processorType) }}</dd>\n                <!-- Processor Architecture -->\n                <dt>{{ $t('pageInventory.table.processorArchitecture') }}:</dt>\n                <dd>{{ dataFormatter(item.processorArchitecture) }}</dd>\n                <!-- Instruction Set -->\n                <dt>{{ $t('pageInventory.table.instructionSet') }}:</dt>\n                <dd>{{ dataFormatter(item.instructionSet) }}</dd>\n                <!-- Version -->\n                <dt>{{ $t('pageInventory.table.version') }}:</dt>\n                <dd>{{ dataFormatter(item.version) }}</dd>\n              </dl>\n            </b-col>\n            <b-col class=\"mt-1\" sm=\"6\" xl=\"6\">\n              <dl>\n                <!-- Min Speed MHz -->\n                <dt>{{ $t('pageInventory.table.minSpeedMHz') }}:</dt>\n                <dd>\n                  {{ dataFormatter(item.minSpeedMHz) }}\n                  {{ $t('unit.MHz') }}\n                </dd>\n                <!-- Max Speed MHz -->\n                <dt>{{ $t('pageInventory.table.maxSpeedMHz') }}:</dt>\n                <dd>\n                  {{ dataFormatter(item.maxSpeedMHz) }}\n                  {{ $t('unit.MHz') }}\n                </dd>\n                <!-- Total Cores -->\n                <dt>{{ $t('pageInventory.table.totalCores') }}:</dt>\n                <dd>{{ dataFormatter(item.totalCores) }}</dd>\n                <!-- Total Threads -->\n                <dt>{{ $t('pageInventory.table.totalThreads') }}:</dt>\n                <dd>{{ dataFormatter(item.totalThreads) }}</dd>\n              </dl>\n            </b-col>\n          </b-row>\n        </b-container>\n      </template>\n    </b-table>\n  </page-section>\n</template>\n\n<script>\nimport PageSection from '@/components/Global/PageSection';\nimport IconChevron from '@carbon/icons-vue/es/chevron--down/20';\nimport StatusIcon from '@/components/Global/StatusIcon';\nimport TableCellCount from '@/components/Global/TableCellCount';\nimport BVToastMixin from '@/components/Mixins/BVToastMixin';\nimport TableSortMixin from '@/components/Mixins/TableSortMixin';\nimport DataFormatterMixin from '@/components/Mixins/DataFormatterMixin';\nimport Search from '@/components/Global/Search';\nimport SearchFilterMixin, {\n  searchFilter,\n} from '@/components/Mixins/SearchFilterMixin';\nimport TableRowExpandMixin, {\n  expandRowLabel,\n} from '@/components/Mixins/TableRowExpandMixin';\nimport { useI18n } from 'vue-i18n';\nimport i18n from '@/i18n';\n\nexport default {\n  components: { IconChevron, PageSection, StatusIcon, Search, TableCellCount },\n  mixins: [\n    BVToastMixin,\n    TableRowExpandMixin,\n    DataFormatterMixin,\n    TableSortMixin,\n    SearchFilterMixin,\n  ],\n  data() {\n    return {\n      $t: useI18n().t,\n      isBusy: true,\n      fields: [\n        {\n          key: 'expandRow',\n          label: '',\n          tdClass: 'table-row-expand',\n          sortable: false,\n        },\n        {\n          key: 'id',\n          label: i18n.global.t('pageInventory.table.id'),\n          formatter: this.dataFormatter,\n          sortable: true,\n        },\n        {\n          key: 'health',\n          label: i18n.global.t('pageInventory.table.health'),\n          formatter: this.dataFormatter,\n          sortable: true,\n          tdClass: 'text-nowrap',\n        },\n        {\n          key: 'statusState',\n          label: i18n.global.t('pageInventory.table.state'),\n          formatter: this.dataFormatter,\n          sortable: true,\n          tdClass: 'text-nowrap',\n        },\n        {\n          key: 'locationNumber',\n          label: i18n.global.t('pageInventory.table.locationNumber'),\n          formatter: this.dataFormatter,\n          sortable: true,\n        },\n        {\n          key: 'identifyLed',\n          label: i18n.global.t('pageInventory.table.identifyLed'),\n          formatter: this.dataFormatter,\n          sortable: false,\n        },\n      ],\n      searchFilter: searchFilter,\n      searchTotalFilteredRows: 0,\n      expandRowLabel: expandRowLabel,\n    };\n  },\n  computed: {\n    filteredRows() {\n      return this.searchFilter\n        ? this.searchTotalFilteredRows\n        : this.processors.length;\n    },\n    processors() {\n      return this.$store.getters['processors/processors'];\n    },\n  },\n  created() {\n    this.$store.dispatch('processors/getProcessorsInfo').finally(() => {\n      // Emit initial data fetch complete to parent component\n      this.$root.$emit('hardware-status-processors-complete');\n      this.isBusy = false;\n    });\n  },\n  methods: {\n    onFiltered(filteredItems) {\n      this.searchTotalFilteredRows = filteredItems.length;\n    },\n    toggleIdentifyLedValue(row) {\n      this.$store\n        .dispatch('processors/updateIdentifyLedValue', {\n          uri: row.uri,\n          identifyLed: row.identifyLed,\n        })\n        .then((message) => this.successToast(message))\n        .catch(({ message }) => this.errorToast(message));\n    },\n    // TO DO: remove hasIdentifyLed when the following is merged:\n    // https://gerrit.openbmc-project.xyz/c/openbmc/bmcweb/+/37045\n    hasIdentifyLed(identifyLed) {\n      return typeof identifyLed === 'boolean';\n    },\n    statusStateIcon(status) {\n      switch (status) {\n        case 'Enabled':\n          return 'success';\n        case 'Absent':\n          return 'warning';\n        default:\n          return '';\n      }\n    },\n  },\n};\n</script>\n"],"mappings":";;EA0CgBA,KAAK,EAAC;AAAS;;EA1C/BC,GAAA;AAAA;;EAAAA,GAAA;AAAA;;EAAAA,GAAA;AAAA;gCA6GUC,mBAAA,CAA6C;EAAxCF,KAAK,EAAC;AAA2B;;;;;;;;;;;;;uBA5G9CG,YAAA,CA2JeC,uBAAA;IA3JA,eAAa,EAAEC,KAAA,CAAAC,EAAE;;IADlCC,OAAA,EAAAC,QAAA,CAEI,MAAe,CAAfC,mBAAA,YAAe,EACfC,YAAA,CAaQC,gBAAA;MAbDX,KAAK,EAAC;IAAiB;MAHlCO,OAAA,EAAAC,QAAA,CAIM,MAKQ,CALRE,YAAA,CAKQE,gBAAA;QALDC,EAAE,EAAC,GAAG;QAACC,EAAE,EAAC,GAAG;QAACC,EAAE,EAAC;;QAJ9BR,OAAA,EAAAC,QAAA,CAKQ,MAGE,CAHFE,YAAA,CAGEM,iBAAA;UAFCC,cAAa,EAAEC,IAAA,CAAAC,mBAAmB;UAClCC,aAAY,EAAEF,IAAA,CAAAG;;QAPzBC,CAAA;UAUMZ,YAAA,CAKQE,gBAAA;QALDC,EAAE,EAAC,GAAG;QAACC,EAAE,EAAC,GAAG;QAACC,EAAE,EAAC;;QAV9BR,OAAA,EAAAC,QAAA,CAWQ,MAGoB,CAHpBE,YAAA,CAGoBa,2BAAA;UAFjB,sBAAoB,EAAEC,QAAA,CAAAC,YAAY;UAClC,uBAAqB,EAAED,QAAA,CAAAE,UAAU,CAACC;;QAb7CL,CAAA;;MAAAA,CAAA;QAiBIZ,YAAA,CA0IUkB,kBAAA;MAzIR,gBAAc,EAAd,EAAc;MACd,eAAa,EAAb,EAAa;MACbC,KAAK,EAAL,EAAK;MACLC,UAAU,EAAC,IAAI;MACf,YAAU,EAAV,EAAU;MACTC,KAAK,EAAEP,QAAA,CAAAE,UAAU;MACjBM,MAAM,EAAE3B,KAAA,CAAA2B,MAAM;MACd,WAAS,EAAE,IAAI;MACfC,MAAM,EAAE5B,KAAA,CAAA6B,YAAY;MACpB,YAAU,EAAE7B,KAAA,CAAAC,EAAE;MACd,qBAAmB,EAAED,KAAA,CAAAC,EAAE;MACvB6B,IAAI,EAAE9B,KAAA,CAAA+B,MAAM;MACZC,UAAQ,EAAEb,QAAA,CAAAa;;MAGA,iBAAe,EAAA7B,QAAA,CAUb8B,GAVkB,KAC7B5B,YAAA,CASW6B,mBAAA;QARTC,OAAO,EAAC,MAAM;QACd,cAAY,EAAC,wCAAwC;QACpDC,KAAK,EAAEpC,KAAA,CAAAqC,cAAc;QACtB1C,KAAK,EAAC,eAAe;QACpB2C,OAAK,EAAAC,MAAA,IAAE1B,IAAA,CAAA2B,gBAAgB,CAACP,GAAG;;QAvCtC/B,OAAA,EAAAC,QAAA,CAyCU,MAAgB,CAAhBE,YAAA,CAAgBoC,uBAAA,GAChB5C,mBAAA,CAAiD,QAAjD6C,UAAiD,EAAAC,gBAAA,CAAxB3C,KAAA,CAAAqC,cAAc,iB;QA1CjDpB,CAAA;;MA8CiB,cAAY,EAAAd,QAAA,CACrB,CAA2C;QADlByC;MAAK,OAC9BvC,YAAA,CAA2CwC,sBAAA;QAA7BC,MAAM,EAAEjC,IAAA,CAAAkC,UAAU,CAACH,KAAK;2CA/C9CI,gBAAA,CA+CmD,GAC3C,GAAAL,gBAAA,CAAGC,KAAK,iB;MAGC,mBAAiB,EAAAzC,QAAA,CAC1B,CAAgD;QADlByC;MAAK,OACnCvC,YAAA,CAAgDwC,sBAAA;QAAlCC,MAAM,EAAE3B,QAAA,CAAA8B,eAAe,CAACL,KAAK;2CApDnDI,gBAAA,CAoDwD,GAChD,GAAAL,gBAAA,CAAGC,KAAK,iB;MAIC,mBAAiB,EAAAzC,QAAA,CAYR8B,GAZa,KAEvBd,QAAA,CAAA+B,cAAc,CAACjB,GAAG,CAACkB,IAAI,CAACC,WAAW,K,cAD3CtD,YAAA,CAWkBuD,0BAAA;QArE1BzD,GAAA;QAAA0D,UAAA,EA4DmBrB,GAAG,CAACkB,IAAI,CAACC,WAAW;QA5DvC,uBAAAb,MAAA,IA4DmBN,GAAG,CAACkB,IAAI,CAACC,WAAW,GAAAb,MAAA;QAC7BgB,IAAI,EAAC,QAAQ;QACbC,MAAM,EAAN,EAAM;QACLC,QAAM,EAAAlB,MAAA,IAAEpB,QAAA,CAAAuC,sBAAsB,CAACzB,GAAG,CAACkB,IAAI;;QA/DlDjD,OAAA,EAAAC,QAAA,CAiEU,MAEO,CAFK8B,GAAG,CAACkB,IAAI,CAACC,WAAW,I,cAAhCO,mBAAA,CAEO,QAnEjBC,UAAA,EAAAjB,gBAAA,CAkEe3C,KAAA,CAAAC,EAAE,yC,cAEP0D,mBAAA,CAAmD,QApE7DE,UAAA,EAAAlB,gBAAA,CAoE2B3C,KAAA,CAAAC,EAAE,uC;QApE7BgB,CAAA;+GAsEQ0C,mBAAA,CAAoB,OAtE5BG,UAAA,EAsEoB,IAAE,G;MAGL,aAAW,EAAA3D,QAAA,CACpB,CA+Ec;QAhFUgD;MAAI,OAC5B9C,YAAA,CA+Ec0D,sBAAA;QA/EDC,KAAK,EAAL;MAAK;QA1E1B9D,OAAA,EAAAC,QAAA,CA2EU,MAiCQ,CAjCRE,YAAA,CAiCQC,gBAAA;UA5GlBJ,OAAA,EAAAC,QAAA,CA4EY,MAqBQ,CArBRE,YAAA,CAqBQE,gBAAA;YArBDZ,KAAK,EAAC,MAAM;YAACa,EAAE,EAAC,GAAG;YAACE,EAAE,EAAC;;YA5E1CR,OAAA,EAAAC,QAAA,CA6Ec,MAmBK,CAnBLN,mBAAA,CAmBK,aAlBHO,mBAAA,UAAa,EACbP,mBAAA,CAA8C,YAAA8C,gBAAA,CAAvC3C,KAAA,CAAAC,EAAE,gCAA+B,GAAC,iBACzCJ,mBAAA,CAAuC,YAAA8C,gBAAA,CAAhC9B,IAAA,CAAAoD,aAAa,CAACd,IAAI,CAACI,IAAI,mBAC9BnD,mBAAA,iBAAoB,EACpBP,mBAAA,CAAoD,YAAA8C,gBAAA,CAA7C3C,KAAA,CAAAC,EAAE,sCAAqC,GAAC,iBAC/CJ,mBAAA,CAA6C,YAAA8C,gBAAA,CAAtC9B,IAAA,CAAAoD,aAAa,CAACd,IAAI,CAACe,UAAU,mBACpC9D,mBAAA,mBAAsB,EACtBP,mBAAA,CAAsD,YAAA8C,gBAAA,CAA/C3C,KAAA,CAAAC,EAAE,wCAAuC,GAAC,iBACjDJ,mBAAA,CAA+C,YAAA8C,gBAAA,CAAxC9B,IAAA,CAAAoD,aAAa,CAACd,IAAI,CAACgB,YAAY,mBACtC/D,mBAAA,uBAA0B,EAC1BP,mBAAA,CAAyD,YAAA8C,gBAAA,CAAlD3C,KAAA,CAAAC,EAAE,2CAA0C,GAAC,iBACpDJ,mBAAA,CAAkD,YAAA8C,gBAAA,CAA3C9B,IAAA,CAAAoD,aAAa,CAACd,IAAI,CAACiB,eAAe,mBACzChE,mBAAA,WAAc,EACdP,mBAAA,CAA+C,YAAA8C,gBAAA,CAAxC3C,KAAA,CAAAC,EAAE,iCAAgC,GAAC,iBAC1CJ,mBAAA,CAAwC,YAAA8C,gBAAA,CAAjC9B,IAAA,CAAAoD,aAAa,CAACd,IAAI,CAACkB,KAAK,mBAC/BjE,mBAAA,eAAkB,EAClBP,mBAAA,CAAkD,YAAA8C,gBAAA,CAA3C3C,KAAA,CAAAC,EAAE,oCAAmC,GAAC,iBAC7CJ,mBAAA,CAA2C,YAAA8C,gBAAA,CAApC9B,IAAA,CAAAoD,aAAa,CAACd,IAAI,CAACmB,QAAQ,kB;YA/FlDrD,CAAA;wCAkGYZ,YAAA,CASQE,gBAAA;YATDZ,KAAK,EAAC,MAAM;YAACa,EAAE,EAAC,GAAG;YAACE,EAAE,EAAC;;YAlG1CR,OAAA,EAAAC,QAAA,CAmGc,MAOK,CAPLN,mBAAA,CAOK,aANHO,mBAAA,kBAAqB,EACrBP,mBAAA,CAAqD,YAAA8C,gBAAA,CAA9C3C,KAAA,CAAAC,EAAE,uCAAsC,GAAC,iBAChDJ,mBAAA,CAA8C,YAAA8C,gBAAA,CAAvC9B,IAAA,CAAAoD,aAAa,CAACd,IAAI,CAACoB,WAAW,mBACrCnE,mBAAA,mBAAsB,EACtBP,mBAAA,CAAsD,YAAA8C,gBAAA,CAA/C3C,KAAA,CAAAC,EAAE,wCAAuC,GAAC,iBACjDJ,mBAAA,CAA+C,YAAA8C,gBAAA,CAAxC9B,IAAA,CAAAoD,aAAa,CAACd,IAAI,CAACqB,YAAY,kB;YAzGtDvD,CAAA;;UAAAA,CAAA;sCA6GUwD,UAA6C,EAC7CpE,YAAA,CA0CQC,gBAAA;UAxJlBJ,OAAA,EAAAC,QAAA,CA+GY,MAkBQ,CAlBRE,YAAA,CAkBQE,gBAAA;YAlBDZ,KAAK,EAAC,MAAM;YAACa,EAAE,EAAC,GAAG;YAACE,EAAE,EAAC;;YA/G1CR,OAAA,EAAAC,QAAA,CAgHc,MAgBK,CAhBLN,mBAAA,CAgBK,aAfHO,mBAAA,kBAAqB,EACrBP,mBAAA,CAAsD,YAAA8C,gBAAA,CAA/C3C,KAAA,CAAAC,EAAE,wCAAuC,GAAC,iBACjDJ,mBAAA,CAA+C,YAAA8C,gBAAA,CAAxC9B,IAAA,CAAAoD,aAAa,CAACd,IAAI,CAACuB,YAAY,mBACtCtE,mBAAA,oBAAuB,EACvBP,mBAAA,CAAuD,YAAA8C,gBAAA,CAAhD3C,KAAA,CAAAC,EAAE,yCAAwC,GAAC,iBAClDJ,mBAAA,CAAgD,YAAA8C,gBAAA,CAAzC9B,IAAA,CAAAoD,aAAa,CAACd,IAAI,CAACwB,aAAa,mBACvCvE,mBAAA,4BAA+B,EAC/BP,mBAAA,CAA+D,YAAA8C,gBAAA,CAAxD3C,KAAA,CAAAC,EAAE,iDAAgD,GAAC,iBAC1DJ,mBAAA,CAAwD,YAAA8C,gBAAA,CAAjD9B,IAAA,CAAAoD,aAAa,CAACd,IAAI,CAACyB,qBAAqB,mBAC/CxE,mBAAA,qBAAwB,EACxBP,mBAAA,CAAwD,YAAA8C,gBAAA,CAAjD3C,KAAA,CAAAC,EAAE,0CAAyC,GAAC,iBACnDJ,mBAAA,CAAiD,YAAA8C,gBAAA,CAA1C9B,IAAA,CAAAoD,aAAa,CAACd,IAAI,CAAC0B,cAAc,mBACxCzE,mBAAA,aAAgB,EAChBP,mBAAA,CAAiD,YAAA8C,gBAAA,CAA1C3C,KAAA,CAAAC,EAAE,mCAAkC,GAAC,iBAC5CJ,mBAAA,CAA0C,YAAA8C,gBAAA,CAAnC9B,IAAA,CAAAoD,aAAa,CAACd,IAAI,CAAC2B,OAAO,kB;YA/HjD7D,CAAA;wCAkIYZ,YAAA,CAqBQE,gBAAA;YArBDZ,KAAK,EAAC,MAAM;YAACa,EAAE,EAAC,GAAG;YAACE,EAAE,EAAC;;YAlI1CR,OAAA,EAAAC,QAAA,CAmIc,MAmBK,CAnBLN,mBAAA,CAmBK,aAlBHO,mBAAA,mBAAsB,EACtBP,mBAAA,CAAqD,YAAA8C,gBAAA,CAA9C3C,KAAA,CAAAC,EAAE,uCAAsC,GAAC,iBAChDJ,mBAAA,CAGK,YAAA8C,gBAAA,CAFA9B,IAAA,CAAAoD,aAAa,CAACd,IAAI,CAAC4B,WAAW,KAAI,GACrC,GAAApC,gBAAA,CAAG3C,KAAA,CAAAC,EAAE,8BAEPG,mBAAA,mBAAsB,EACtBP,mBAAA,CAAqD,YAAA8C,gBAAA,CAA9C3C,KAAA,CAAAC,EAAE,uCAAsC,GAAC,iBAChDJ,mBAAA,CAGK,YAAA8C,gBAAA,CAFA9B,IAAA,CAAAoD,aAAa,CAACd,IAAI,CAAC6B,WAAW,KAAI,GACrC,GAAArC,gBAAA,CAAG3C,KAAA,CAAAC,EAAE,8BAEPG,mBAAA,iBAAoB,EACpBP,mBAAA,CAAoD,YAAA8C,gBAAA,CAA7C3C,KAAA,CAAAC,EAAE,sCAAqC,GAAC,iBAC/CJ,mBAAA,CAA6C,YAAA8C,gBAAA,CAAtC9B,IAAA,CAAAoD,aAAa,CAACd,IAAI,CAAC8B,UAAU,mBACpC7E,mBAAA,mBAAsB,EACtBP,mBAAA,CAAsD,YAAA8C,gBAAA,CAA/C3C,KAAA,CAAAC,EAAE,wCAAuC,GAAC,iBACjDJ,mBAAA,CAA+C,YAAA8C,gBAAA,CAAxC9B,IAAA,CAAAoD,aAAa,CAACd,IAAI,CAAC+B,YAAY,kB;YArJtDjE,CAAA;;UAAAA,CAAA;;QAAAA,CAAA;;MAAAA,CAAA;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}