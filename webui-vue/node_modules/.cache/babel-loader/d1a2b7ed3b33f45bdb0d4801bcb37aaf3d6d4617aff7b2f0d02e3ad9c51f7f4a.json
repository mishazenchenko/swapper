{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport LoadingBarMixin from '@/components/Mixins/LoadingBarMixin';\nimport OverviewDumps from './OverviewDumps.vue';\nimport OverviewEvents from './OverviewEvents.vue';\nimport OverviewFirmware from './OverviewFirmware.vue';\nimport OverviewInventory from './OverviewInventory.vue';\nimport OverviewNetwork from './OverviewNetwork';\nimport OverviewPower from './OverviewPower';\nimport OverviewQuickLinks from './OverviewQuickLinks';\nimport OverviewServer from './OverviewServer';\nimport PageSection from '@/components/Global/PageSection';\nimport PageTitle from '@/components/Global/PageTitle';\nimport { useI18n } from 'vue-i18n';\nexport default {\n  name: 'Overview',\n  components: {\n    OverviewDumps,\n    OverviewEvents,\n    OverviewFirmware,\n    OverviewInventory,\n    OverviewNetwork,\n    OverviewPower,\n    OverviewQuickLinks,\n    OverviewServer,\n    PageSection,\n    PageTitle\n  },\n  mixins: [LoadingBarMixin],\n  data() {\n    return {\n      $t: useI18n().t,\n      showDumps: process.env.VUE_APP_ENV_NAME === 'ibm'\n    };\n  },\n  created() {\n    this.startLoader();\n    const dumpsPromise = new Promise(resolve => {\n      this.$root.$on('overview-dumps-complete', () => resolve());\n    });\n    const eventsPromise = new Promise(resolve => {\n      this.$root.$on('overview-events-complete', () => resolve());\n    });\n    const firmwarePromise = new Promise(resolve => {\n      this.$root.$on('overview-firmware-complete', () => resolve());\n    });\n    const inventoryPromise = new Promise(resolve => {\n      this.$root.$on('overview-inventory-complete', () => resolve());\n    });\n    const networkPromise = new Promise(resolve => {\n      this.$root.$on('overview-network-complete', () => resolve());\n    });\n    const powerPromise = new Promise(resolve => {\n      this.$root.$on('overview-power-complete', () => resolve());\n    });\n    const quicklinksPromise = new Promise(resolve => {\n      this.$root.$on('overview-quicklinks-complete', () => resolve());\n    });\n    const serverPromise = new Promise(resolve => {\n      this.$root.$on('overview-server-complete', () => resolve());\n    });\n    const promises = [eventsPromise, firmwarePromise, inventoryPromise, networkPromise, powerPromise, quicklinksPromise, serverPromise];\n    if (this.showDumps) promises.push(dumpsPromise);\n    Promise.all(promises).finally(() => this.endLoader());\n  }\n};","map":{"version":3,"names":["LoadingBarMixin","OverviewDumps","OverviewEvents","OverviewFirmware","OverviewInventory","OverviewNetwork","OverviewPower","OverviewQuickLinks","OverviewServer","PageSection","PageTitle","useI18n","name","components","mixins","data","$t","t","showDumps","process","env","VUE_APP_ENV_NAME","created","startLoader","dumpsPromise","Promise","resolve","$root","$on","eventsPromise","firmwarePromise","inventoryPromise","networkPromise","powerPromise","quicklinksPromise","serverPromise","promises","push","all","finally","endLoader"],"sources":["/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/src/views/Overview/Overview.vue"],"sourcesContent":["<template>\n  <b-container fluid=\"xl\">\n    <page-title />\n    <overview-quick-links class=\"mb-4\" />\n    <page-section\n      :section-title=\"$t('pageOverview.systemInformation')\"\n      class=\"mb-1\"\n    >\n      <b-card-group deck>\n        <overview-server />\n        <overview-firmware />\n      </b-card-group>\n      <b-card-group deck>\n        <overview-network />\n        <overview-power />\n      </b-card-group>\n    </page-section>\n    <page-section :section-title=\"$t('pageOverview.statusInformation')\">\n      <b-card-group deck>\n        <overview-events />\n        <overview-inventory />\n        <overview-dumps v-if=\"showDumps\" />\n      </b-card-group>\n    </page-section>\n  </b-container>\n</template>\n\n<script>\nimport LoadingBarMixin from '@/components/Mixins/LoadingBarMixin';\nimport OverviewDumps from './OverviewDumps.vue';\nimport OverviewEvents from './OverviewEvents.vue';\nimport OverviewFirmware from './OverviewFirmware.vue';\nimport OverviewInventory from './OverviewInventory.vue';\nimport OverviewNetwork from './OverviewNetwork';\nimport OverviewPower from './OverviewPower';\nimport OverviewQuickLinks from './OverviewQuickLinks';\nimport OverviewServer from './OverviewServer';\nimport PageSection from '@/components/Global/PageSection';\nimport PageTitle from '@/components/Global/PageTitle';\nimport { useI18n } from 'vue-i18n';\n\nexport default {\n  name: 'Overview',\n  components: {\n    OverviewDumps,\n    OverviewEvents,\n    OverviewFirmware,\n    OverviewInventory,\n    OverviewNetwork,\n    OverviewPower,\n    OverviewQuickLinks,\n    OverviewServer,\n    PageSection,\n    PageTitle,\n  },\n  mixins: [LoadingBarMixin],\n  data() {\n    return {\n      $t: useI18n().t,\n      showDumps: process.env.VUE_APP_ENV_NAME === 'ibm',\n    };\n  },\n  created() {\n    this.startLoader();\n    const dumpsPromise = new Promise((resolve) => {\n      this.$root.$on('overview-dumps-complete', () => resolve());\n    });\n    const eventsPromise = new Promise((resolve) => {\n      this.$root.$on('overview-events-complete', () => resolve());\n    });\n    const firmwarePromise = new Promise((resolve) => {\n      this.$root.$on('overview-firmware-complete', () => resolve());\n    });\n    const inventoryPromise = new Promise((resolve) => {\n      this.$root.$on('overview-inventory-complete', () => resolve());\n    });\n    const networkPromise = new Promise((resolve) => {\n      this.$root.$on('overview-network-complete', () => resolve());\n    });\n    const powerPromise = new Promise((resolve) => {\n      this.$root.$on('overview-power-complete', () => resolve());\n    });\n    const quicklinksPromise = new Promise((resolve) => {\n      this.$root.$on('overview-quicklinks-complete', () => resolve());\n    });\n    const serverPromise = new Promise((resolve) => {\n      this.$root.$on('overview-server-complete', () => resolve());\n    });\n\n    const promises = [\n      eventsPromise,\n      firmwarePromise,\n      inventoryPromise,\n      networkPromise,\n      powerPromise,\n      quicklinksPromise,\n      serverPromise,\n    ];\n    if (this.showDumps) promises.push(dumpsPromise);\n    Promise.all(promises).finally(() => this.endLoader());\n  },\n};\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}