{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, withCtx as _withCtx, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"sr-only\"\n};\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = {\n  key: 1\n};\nconst _hoisted_4 = {\n  key: 1\n};\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"dt\", null, \"Model\", -1 /* HOISTED */);\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"dt\", null, \"Spare Part Number\", -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_icon_chevron = _resolveComponent(\"icon-chevron\");\n  const _component_b_button = _resolveComponent(\"b-button\");\n  const _component_b_form_checkbox = _resolveComponent(\"b-form-checkbox\");\n  const _component_b_col = _resolveComponent(\"b-col\");\n  const _component_b_row = _resolveComponent(\"b-row\");\n  const _component_b_container = _resolveComponent(\"b-container\");\n  const _component_b_table = _resolveComponent(\"b-table\");\n  const _component_page_section = _resolveComponent(\"page-section\");\n  return _openBlock(), _createBlock(_component_page_section, {\n    \"section-title\": $data.$t('pageInventory.assemblies')\n  }, {\n    default: _withCtx(() => [_createVNode(_component_b_table, {\n      \"sort-icon-left\": \"\",\n      \"no-sort-reset\": \"\",\n      hover: \"\",\n      responsive: \"md\",\n      items: $options.items,\n      fields: $data.fields,\n      \"show-empty\": \"\",\n      \"empty-text\": $data.$t('global.table.emptyMessage'),\n      busy: $data.isBusy\n    }, {\n      \"cell(expandRow)\": _withCtx(row => [_createVNode(_component_b_button, {\n        variant: \"link\",\n        \"data-test-id\": \"hardwareStatus-button-expandAssembly\",\n        title: $data.expandRowLabel,\n        class: \"btn-icon-only\",\n        onClick: $event => _ctx.toggleRowDetails(row)\n      }, {\n        default: _withCtx(() => [_createVNode(_component_icon_chevron), _createElementVNode(\"span\", _hoisted_1, _toDisplayString($data.expandRowLabel), 1 /* TEXT */)], undefined, true),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"title\", \"onClick\"])]),\n      \"cell(identifyLed)\": _withCtx(row => [$options.hasIdentifyLed(row.item.identifyLed) ? (_openBlock(), _createBlock(_component_b_form_checkbox, {\n        key: 0,\n        modelValue: row.item.identifyLed,\n        \"onUpdate:modelValue\": $event => row.item.identifyLed = $event,\n        name: \"switch\",\n        switch: \"\",\n        onChange: $event => $options.toggleIdentifyLedValue(row.item)\n      }, {\n        default: _withCtx(() => [row.item.identifyLed ? (_openBlock(), _createElementBlock(\"span\", _hoisted_2, _toDisplayString($data.$t('global.status.on')), 1 /* TEXT */)) : (_openBlock(), _createElementBlock(\"span\", _hoisted_3, _toDisplayString($data.$t('global.status.off')), 1 /* TEXT */))], undefined, true),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"modelValue\", \"onUpdate:modelValue\", \"onChange\"])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_4, \"--\"))]),\n      \"row-details\": _withCtx(({\n        item\n      }) => [_createVNode(_component_b_container, {\n        fluid: \"\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_b_row, null, {\n          default: _withCtx(() => [_createVNode(_component_b_col, {\n            class: \"mt-2\",\n            sm: \"6\",\n            xl: \"6\"\n          }, {\n            default: _withCtx(() => [_createCommentVNode(\" Nmae \"), _createElementVNode(\"dt\", null, _toDisplayString($data.$t('pageInventory.table.name')) + \":\", 1 /* TEXT */), _createElementVNode(\"dd\", null, _toDisplayString(_ctx.dataFormatter(item.name)), 1 /* TEXT */), _createCommentVNode(\" Serial number \"), _createElementVNode(\"dt\", null, _toDisplayString($data.$t('pageInventory.table.serialNumber')) + \":\", 1 /* TEXT */), _createElementVNode(\"dd\", null, _toDisplayString(_ctx.dataFormatter(item.serialNumber)), 1 /* TEXT */)], undefined, true),\n            _: 2 /* DYNAMIC */\n          }, 1024 /* DYNAMIC_SLOTS */), _createVNode(_component_b_col, {\n            class: \"mt-2\",\n            sm: \"6\",\n            xl: \"6\"\n          }, {\n            default: _withCtx(() => [_createCommentVNode(\" Model\"), _hoisted_5, _createElementVNode(\"dd\", null, _toDisplayString(_ctx.dataFormatter(item.model)), 1 /* TEXT */), _createCommentVNode(\" Spare Part Number \"), _hoisted_6, _createElementVNode(\"dd\", null, _toDisplayString(_ctx.dataFormatter(item.sparePartNumber)), 1 /* TEXT */)], undefined, true),\n            _: 2 /* DYNAMIC */\n          }, 1024 /* DYNAMIC_SLOTS */)], undefined, true),\n          _: 2 /* DYNAMIC */\n        }, 1024 /* DYNAMIC_SLOTS */)], undefined, true),\n        _: 2 /* DYNAMIC */\n      }, 1024 /* DYNAMIC_SLOTS */)]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"items\", \"fields\", \"empty-text\", \"busy\"])], undefined, true),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"section-title\"]);\n}","map":{"version":3,"names":["class","key","_createElementVNode","_createBlock","_component_page_section","$data","$t","default","_withCtx","_createVNode","_component_b_table","hover","responsive","items","$options","fields","busy","isBusy","row","_component_b_button","variant","title","expandRowLabel","onClick","$event","_ctx","toggleRowDetails","_component_icon_chevron","_hoisted_1","_toDisplayString","_","hasIdentifyLed","item","identifyLed","_component_b_form_checkbox","modelValue","name","switch","onChange","toggleIdentifyLedValue","_createElementBlock","_hoisted_2","_hoisted_3","_hoisted_4","_component_b_container","fluid","_component_b_row","_component_b_col","sm","xl","_createCommentVNode","dataFormatter","serialNumber","_hoisted_5","model","_hoisted_6","sparePartNumber"],"sources":["/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/src/views/HardwareStatus/Inventory/InventoryTableAssembly.vue"],"sourcesContent":["<template>\n  <page-section :section-title=\"$t('pageInventory.assemblies')\">\n    <b-table\n      sort-icon-left\n      no-sort-reset\n      hover\n      responsive=\"md\"\n      :items=\"items\"\n      :fields=\"fields\"\n      show-empty\n      :empty-text=\"$t('global.table.emptyMessage')\"\n      :busy=\"isBusy\"\n    >\n      <!-- Expand chevron icon -->\n      <template #cell(expandRow)=\"row\">\n        <b-button\n          variant=\"link\"\n          data-test-id=\"hardwareStatus-button-expandAssembly\"\n          :title=\"expandRowLabel\"\n          class=\"btn-icon-only\"\n          @click=\"toggleRowDetails(row)\"\n        >\n          <icon-chevron />\n          <span class=\"sr-only\">{{ expandRowLabel }}</span>\n        </b-button>\n      </template>\n\n      <!-- Toggle identify LED -->\n      <template #cell(identifyLed)=\"row\">\n        <b-form-checkbox\n          v-if=\"hasIdentifyLed(row.item.identifyLed)\"\n          v-model=\"row.item.identifyLed\"\n          name=\"switch\"\n          switch\n          @change=\"toggleIdentifyLedValue(row.item)\"\n        >\n          <span v-if=\"row.item.identifyLed\">\n            {{ $t('global.status.on') }}\n          </span>\n          <span v-else> {{ $t('global.status.off') }} </span>\n        </b-form-checkbox>\n        <div v-else>--</div>\n      </template>\n\n      <template #row-details=\"{ item }\">\n        <b-container fluid>\n          <b-row>\n            <b-col class=\"mt-2\" sm=\"6\" xl=\"6\">\n              <!-- Nmae -->\n              <dt>{{ $t('pageInventory.table.name') }}:</dt>\n              <dd>{{ dataFormatter(item.name) }}</dd>\n              <!-- Serial number -->\n              <dt>{{ $t('pageInventory.table.serialNumber') }}:</dt>\n              <dd>{{ dataFormatter(item.serialNumber) }}</dd>\n            </b-col>\n            <b-col class=\"mt-2\" sm=\"6\" xl=\"6\">\n              <!-- Model-->\n              <dt>Model</dt>\n              <dd>{{ dataFormatter(item.model) }}</dd>\n              <!-- Spare Part Number -->\n              <dt>Spare Part Number</dt>\n              <dd>{{ dataFormatter(item.sparePartNumber) }}</dd>\n            </b-col>\n          </b-row>\n        </b-container>\n      </template>\n    </b-table>\n  </page-section>\n</template>\n\n<script>\nimport PageSection from '@/components/Global/PageSection';\nimport IconChevron from '@carbon/icons-vue/es/chevron--down/20';\nimport BVToastMixin from '@/components/Mixins/BVToastMixin';\nimport TableRowExpandMixin, {\n  expandRowLabel,\n} from '@/components/Mixins/TableRowExpandMixin';\nimport DataFormatterMixin from '@/components/Mixins/DataFormatterMixin';\nimport { useI18n } from 'vue-i18n';\nimport i18n from '@/i18n';\n\nexport default {\n  components: { IconChevron, PageSection },\n  mixins: [BVToastMixin, TableRowExpandMixin, DataFormatterMixin],\n  data() {\n    return {\n      $t: useI18n().t,\n      isBusy: true,\n      fields: [\n        {\n          key: 'expandRow',\n          label: '',\n          tdClass: 'table-row-expand',\n        },\n        {\n          key: 'name',\n          label: i18n.global.t('pageInventory.table.id'),\n          formatter: this.dataFormatter,\n          sortable: true,\n        },\n        {\n          key: 'partNumber',\n          label: i18n.global.t('pageInventory.table.partNumber'),\n          formatter: this.dataFormatter,\n          sortable: true,\n        },\n        {\n          key: 'locationNumber',\n          label: i18n.global.t('pageInventory.table.locationNumber'),\n          formatter: this.dataFormatter,\n          sortable: true,\n        },\n        {\n          key: 'identifyLed',\n          label: i18n.global.t('pageInventory.table.identifyLed'),\n          formatter: this.dataFormatter,\n        },\n      ],\n      expandRowLabel: expandRowLabel,\n    };\n  },\n  computed: {\n    assemblies() {\n      return this.$store.getters['assemblies/assemblies'];\n    },\n    items() {\n      if (this.assemblies) {\n        return this.assemblies;\n      } else {\n        return [];\n      }\n    },\n  },\n  created() {\n    this.$store.dispatch('assemblies/getAssemblyInfo').finally(() => {\n      // Emit initial data fetch complete to parent component\n      this.$root.$emit('hardware-status-assembly-complete');\n      this.isBusy = false;\n    });\n  },\n  methods: {\n    toggleIdentifyLedValue(row) {\n      this.$store\n        .dispatch('assemblies/updateIdentifyLedValue', {\n          uri: row.uri,\n          memberId: row.id,\n          identifyLed: row.identifyLed,\n        })\n        .then((message) => this.successToast(message))\n        .catch(({ message }) => this.errorToast(message));\n    },\n    hasIdentifyLed(identifyLed) {\n      return typeof identifyLed === 'boolean';\n    },\n  },\n};\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}