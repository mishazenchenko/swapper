{"ast":null,"code":"import PageTitle from '@/components/Global/PageTitle';\nimport LoadingBarMixin, { loading } from '@/components/Mixins/LoadingBarMixin';\nimport VuelidateMixin from '@/components/Mixins/VuelidateMixin.js';\nimport { useVuelidate } from '@vuelidate/core';\nimport BVToastMixin from '@/components/Mixins/BVToastMixin';\nimport { requiredIf, between } from '@vuelidate/validators';\nimport { mapGetters } from 'vuex';\nimport { useI18n } from 'vue-i18n';\nexport default {\n  name: 'Power',\n  components: {\n    PageTitle\n  },\n  mixins: [VuelidateMixin, BVToastMixin, LoadingBarMixin],\n  beforeRouteLeave(to, from, next) {\n    this.hideLoader();\n    next();\n  },\n  setup() {\n    return {\n      v$: useVuelidate()\n    };\n  },\n  data() {\n    return {\n      $t: useI18n().t,\n      loading\n    };\n  },\n  computed: {\n    ...mapGetters({\n      powerConsumptionValue: 'powerControl/powerConsumptionValue'\n    }),\n    /**\n      Computed property isPowerCapFieldEnabled is used to enable or disable the input field.\n      The input field is enabled when the powercapValue property is not null.\n    **/\n    isPowerCapFieldEnabled: {\n      get() {\n        return this.powerCapValue !== null;\n      },\n      set(value) {\n        this.v$.$reset();\n        let newValue = null;\n        if (value) {\n          if (this.powerCapValue) {\n            newValue = this.powerCapValue;\n          } else {\n            newValue = '';\n          }\n        }\n        this.$store.dispatch('powerControl/setPowerCapUpdatedValue', newValue);\n      }\n    },\n    powerCapValue: {\n      get() {\n        return this.$store.getters['powerControl/powerCapValue'];\n      },\n      set(value) {\n        this.v$.$touch();\n        this.$store.dispatch('powerControl/setPowerCapUpdatedValue', value);\n      }\n    }\n  },\n  created() {\n    this.startLoader();\n    this.$store.dispatch('powerControl/getPowerControl').finally(() => this.endLoader());\n  },\n  validations: {\n    powerCapValue: {\n      between: between(1, 10000),\n      required: requiredIf(function () {\n        return this.isPowerCapFieldEnabled;\n      })\n    }\n  },\n  methods: {\n    submitForm() {\n      this.v$.$touch();\n      if (this.v$.$invalid) return;\n      this.startLoader();\n      this.$store.dispatch('powerControl/setPowerControl', this.powerCapValue).then(message => this.successToast(message)).catch(({\n        message\n      }) => this.errorToast(message)).finally(() => this.endLoader());\n    }\n  }\n};","map":{"version":3,"names":["PageTitle","LoadingBarMixin","loading","VuelidateMixin","useVuelidate","BVToastMixin","requiredIf","between","mapGetters","useI18n","name","components","mixins","beforeRouteLeave","to","from","next","hideLoader","setup","v$","data","$t","t","computed","powerConsumptionValue","isPowerCapFieldEnabled","get","powerCapValue","set","value","$reset","newValue","$store","dispatch","getters","$touch","created","startLoader","finally","endLoader","validations","required","methods","submitForm","$invalid","then","message","successToast","catch","errorToast"],"sources":["/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/src/views/ResourceManagement/Power.vue"],"sourcesContent":["<template>\n  <b-container fluid=\"xl\">\n    <page-title :description=\"$t('pagePower.description')\" />\n\n    <b-row>\n      <b-col sm=\"8\" md=\"6\" xl=\"12\">\n        <dl>\n          <dt>{{ $t('pagePower.powerConsumption') }}</dt>\n          <dd>\n            {{\n              powerConsumptionValue\n                ? `${powerConsumptionValue} W`\n                : $t('global.status.notAvailable')\n            }}\n          </dd>\n        </dl>\n      </b-col>\n    </b-row>\n\n    <b-form @submit.prevent=\"submitForm\">\n      <b-form-group :disabled=\"loading\">\n        <b-row>\n          <b-col sm=\"8\" md=\"6\" xl=\"12\">\n            <b-form-group :label=\"$t('pagePower.powerCapSettingLabel')\">\n              <b-form-checkbox\n                v-model=\"isPowerCapFieldEnabled\"\n                data-test-id=\"power-checkbox-togglePowerCapField\"\n                name=\"power-cap-setting\"\n              >\n                {{ $t('pagePower.powerCapSettingData') }}\n              </b-form-checkbox>\n            </b-form-group>\n          </b-col>\n        </b-row>\n\n        <b-row>\n          <b-col sm=\"8\" md=\"6\" xl=\"3\">\n            <b-form-group\n              id=\"input-group-1\"\n              :label=\"$t('pagePower.powerCapLabel')\"\n              label-for=\"input-1\"\n            >\n              <b-form-text id=\"power-help-text\">\n                {{\n                  $t('pagePower.powerCapLabelTextInfo', {\n                    min: 1,\n                    max: 10000,\n                  })\n                }}\n              </b-form-text>\n\n              <b-form-input\n                id=\"input-1\"\n                v-model.number=\"powerCapValue\"\n                :disabled=\"!isPowerCapFieldEnabled\"\n                data-test-id=\"power-input-powerCapValue\"\n                type=\"number\"\n                aria-describedby=\"power-help-text\"\n                :state=\"getValidationState(v$.powerCapValue)\"\n              ></b-form-input>\n\n              <b-form-invalid-feedback id=\"input-live-feedback\" role=\"alert\">\n                <template v-if=\"v$.powerCapValue.required.$invalid\">\n                  {{ $t('global.form.fieldRequired') }}\n                </template>\n                <template v-else-if=\"v$.powerCapValue.between.$invalid\">\n                  {{ $t('global.form.invalidValue') }}\n                </template>\n              </b-form-invalid-feedback>\n            </b-form-group>\n          </b-col>\n        </b-row>\n\n        <b-button\n          variant=\"primary\"\n          type=\"submit\"\n          data-test-id=\"power-button-savePowerCapValue\"\n        >\n          {{ $t('global.action.save') }}\n        </b-button>\n      </b-form-group>\n    </b-form>\n  </b-container>\n</template>\n\n<script>\nimport PageTitle from '@/components/Global/PageTitle';\nimport LoadingBarMixin, { loading } from '@/components/Mixins/LoadingBarMixin';\nimport VuelidateMixin from '@/components/Mixins/VuelidateMixin.js';\nimport { useVuelidate } from '@vuelidate/core';\n\nimport BVToastMixin from '@/components/Mixins/BVToastMixin';\nimport { requiredIf, between } from '@vuelidate/validators';\nimport { mapGetters } from 'vuex';\nimport { useI18n } from 'vue-i18n';\n\nexport default {\n  name: 'Power',\n  components: { PageTitle },\n  mixins: [VuelidateMixin, BVToastMixin, LoadingBarMixin],\n  beforeRouteLeave(to, from, next) {\n    this.hideLoader();\n    next();\n  },\n  setup() {\n    return {\n      v$: useVuelidate(),\n    };\n  },\n  data() {\n    return {\n      $t: useI18n().t,\n      loading,\n    };\n  },\n  computed: {\n    ...mapGetters({\n      powerConsumptionValue: 'powerControl/powerConsumptionValue',\n    }),\n\n    /**\n      Computed property isPowerCapFieldEnabled is used to enable or disable the input field.\n      The input field is enabled when the powercapValue property is not null.\n   **/\n    isPowerCapFieldEnabled: {\n      get() {\n        return this.powerCapValue !== null;\n      },\n      set(value) {\n        this.v$.$reset();\n        let newValue = null;\n        if (value) {\n          if (this.powerCapValue) {\n            newValue = this.powerCapValue;\n          } else {\n            newValue = '';\n          }\n        }\n        this.$store.dispatch('powerControl/setPowerCapUpdatedValue', newValue);\n      },\n    },\n    powerCapValue: {\n      get() {\n        return this.$store.getters['powerControl/powerCapValue'];\n      },\n      set(value) {\n        this.v$.$touch();\n        this.$store.dispatch('powerControl/setPowerCapUpdatedValue', value);\n      },\n    },\n  },\n  created() {\n    this.startLoader();\n    this.$store\n      .dispatch('powerControl/getPowerControl')\n      .finally(() => this.endLoader());\n  },\n  validations: {\n    powerCapValue: {\n      between: between(1, 10000),\n      required: requiredIf(function () {\n        return this.isPowerCapFieldEnabled;\n      }),\n    },\n  },\n  methods: {\n    submitForm() {\n      this.v$.$touch();\n      if (this.v$.$invalid) return;\n      this.startLoader();\n      this.$store\n        .dispatch('powerControl/setPowerControl', this.powerCapValue)\n        .then((message) => this.successToast(message))\n        .catch(({ message }) => this.errorToast(message))\n        .finally(() => this.endLoader());\n    },\n  },\n};\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}