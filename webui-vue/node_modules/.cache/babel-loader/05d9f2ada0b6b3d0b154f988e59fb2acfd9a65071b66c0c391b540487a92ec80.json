{"ast":null,"code":"import { required } from 'vuelidate/lib/validators';\nimport BVToastMixin from '@/components/Mixins/BVToastMixin';\nimport LoadingBarMixin, { loading } from '@/components/Mixins/LoadingBarMixin';\nimport VuelidateMixin from '@/components/Mixins/VuelidateMixin.js';\nimport { useVuelidate } from '@vuelidate/core';\nimport FormFile from '@/components/Global/FormFile';\nimport ModalUpdateFirmware from './FirmwareModalUpdateFirmware';\nimport { useI18n } from 'vue-i18n';\nimport i18n from '@/i18n';\nexport default {\n  components: {\n    FormFile,\n    ModalUpdateFirmware\n  },\n  mixins: [BVToastMixin, LoadingBarMixin, VuelidateMixin],\n  props: {\n    isPageDisabled: {\n      required: true,\n      type: Boolean,\n      default: false\n    },\n    isServerOff: {\n      required: true,\n      type: Boolean\n    }\n  },\n  setup() {\n    return {\n      v$: useVuelidate()\n    };\n  },\n  data() {\n    return {\n      $t: useI18n().t,\n      loading,\n      file: null,\n      isServerPowerOffRequired: process.env.VUE_APP_SERVER_OFF_REQUIRED === 'true'\n    };\n  },\n  validations: {\n    file: {\n      required\n    }\n  },\n  created() {\n    this.$store.dispatch('firmware/getUpdateServiceSettings');\n  },\n  methods: {\n    updateFirmware() {\n      this.startLoader();\n      const timerId = setTimeout(() => {\n        this.endLoader();\n        this.infoToast(i18n.global.t('pageFirmware.toast.verifyUpdateMessage'), {\n          title: i18n.global.t('pageFirmware.toast.verifyUpdate'),\n          refreshAction: true\n        });\n      }, 360000);\n      this.infoToast(i18n.global.t('pageFirmware.toast.updateStartedMessage'), {\n        title: i18n.global.t('pageFirmware.toast.updateStarted'),\n        timestamp: true\n      });\n      this.dispatchWorkstationUpload(timerId);\n    },\n    dispatchWorkstationUpload(timerId) {\n      this.$store.dispatch('firmware/uploadFirmware', {\n        image: this.file\n      }).catch(({\n        message\n      }) => {\n        this.endLoader();\n        this.errorToast(message);\n        clearTimeout(timerId);\n      });\n    },\n    onSubmitUpload() {\n      this.v$.$touch();\n      if (this.v$.$invalid) return;\n      this.$bvModal.show('modal-update-firmware');\n    },\n    onFileUpload(file) {\n      this.file = file;\n      this.v$.file.$touch();\n    }\n  }\n};","map":{"version":3,"names":["required","BVToastMixin","LoadingBarMixin","loading","VuelidateMixin","useVuelidate","FormFile","ModalUpdateFirmware","useI18n","i18n","components","mixins","props","isPageDisabled","type","Boolean","default","isServerOff","setup","v$","data","$t","t","file","isServerPowerOffRequired","process","env","VUE_APP_SERVER_OFF_REQUIRED","validations","created","$store","dispatch","methods","updateFirmware","startLoader","timerId","setTimeout","endLoader","infoToast","global","title","refreshAction","timestamp","dispatchWorkstationUpload","image","catch","message","errorToast","clearTimeout","onSubmitUpload","$touch","$invalid","$bvModal","show","onFileUpload"],"sources":["/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/src/views/Operations/Firmware/FirmwareFormUpdate.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"form-background p-3\">\n      <b-form @submit.prevent=\"onSubmitUpload\">\n        <!-- Workstation Upload -->\n        <template>\n          <b-form-group\n            :label=\"$t('pageFirmware.form.updateFirmware.imageFile')\"\n            label-for=\"image-file\"\n          >\n            <form-file\n              id=\"image-file\"\n              :disabled=\"isPageDisabled\"\n              :state=\"getValidationState(v$.file)\"\n              aria-describedby=\"image-file-help-block\"\n              @input=\"onFileUpload($event)\"\n            >\n              <template #invalid>\n                <b-form-invalid-feedback role=\"alert\">\n                  {{ $t('global.form.required') }}\n                </b-form-invalid-feedback>\n              </template>\n            </form-file>\n          </b-form-group>\n        </template>\n\n        <b-btn\n          data-test-id=\"firmware-button-startUpdate\"\n          type=\"submit\"\n          variant=\"primary\"\n          :disabled=\"isPageDisabled\"\n        >\n          {{ $t('pageFirmware.form.updateFirmware.startUpdate') }}\n        </b-btn>\n      </b-form>\n    </div>\n\n    <!-- Modals -->\n    <modal-update-firmware @ok=\"updateFirmware\" />\n  </div>\n</template>\n\n<script>\nimport { required } from 'vuelidate/lib/validators';\n\nimport BVToastMixin from '@/components/Mixins/BVToastMixin';\nimport LoadingBarMixin, { loading } from '@/components/Mixins/LoadingBarMixin';\nimport VuelidateMixin from '@/components/Mixins/VuelidateMixin.js';\nimport { useVuelidate } from '@vuelidate/core';\n\nimport FormFile from '@/components/Global/FormFile';\nimport ModalUpdateFirmware from './FirmwareModalUpdateFirmware';\nimport { useI18n } from 'vue-i18n';\nimport i18n from '@/i18n';\n\nexport default {\n  components: { FormFile, ModalUpdateFirmware },\n  mixins: [BVToastMixin, LoadingBarMixin, VuelidateMixin],\n  props: {\n    isPageDisabled: {\n      required: true,\n      type: Boolean,\n      default: false,\n    },\n    isServerOff: {\n      required: true,\n      type: Boolean,\n    },\n  },\n  setup() {\n    return {\n      v$: useVuelidate(),\n    };\n  },\n  data() {\n    return {\n      $t: useI18n().t,\n      loading,\n      file: null,\n      isServerPowerOffRequired:\n        process.env.VUE_APP_SERVER_OFF_REQUIRED === 'true',\n    };\n  },\n  validations: {\n    file: {\n      required,\n    },\n  },\n  created() {\n    this.$store.dispatch('firmware/getUpdateServiceSettings');\n  },\n  methods: {\n    updateFirmware() {\n      this.startLoader();\n      const timerId = setTimeout(() => {\n        this.endLoader();\n        this.infoToast(\n          i18n.global.t('pageFirmware.toast.verifyUpdateMessage'),\n          {\n            title: i18n.global.t('pageFirmware.toast.verifyUpdate'),\n            refreshAction: true,\n          },\n        );\n      }, 360000);\n      this.infoToast(i18n.global.t('pageFirmware.toast.updateStartedMessage'), {\n        title: i18n.global.t('pageFirmware.toast.updateStarted'),\n        timestamp: true,\n      });\n      this.dispatchWorkstationUpload(timerId);\n    },\n    dispatchWorkstationUpload(timerId) {\n      this.$store\n        .dispatch('firmware/uploadFirmware', {\n          image: this.file,\n        })\n        .catch(({ message }) => {\n          this.endLoader();\n          this.errorToast(message);\n          clearTimeout(timerId);\n        });\n    },\n    onSubmitUpload() {\n      this.v$.$touch();\n      if (this.v$.$invalid) return;\n      this.$bvModal.show('modal-update-firmware');\n    },\n    onFileUpload(file) {\n      this.file = file;\n      this.v$.file.$touch();\n    },\n  },\n};\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}