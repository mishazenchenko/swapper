{"ast":null,"code":"import OverviewCard from './OverviewCard';\nimport StatusIcon from '@/components/Global/StatusIcon';\nimport DataFormatterMixin from '@/components/Mixins/DataFormatterMixin';\nimport { useI18n } from 'vue-i18n';\nexport default {\n  name: 'Events',\n  components: {\n    OverviewCard,\n    StatusIcon\n  },\n  mixins: [DataFormatterMixin],\n  data() {\n    return {\n      $t: useI18n().t\n    };\n  },\n  computed: {\n    eventLogData() {\n      return this.$store.getters['eventLog/allEvents'];\n    },\n    criticalEvents() {\n      return this.eventLogData.filter(log => log.severity === 'Critical' && log.filterByStatus === 'Unresolved').map(log => {\n        return log;\n      });\n    },\n    warningEvents() {\n      return this.eventLogData.filter(log => log.severity === 'Warning' && log.filterByStatus === 'Unresolved').map(log => {\n        return log;\n      });\n    }\n  },\n  created() {\n    this.$store.dispatch('eventLog/getEventLogData').finally(() => {\n      this.$root.$emit('overview-events-complete');\n    });\n  },\n  methods: {\n    exportFileNameByDate() {\n      // Create export file name based on date\n      let date = new Date();\n      date = date.toISOString().slice(0, 10) + '_' + date.toString().split(':').join('-').split(' ')[4];\n      let fileName = 'all_event_logs_';\n      return fileName + date;\n    }\n  }\n};","map":{"version":3,"names":["OverviewCard","StatusIcon","DataFormatterMixin","useI18n","name","components","mixins","data","$t","t","computed","eventLogData","$store","getters","criticalEvents","filter","log","severity","filterByStatus","map","warningEvents","created","dispatch","finally","$root","$emit","methods","exportFileNameByDate","date","Date","toISOString","slice","toString","split","join","fileName"],"sources":["/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/src/views/Overview/OverviewEvents.vue"],"sourcesContent":["<template>\n  <overview-card\n    :data=\"eventLogData\"\n    :disabled=\"eventLogData.length === 0\"\n    :export-button=\"true\"\n    :file-name=\"exportFileNameByDate()\"\n    :title=\"$t('pageOverview.eventLogs')\"\n    :to=\"`/logs/event-logs`\"\n  >\n    <b-row class=\"mt-3\">\n      <b-col sm=\"6\">\n        <dl>\n          <dt>{{ $t('pageOverview.criticalEvents') }}</dt>\n          <dd class=\"h3\">\n            {{ dataFormatter(criticalEvents.length) }}\n            <status-icon status=\"danger\" />\n          </dd>\n        </dl>\n      </b-col>\n      <b-col sm=\"6\">\n        <dl>\n          <dt>{{ $t('pageOverview.warningEvents') }}</dt>\n          <dd class=\"h3\">\n            {{ dataFormatter(warningEvents.length) }}\n            <status-icon status=\"warning\" />\n          </dd>\n        </dl>\n      </b-col>\n    </b-row>\n  </overview-card>\n</template>\n\n<script>\nimport OverviewCard from './OverviewCard';\nimport StatusIcon from '@/components/Global/StatusIcon';\nimport DataFormatterMixin from '@/components/Mixins/DataFormatterMixin';\nimport { useI18n } from 'vue-i18n';\n\nexport default {\n  name: 'Events',\n  components: { OverviewCard, StatusIcon },\n  mixins: [DataFormatterMixin],\n  data() {\n    return {\n      $t: useI18n().t,\n    };\n  },\n  computed: {\n    eventLogData() {\n      return this.$store.getters['eventLog/allEvents'];\n    },\n    criticalEvents() {\n      return this.eventLogData\n        .filter(\n          (log) =>\n            log.severity === 'Critical' && log.filterByStatus === 'Unresolved',\n        )\n        .map((log) => {\n          return log;\n        });\n    },\n    warningEvents() {\n      return this.eventLogData\n        .filter(\n          (log) =>\n            log.severity === 'Warning' && log.filterByStatus === 'Unresolved',\n        )\n        .map((log) => {\n          return log;\n        });\n    },\n  },\n  created() {\n    this.$store.dispatch('eventLog/getEventLogData').finally(() => {\n      this.$root.$emit('overview-events-complete');\n    });\n  },\n  methods: {\n    exportFileNameByDate() {\n      // Create export file name based on date\n      let date = new Date();\n      date =\n        date.toISOString().slice(0, 10) +\n        '_' +\n        date.toString().split(':').join('-').split(' ')[4];\n      let fileName = 'all_event_logs_';\n      return fileName + date;\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import '@/assets/styles/bmc/helpers/_index.scss';\n@import '@/assets/styles/bootstrap/_helpers.scss';\n\n.status-icon {\n  vertical-align: text-top;\n}\n</style>\n"],"mappings":"AAiCA,OAAOA,YAAW,MAAO,gBAAgB;AACzC,OAAOC,UAAS,MAAO,gCAAgC;AACvD,OAAOC,kBAAiB,MAAO,wCAAwC;AACvE,SAASC,OAAM,QAAS,UAAU;AAElC,eAAe;EACbC,IAAI,EAAE,QAAQ;EACdC,UAAU,EAAE;IAAEL,YAAY;IAAEC;EAAW,CAAC;EACxCK,MAAM,EAAE,CAACJ,kBAAkB,CAAC;EAC5BK,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,EAAE,EAAEL,OAAO,CAAC,CAAC,CAACM;IAChB,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,YAAYA,CAAA,EAAG;MACb,OAAO,IAAI,CAACC,MAAM,CAACC,OAAO,CAAC,oBAAoB,CAAC;IAClD,CAAC;IACDC,cAAcA,CAAA,EAAG;MACf,OAAO,IAAI,CAACH,YAAW,CACpBI,MAAM,CACJC,GAAG,IACFA,GAAG,CAACC,QAAO,KAAM,UAAS,IAAKD,GAAG,CAACE,cAAa,KAAM,YAC1D,EACCC,GAAG,CAAEH,GAAG,IAAK;QACZ,OAAOA,GAAG;MACZ,CAAC,CAAC;IACN,CAAC;IACDI,aAAaA,CAAA,EAAG;MACd,OAAO,IAAI,CAACT,YAAW,CACpBI,MAAM,CACJC,GAAG,IACFA,GAAG,CAACC,QAAO,KAAM,SAAQ,IAAKD,GAAG,CAACE,cAAa,KAAM,YACzD,EACCC,GAAG,CAAEH,GAAG,IAAK;QACZ,OAAOA,GAAG;MACZ,CAAC,CAAC;IACN;EACF,CAAC;EACDK,OAAOA,CAAA,EAAG;IACR,IAAI,CAACT,MAAM,CAACU,QAAQ,CAAC,0BAA0B,CAAC,CAACC,OAAO,CAAC,MAAM;MAC7D,IAAI,CAACC,KAAK,CAACC,KAAK,CAAC,0BAA0B,CAAC;IAC9C,CAAC,CAAC;EACJ,CAAC;EACDC,OAAO,EAAE;IACPC,oBAAoBA,CAAA,EAAG;MACrB;MACA,IAAIC,IAAG,GAAI,IAAIC,IAAI,CAAC,CAAC;MACrBD,IAAG,GACDA,IAAI,CAACE,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,EAAE,IAC9B,GAAE,GACFH,IAAI,CAACI,QAAQ,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC,CAACD,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MACpD,IAAIE,QAAO,GAAI,iBAAiB;MAChC,OAAOA,QAAO,GAAIP,IAAI;IACxB;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}