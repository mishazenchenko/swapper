{"ast":null,"code":"import PageTitle from '@/components/Global/PageTitle';\nimport Search from '@/components/Global/Search';\nimport StatusIcon from '@/components/Global/StatusIcon';\nimport TableFilter from '@/components/Global/TableFilter';\nimport TableToolbar from '@/components/Global/TableToolbar';\nimport TableToolbarExport from '@/components/Global/TableToolbarExport';\nimport TableCellCount from '@/components/Global/TableCellCount';\nimport BVTableSelectableMixin, { selectedRows, tableHeaderCheckboxModel, tableHeaderCheckboxIndeterminate } from '@/components/Mixins/BVTableSelectableMixin';\nimport LoadingBarMixin from '@/components/Mixins/LoadingBarMixin';\nimport TableFilterMixin from '@/components/Mixins/TableFilterMixin';\nimport DataFormatterMixin from '@/components/Mixins/DataFormatterMixin';\nimport TableSortMixin from '@/components/Mixins/TableSortMixin';\nimport SearchFilterMixin, { searchFilter } from '@/components/Mixins/SearchFilterMixin';\nimport { useI18n } from 'vue-i18n';\nimport i18n from '@/i18n';\nexport default {\n  name: 'Sensors',\n  components: {\n    PageTitle,\n    Search,\n    StatusIcon,\n    TableCellCount,\n    TableFilter,\n    TableToolbar,\n    TableToolbarExport\n  },\n  mixins: [TableFilterMixin, BVTableSelectableMixin, LoadingBarMixin, DataFormatterMixin, TableSortMixin, SearchFilterMixin],\n  beforeRouteLeave(to, from, next) {\n    this.hideLoader();\n    next();\n  },\n  data() {\n    return {\n      $t: useI18n().t,\n      isBusy: true,\n      fields: [{\n        key: 'checkbox',\n        sortable: false,\n        label: ''\n      }, {\n        key: 'name',\n        sortable: true,\n        label: i18n.global.t('pageSensors.table.name')\n      }, {\n        key: 'status',\n        sortable: true,\n        label: i18n.global.t('pageSensors.table.status'),\n        tdClass: 'text-nowrap'\n      }, {\n        key: 'lowerCritical',\n        formatter: this.dataFormatter,\n        label: i18n.global.t('pageSensors.table.lowerCritical')\n      }, {\n        key: 'lowerCaution',\n        formatter: this.dataFormatter,\n        label: i18n.global.t('pageSensors.table.lowerWarning')\n      }, {\n        key: 'currentValue',\n        formatter: this.dataFormatter,\n        label: i18n.global.t('pageSensors.table.currentValue')\n      }, {\n        key: 'upperCaution',\n        formatter: this.dataFormatter,\n        label: i18n.global.t('pageSensors.table.upperWarning')\n      }, {\n        key: 'upperCritical',\n        formatter: this.dataFormatter,\n        label: i18n.global.t('pageSensors.table.upperCritical')\n      }],\n      tableFilters: [{\n        key: 'status',\n        label: i18n.global.t('pageSensors.table.status'),\n        values: [i18n.global.t('global.action.ok'), i18n.global.t('global.action.warning'), i18n.global.t('global.action.critical')]\n      }],\n      activeFilters: [],\n      searchFilter: searchFilter,\n      searchTotalFilteredRows: 0,\n      selectedRows: selectedRows,\n      tableHeaderCheckboxModel: tableHeaderCheckboxModel,\n      tableHeaderCheckboxIndeterminate: tableHeaderCheckboxIndeterminate\n    };\n  },\n  computed: {\n    allSensors() {\n      return this.$store.getters['sensors/sensors'];\n    },\n    filteredRows() {\n      return this.searchFilter ? this.searchTotalFilteredRows : this.filteredSensors.length;\n    },\n    filteredSensors() {\n      return this.getFilteredTableData(this.allSensors, this.activeFilters);\n    }\n  },\n  created() {\n    this.startLoader();\n    this.$store.dispatch('sensors/getAllSensors').finally(() => {\n      this.endLoader();\n      this.isBusy = false;\n    });\n  },\n  methods: {\n    sortCompare(a, b, key) {\n      if (key === 'status') {\n        return this.sortStatus(a, b, key);\n      }\n    },\n    onFilterChange({\n      activeFilters\n    }) {\n      this.activeFilters = activeFilters;\n    },\n    onFiltered(filteredItems) {\n      this.searchTotalFilteredRows = filteredItems.length;\n    },\n    onChangeSearchInput(event) {\n      this.searchFilter = event;\n    },\n    exportFileNameByDate() {\n      // Create export file name based on date\n      let date = new Date();\n      date = date.toISOString().slice(0, 10) + '_' + date.toString().split(':').join('-').split(' ')[4];\n      return i18n.global.t('pageSensors.exportFilePrefix') + date;\n    }\n  }\n};","map":{"version":3,"names":["PageTitle","Search","StatusIcon","TableFilter","TableToolbar","TableToolbarExport","TableCellCount","BVTableSelectableMixin","selectedRows","tableHeaderCheckboxModel","tableHeaderCheckboxIndeterminate","LoadingBarMixin","TableFilterMixin","DataFormatterMixin","TableSortMixin","SearchFilterMixin","searchFilter","useI18n","i18n","name","components","mixins","beforeRouteLeave","to","from","next","hideLoader","data","$t","t","isBusy","fields","key","sortable","label","global","tdClass","formatter","dataFormatter","tableFilters","values","activeFilters","searchTotalFilteredRows","computed","allSensors","$store","getters","filteredRows","filteredSensors","length","getFilteredTableData","created","startLoader","dispatch","finally","endLoader","methods","sortCompare","a","b","sortStatus","onFilterChange","onFiltered","filteredItems","onChangeSearchInput","event","exportFileNameByDate","date","Date","toISOString","slice","toString","split","join"],"sources":["/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/src/views/HardwareStatus/Sensors/Sensors.vue"],"sourcesContent":["<template>\n  <b-container fluid=\"xl\">\n    <page-title />\n    <b-row class=\"align-items-end\">\n      <b-col sm=\"6\" md=\"5\" xl=\"4\">\n        <search\n          :placeholder=\"$t('pageSensors.searchForSensors')\"\n          data-test-id=\"sensors-input-searchForSensors\"\n          @change-search=\"onChangeSearchInput\"\n          @clear-search=\"onClearSearchInput\"\n        />\n      </b-col>\n      <b-col sm=\"3\" md=\"3\" xl=\"2\">\n        <table-cell-count\n          :filtered-items-count=\"filteredRows\"\n          :total-number-of-cells=\"allSensors.length\"\n        ></table-cell-count>\n      </b-col>\n      <b-col sm=\"3\" md=\"4\" xl=\"6\" class=\"text-right\">\n        <table-filter :filters=\"tableFilters\" @filter-change=\"onFilterChange\" />\n      </b-col>\n    </b-row>\n    <b-row>\n      <b-col xl=\"12\">\n        <table-toolbar\n          ref=\"toolbar\"\n          :selected-items-count=\"selectedRows.length\"\n          @clear-selected=\"clearSelectedRows($refs.table)\"\n        >\n          <template #toolbar-buttons>\n            <table-toolbar-export\n              :data=\"selectedRows\"\n              :file-name=\"exportFileNameByDate()\"\n            />\n          </template>\n        </table-toolbar>\n        <b-table\n          ref=\"table\"\n          responsive=\"md\"\n          selectable\n          no-select-on-click\n          sort-icon-left\n          hover\n          no-sort-reset\n          sticky-header=\"75vh\"\n          sort-by=\"status\"\n          show-empty\n          :no-border-collapse=\"true\"\n          :items=\"filteredSensors\"\n          :fields=\"fields\"\n          :sort-desc=\"true\"\n          :sort-compare=\"sortCompare\"\n          :filter=\"searchFilter\"\n          :empty-text=\"$t('global.table.emptyMessage')\"\n          :empty-filtered-text=\"$t('global.table.emptySearchMessage')\"\n          :busy=\"isBusy\"\n          @filtered=\"onFiltered\"\n          @row-selected=\"onRowSelected($event, filteredSensors.length)\"\n        >\n          <!-- Checkbox column -->\n          <template #head(checkbox)>\n            <b-form-checkbox\n              v-model=\"tableHeaderCheckboxModel\"\n              :indeterminate=\"tableHeaderCheckboxIndeterminate\"\n              @change=\"onChangeHeaderCheckbox($refs.table)\"\n            >\n              <span class=\"sr-only\">{{ $t('global.table.selectAll') }}</span>\n            </b-form-checkbox>\n          </template>\n          <template #cell(checkbox)=\"row\">\n            <b-form-checkbox\n              v-model=\"row.rowSelected\"\n              @change=\"toggleSelectRow($refs.table, row.index)\"\n            >\n              <span class=\"sr-only\">{{ $t('global.table.selectItem') }}</span>\n            </b-form-checkbox>\n          </template>\n\n          <template #cell(status)=\"{ value }\">\n            <status-icon :status=\"statusIcon(value)\" /> {{ value }}\n          </template>\n          <template #cell(currentValue)=\"data\">\n            {{ data.value }} {{ data.item.units }}\n          </template>\n          <template #cell(lowerCaution)=\"data\">\n            {{ data.value }} {{ data.item.units }}\n          </template>\n          <template #cell(upperCaution)=\"data\">\n            {{ data.value }} {{ data.item.units }}\n          </template>\n          <template #cell(lowerCritical)=\"data\">\n            {{ data.value }} {{ data.item.units }}\n          </template>\n          <template #cell(upperCritical)=\"data\">\n            {{ data.value }} {{ data.item.units }}\n          </template>\n        </b-table>\n      </b-col>\n    </b-row>\n  </b-container>\n</template>\n\n<script>\nimport PageTitle from '@/components/Global/PageTitle';\nimport Search from '@/components/Global/Search';\nimport StatusIcon from '@/components/Global/StatusIcon';\nimport TableFilter from '@/components/Global/TableFilter';\nimport TableToolbar from '@/components/Global/TableToolbar';\nimport TableToolbarExport from '@/components/Global/TableToolbarExport';\nimport TableCellCount from '@/components/Global/TableCellCount';\n\nimport BVTableSelectableMixin, {\n  selectedRows,\n  tableHeaderCheckboxModel,\n  tableHeaderCheckboxIndeterminate,\n} from '@/components/Mixins/BVTableSelectableMixin';\nimport LoadingBarMixin from '@/components/Mixins/LoadingBarMixin';\nimport TableFilterMixin from '@/components/Mixins/TableFilterMixin';\nimport DataFormatterMixin from '@/components/Mixins/DataFormatterMixin';\nimport TableSortMixin from '@/components/Mixins/TableSortMixin';\nimport SearchFilterMixin, {\n  searchFilter,\n} from '@/components/Mixins/SearchFilterMixin';\nimport { useI18n } from 'vue-i18n';\nimport i18n from '@/i18n';\n\nexport default {\n  name: 'Sensors',\n  components: {\n    PageTitle,\n    Search,\n    StatusIcon,\n    TableCellCount,\n    TableFilter,\n    TableToolbar,\n    TableToolbarExport,\n  },\n  mixins: [\n    TableFilterMixin,\n    BVTableSelectableMixin,\n    LoadingBarMixin,\n    DataFormatterMixin,\n    TableSortMixin,\n    SearchFilterMixin,\n  ],\n  beforeRouteLeave(to, from, next) {\n    this.hideLoader();\n    next();\n  },\n  data() {\n    return {\n      $t: useI18n().t,\n      isBusy: true,\n      fields: [\n        {\n          key: 'checkbox',\n          sortable: false,\n          label: '',\n        },\n        {\n          key: 'name',\n          sortable: true,\n          label: i18n.global.t('pageSensors.table.name'),\n        },\n        {\n          key: 'status',\n          sortable: true,\n          label: i18n.global.t('pageSensors.table.status'),\n          tdClass: 'text-nowrap',\n        },\n        {\n          key: 'lowerCritical',\n          formatter: this.dataFormatter,\n          label: i18n.global.t('pageSensors.table.lowerCritical'),\n        },\n        {\n          key: 'lowerCaution',\n          formatter: this.dataFormatter,\n          label: i18n.global.t('pageSensors.table.lowerWarning'),\n        },\n\n        {\n          key: 'currentValue',\n          formatter: this.dataFormatter,\n          label: i18n.global.t('pageSensors.table.currentValue'),\n        },\n        {\n          key: 'upperCaution',\n          formatter: this.dataFormatter,\n          label: i18n.global.t('pageSensors.table.upperWarning'),\n        },\n        {\n          key: 'upperCritical',\n          formatter: this.dataFormatter,\n          label: i18n.global.t('pageSensors.table.upperCritical'),\n        },\n      ],\n      tableFilters: [\n        {\n          key: 'status',\n          label: i18n.global.t('pageSensors.table.status'),\n          values: [\n            i18n.global.t('global.action.ok'),\n            i18n.global.t('global.action.warning'),\n            i18n.global.t('global.action.critical'),\n          ],\n        },\n      ],\n      activeFilters: [],\n      searchFilter: searchFilter,\n      searchTotalFilteredRows: 0,\n      selectedRows: selectedRows,\n      tableHeaderCheckboxModel: tableHeaderCheckboxModel,\n      tableHeaderCheckboxIndeterminate: tableHeaderCheckboxIndeterminate,\n    };\n  },\n  computed: {\n    allSensors() {\n      return this.$store.getters['sensors/sensors'];\n    },\n    filteredRows() {\n      return this.searchFilter\n        ? this.searchTotalFilteredRows\n        : this.filteredSensors.length;\n    },\n    filteredSensors() {\n      return this.getFilteredTableData(this.allSensors, this.activeFilters);\n    },\n  },\n  created() {\n    this.startLoader();\n    this.$store.dispatch('sensors/getAllSensors').finally(() => {\n      this.endLoader();\n      this.isBusy = false;\n    });\n  },\n  methods: {\n    sortCompare(a, b, key) {\n      if (key === 'status') {\n        return this.sortStatus(a, b, key);\n      }\n    },\n    onFilterChange({ activeFilters }) {\n      this.activeFilters = activeFilters;\n    },\n    onFiltered(filteredItems) {\n      this.searchTotalFilteredRows = filteredItems.length;\n    },\n    onChangeSearchInput(event) {\n      this.searchFilter = event;\n    },\n    exportFileNameByDate() {\n      // Create export file name based on date\n      let date = new Date();\n      date =\n        date.toISOString().slice(0, 10) +\n        '_' +\n        date.toString().split(':').join('-').split(' ')[4];\n      return i18n.global.t('pageSensors.exportFilePrefix') + date;\n    },\n  },\n};\n</script>\n"],"mappings":"AAuGA,OAAOA,SAAQ,MAAO,+BAA+B;AACrD,OAAOC,MAAK,MAAO,4BAA4B;AAC/C,OAAOC,UAAS,MAAO,gCAAgC;AACvD,OAAOC,WAAU,MAAO,iCAAiC;AACzD,OAAOC,YAAW,MAAO,kCAAkC;AAC3D,OAAOC,kBAAiB,MAAO,wCAAwC;AACvE,OAAOC,cAAa,MAAO,oCAAoC;AAE/D,OAAOC,sBAAsB,IAC3BC,YAAY,EACZC,wBAAwB,EACxBC,gCAAgC,QAC3B,4CAA4C;AACnD,OAAOC,eAAc,MAAO,qCAAqC;AACjE,OAAOC,gBAAe,MAAO,sCAAsC;AACnE,OAAOC,kBAAiB,MAAO,wCAAwC;AACvE,OAAOC,cAAa,MAAO,oCAAoC;AAC/D,OAAOC,iBAAiB,IACtBC,YAAY,QACP,uCAAuC;AAC9C,SAASC,OAAM,QAAS,UAAU;AAClC,OAAOC,IAAG,MAAO,QAAQ;AAEzB,eAAe;EACbC,IAAI,EAAE,SAAS;EACfC,UAAU,EAAE;IACVpB,SAAS;IACTC,MAAM;IACNC,UAAU;IACVI,cAAc;IACdH,WAAW;IACXC,YAAY;IACZC;EACF,CAAC;EACDgB,MAAM,EAAE,CACNT,gBAAgB,EAChBL,sBAAsB,EACtBI,eAAe,EACfE,kBAAkB,EAClBC,cAAc,EACdC,iBAAiB,CAClB;EACDO,gBAAgBA,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,EAAE;IAC/B,IAAI,CAACC,UAAU,CAAC,CAAC;IACjBD,IAAI,CAAC,CAAC;EACR,CAAC;EACDE,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,EAAE,EAAEX,OAAO,CAAC,CAAC,CAACY,CAAC;MACfC,MAAM,EAAE,IAAI;MACZC,MAAM,EAAE,CACN;QACEC,GAAG,EAAE,UAAU;QACfC,QAAQ,EAAE,KAAK;QACfC,KAAK,EAAE;MACT,CAAC,EACD;QACEF,GAAG,EAAE,MAAM;QACXC,QAAQ,EAAE,IAAI;QACdC,KAAK,EAAEhB,IAAI,CAACiB,MAAM,CAACN,CAAC,CAAC,wBAAwB;MAC/C,CAAC,EACD;QACEG,GAAG,EAAE,QAAQ;QACbC,QAAQ,EAAE,IAAI;QACdC,KAAK,EAAEhB,IAAI,CAACiB,MAAM,CAACN,CAAC,CAAC,0BAA0B,CAAC;QAChDO,OAAO,EAAE;MACX,CAAC,EACD;QACEJ,GAAG,EAAE,eAAe;QACpBK,SAAS,EAAE,IAAI,CAACC,aAAa;QAC7BJ,KAAK,EAAEhB,IAAI,CAACiB,MAAM,CAACN,CAAC,CAAC,iCAAiC;MACxD,CAAC,EACD;QACEG,GAAG,EAAE,cAAc;QACnBK,SAAS,EAAE,IAAI,CAACC,aAAa;QAC7BJ,KAAK,EAAEhB,IAAI,CAACiB,MAAM,CAACN,CAAC,CAAC,gCAAgC;MACvD,CAAC,EAED;QACEG,GAAG,EAAE,cAAc;QACnBK,SAAS,EAAE,IAAI,CAACC,aAAa;QAC7BJ,KAAK,EAAEhB,IAAI,CAACiB,MAAM,CAACN,CAAC,CAAC,gCAAgC;MACvD,CAAC,EACD;QACEG,GAAG,EAAE,cAAc;QACnBK,SAAS,EAAE,IAAI,CAACC,aAAa;QAC7BJ,KAAK,EAAEhB,IAAI,CAACiB,MAAM,CAACN,CAAC,CAAC,gCAAgC;MACvD,CAAC,EACD;QACEG,GAAG,EAAE,eAAe;QACpBK,SAAS,EAAE,IAAI,CAACC,aAAa;QAC7BJ,KAAK,EAAEhB,IAAI,CAACiB,MAAM,CAACN,CAAC,CAAC,iCAAiC;MACxD,CAAC,CACF;MACDU,YAAY,EAAE,CACZ;QACEP,GAAG,EAAE,QAAQ;QACbE,KAAK,EAAEhB,IAAI,CAACiB,MAAM,CAACN,CAAC,CAAC,0BAA0B,CAAC;QAChDW,MAAM,EAAE,CACNtB,IAAI,CAACiB,MAAM,CAACN,CAAC,CAAC,kBAAkB,CAAC,EACjCX,IAAI,CAACiB,MAAM,CAACN,CAAC,CAAC,uBAAuB,CAAC,EACtCX,IAAI,CAACiB,MAAM,CAACN,CAAC,CAAC,wBAAwB,CAAC;MAE3C,CAAC,CACF;MACDY,aAAa,EAAE,EAAE;MACjBzB,YAAY,EAAEA,YAAY;MAC1B0B,uBAAuB,EAAE,CAAC;MAC1BlC,YAAY,EAAEA,YAAY;MAC1BC,wBAAwB,EAAEA,wBAAwB;MAClDC,gCAAgC,EAAEA;IACpC,CAAC;EACH,CAAC;EACDiC,QAAQ,EAAE;IACRC,UAAUA,CAAA,EAAG;MACX,OAAO,IAAI,CAACC,MAAM,CAACC,OAAO,CAAC,iBAAiB,CAAC;IAC/C,CAAC;IACDC,YAAYA,CAAA,EAAG;MACb,OAAO,IAAI,CAAC/B,YAAW,GACnB,IAAI,CAAC0B,uBAAsB,GAC3B,IAAI,CAACM,eAAe,CAACC,MAAM;IACjC,CAAC;IACDD,eAAeA,CAAA,EAAG;MAChB,OAAO,IAAI,CAACE,oBAAoB,CAAC,IAAI,CAACN,UAAU,EAAE,IAAI,CAACH,aAAa,CAAC;IACvE;EACF,CAAC;EACDU,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,WAAW,CAAC,CAAC;IAClB,IAAI,CAACP,MAAM,CAACQ,QAAQ,CAAC,uBAAuB,CAAC,CAACC,OAAO,CAAC,MAAM;MAC1D,IAAI,CAACC,SAAS,CAAC,CAAC;MAChB,IAAI,CAACzB,MAAK,GAAI,KAAK;IACrB,CAAC,CAAC;EACJ,CAAC;EACD0B,OAAO,EAAE;IACPC,WAAWA,CAACC,CAAC,EAAEC,CAAC,EAAE3B,GAAG,EAAE;MACrB,IAAIA,GAAE,KAAM,QAAQ,EAAE;QACpB,OAAO,IAAI,CAAC4B,UAAU,CAACF,CAAC,EAAEC,CAAC,EAAE3B,GAAG,CAAC;MACnC;IACF,CAAC;IACD6B,cAAcA,CAAC;MAAEpB;IAAc,CAAC,EAAE;MAChC,IAAI,CAACA,aAAY,GAAIA,aAAa;IACpC,CAAC;IACDqB,UAAUA,CAACC,aAAa,EAAE;MACxB,IAAI,CAACrB,uBAAsB,GAAIqB,aAAa,CAACd,MAAM;IACrD,CAAC;IACDe,mBAAmBA,CAACC,KAAK,EAAE;MACzB,IAAI,CAACjD,YAAW,GAAIiD,KAAK;IAC3B,CAAC;IACDC,oBAAoBA,CAAA,EAAG;MACrB;MACA,IAAIC,IAAG,GAAI,IAAIC,IAAI,CAAC,CAAC;MACrBD,IAAG,GACDA,IAAI,CAACE,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,EAAE,IAC9B,GAAE,GACFH,IAAI,CAACI,QAAQ,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC,CAACD,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MACpD,OAAOtD,IAAI,CAACiB,MAAM,CAACN,CAAC,CAAC,8BAA8B,IAAIsC,IAAI;IAC7D;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}