{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, Transition as _Transition } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_b_progress_bar = _resolveComponent(\"b-progress-bar\");\n  const _component_b_progress = _resolveComponent(\"b-progress\");\n  return _openBlock(), _createBlock(_Transition, {\n    name: \"fade\"\n  }, {\n    default: _withCtx(() => [!$data.isLoadingComplete ? (_openBlock(), _createBlock(_component_b_progress, {\n      key: 0\n    }, {\n      default: _withCtx(() => [_createVNode(_component_b_progress_bar, {\n        striped: \"\",\n        animated: \"\",\n        value: $data.loadingIndicatorValue,\n        \"aria-label\": $data.$t('global.ariaLabel.progressBar')\n      }, null, 8 /* PROPS */, [\"value\", \"aria-label\"])], undefined, true),\n      _: 1 /* STABLE */\n    })) : _createCommentVNode(\"v-if\", true)], undefined, true),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createBlock","_Transition","name","default","_withCtx","$data","isLoadingComplete","_component_b_progress","key","_createVNode","_component_b_progress_bar","striped","animated","value","loadingIndicatorValue","$t","_","_createCommentVNode"],"sources":["/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/src/components/Global/LoadingBar.vue"],"sourcesContent":["<template>\n  <transition name=\"fade\">\n    <b-progress v-if=\"!isLoadingComplete\">\n      <b-progress-bar\n        striped\n        animated\n        :value=\"loadingIndicatorValue\"\n        :aria-label=\"$t('global.ariaLabel.progressBar')\"\n      />\n    </b-progress>\n  </transition>\n</template>\n\n<script>\nimport { useI18n } from 'vue-i18n';\nexport default {\n  data() {\n    return {\n      $t: useI18n().t,\n      loadingIndicatorValue: 0,\n      isLoadingComplete: false,\n      loadingIntervalId: null,\n      timeoutId: null,\n    };\n  },\n  created() {\n    this.$root.$on('loader-start', () => {\n      this.startLoadingInterval();\n    });\n    this.$root.$on('loader-end', () => {\n      this.endLoadingInterval();\n    });\n    this.$root.$on('loader-hide', () => {\n      this.hideLoadingBar();\n    });\n  },\n  methods: {\n    startLoadingInterval() {\n      this.clearLoadingInterval();\n      this.clearTimeout();\n      this.loadingIndicatorValue = 0;\n      this.isLoadingComplete = false;\n      this.loadingIntervalId = setInterval(() => {\n        this.loadingIndicatorValue += 1;\n        if (this.loadingIndicatorValue > 100) this.clearLoadingInterval();\n      }, 100);\n    },\n    endLoadingInterval() {\n      this.clearLoadingInterval();\n      this.clearTimeout();\n      this.loadingIndicatorValue = 100;\n      this.timeoutId = setTimeout(() => {\n        // Let animation complete before hiding\n        // the loading bar\n        this.isLoadingComplete = true;\n      }, 1000);\n    },\n    hideLoadingBar() {\n      this.clearLoadingInterval();\n      this.clearTimeout();\n      this.loadingIndicatorValue = 0;\n      this.isLoadingComplete = true;\n    },\n    clearLoadingInterval() {\n      if (this.loadingIntervalId) clearInterval(this.loadingIntervalId);\n      this.loadingIntervalId = null;\n    },\n    clearTimeout() {\n      if (this.timeoutId) clearTimeout(this.timeoutId);\n      this.timeoutId = null;\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import '@/assets/styles/bmc/helpers/_index.scss';\n@import '@/assets/styles/bootstrap/_helpers.scss';\n\n.progress {\n  position: absolute;\n  left: 0;\n  right: 0;\n  bottom: -0.4rem;\n  opacity: 1;\n  transition: opacity $duration--moderate-01 $standard-easing--productive;\n  height: 0.4rem;\n\n  &.fade-enter, // Remove this vue2 based only class when switching to vue3\n  &.fade-enter-from, // This is vue3 based only class modified from 'fade-enter'\n  &.fade-leave-to {\n    opacity: 0;\n  }\n}\n.progress-bar {\n  background-color: $loading-color;\n}\n</style>\n"],"mappings":";;;;uBACEA,YAAA,CASaC,WAAA;IATDC,IAAI,EAAC;EAAM;IADzBC,OAAA,EAAAC,QAAA,CAEI,MAOa,C,CAPMC,KAAA,CAAAC,iBAAiB,I,cAApCN,YAAA,CAOaO,qBAAA;MATjBC,GAAA;IAAA;MAAAL,OAAA,EAAAC,QAAA,CAGM,MAKE,CALFK,YAAA,CAKEC,yBAAA;QAJAC,OAAO,EAAP,EAAO;QACPC,QAAQ,EAAR,EAAQ;QACPC,KAAK,EAAER,KAAA,CAAAS,qBAAqB;QAC5B,YAAU,EAAET,KAAA,CAAAU,EAAE;;MAPvBC,CAAA;UAAAC,mBAAA,e;IAAAD,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}