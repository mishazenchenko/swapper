{"ast":null,"code":"import { toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, Fragment as _Fragment, withModifiers as _withModifiers, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-3f042765\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"change-password-container\"\n};\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = {\n  key: 1\n};\nconst _hoisted_4 = {\n  class: \"change-password__form-container\"\n};\nconst _hoisted_5 = {\n  class: \"text-right\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_alert = _resolveComponent(\"alert\");\n  const _component_b_form_input = _resolveComponent(\"b-form-input\");\n  const _component_b_form_invalid_feedback = _resolveComponent(\"b-form-invalid-feedback\");\n  const _component_input_password_toggle = _resolveComponent(\"input-password-toggle\");\n  const _component_b_form_group = _resolveComponent(\"b-form-group\");\n  const _component_b_button = _resolveComponent(\"b-button\");\n  const _component_b_form = _resolveComponent(\"b-form\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_alert, {\n    variant: \"danger\",\n    class: \"mb-4\"\n  }, {\n    default: _withCtx(() => [$data.changePasswordError ? (_openBlock(), _createElementBlock(\"p\", _hoisted_2, _toDisplayString($data.$t('pageChangePassword.changePasswordError')), 1 /* TEXT */)) : (_openBlock(), _createElementBlock(\"p\", _hoisted_3, _toDisplayString($data.$t('pageChangePassword.changePasswordAlertMessage')), 1 /* TEXT */))], undefined, true),\n    _: 1 /* STABLE */\n  }), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"dl\", null, [_createElementVNode(\"dt\", null, _toDisplayString($data.$t('pageChangePassword.username')), 1 /* TEXT */), _createElementVNode(\"dd\", null, _toDisplayString($data.username), 1 /* TEXT */)]), _createVNode(_component_b_form, {\n    novalidate: \"\",\n    onSubmit: _withModifiers($options.changePassword, [\"prevent\"])\n  }, {\n    default: _withCtx(() => [_createVNode(_component_b_form_group, {\n      \"label-for\": \"password\",\n      label: $data.$t('pageChangePassword.newPassword')\n    }, {\n      default: _withCtx(() => [_createVNode(_component_input_password_toggle, null, {\n        default: _withCtx(() => [_createVNode(_component_b_form_input, {\n          id: \"password\",\n          modelValue: $data.form.password,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.form.password = $event),\n          autofocus: \"autofocus\",\n          type: \"password\",\n          state: _ctx.getValidationState($setup.v$.form.password),\n          class: \"form-control-with-button\",\n          onChange: _cache[1] || (_cache[1] = $event => $setup.v$.form.password.$touch())\n        }, null, 8 /* PROPS */, [\"modelValue\", \"state\"]), _createVNode(_component_b_form_invalid_feedback, {\n          role: \"alert\"\n        }, {\n          default: _withCtx(() => [$setup.v$.form.password.required.$invalid ? (_openBlock(), _createElementBlock(_Fragment, {\n            key: 0\n          }, [_createTextVNode(_toDisplayString($data.$t('global.form.fieldRequired')), 1 /* TEXT */)], 64 /* STABLE_FRAGMENT */)) : _createCommentVNode(\"v-if\", true)], undefined, true),\n          _: 1 /* STABLE */\n        })], undefined, true),\n        _: 1 /* STABLE */\n      })], undefined, true),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"label\"]), _createVNode(_component_b_form_group, {\n      \"label-for\": \"password-confirm\",\n      label: $data.$t('pageChangePassword.confirmNewPassword')\n    }, {\n      default: _withCtx(() => [_createVNode(_component_input_password_toggle, null, {\n        default: _withCtx(() => [_createVNode(_component_b_form_input, {\n          id: \"password-confirm\",\n          modelValue: $data.form.passwordConfirm,\n          \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.form.passwordConfirm = $event),\n          type: \"password\",\n          state: _ctx.getValidationState($setup.v$.form.passwordConfirm),\n          class: \"form-control-with-button\",\n          onChange: _cache[3] || (_cache[3] = $event => $setup.v$.form.passwordConfirm.$touch())\n        }, null, 8 /* PROPS */, [\"modelValue\", \"state\"]), _createVNode(_component_b_form_invalid_feedback, {\n          role: \"alert\"\n        }, {\n          default: _withCtx(() => [$setup.v$.form.passwordConfirm.required.$invalid ? (_openBlock(), _createElementBlock(_Fragment, {\n            key: 0\n          }, [_createTextVNode(_toDisplayString($data.$t('global.form.fieldRequired')), 1 /* TEXT */)], 64 /* STABLE_FRAGMENT */)) : $setup.v$.form.passwordConfirm.sameAsPassword.$invalid ? (_openBlock(), _createElementBlock(_Fragment, {\n            key: 1\n          }, [_createTextVNode(_toDisplayString($data.$t('global.form.passwordsDoNotMatch')), 1 /* TEXT */)], 64 /* STABLE_FRAGMENT */)) : _createCommentVNode(\"v-if\", true)], undefined, true),\n          _: 1 /* STABLE */\n        })], undefined, true),\n        _: 1 /* STABLE */\n      })], undefined, true),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"label\"]), _createElementVNode(\"div\", _hoisted_5, [_createVNode(_component_b_button, {\n      type: \"button\",\n      variant: \"link\",\n      onClick: $options.goBack\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString($data.$t('pageChangePassword.goBack')), 1 /* TEXT */)], undefined, true),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_b_button, {\n      type: \"submit\",\n      variant: \"primary\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString($data.$t('pageChangePassword.changePassword')), 1 /* TEXT */)], undefined, true),\n      _: 1 /* STABLE */\n    })])], undefined, true),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onSubmit\"])])]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createVNode","_component_alert","variant","default","_withCtx","$data","changePasswordError","_hoisted_2","_toDisplayString","$t","_hoisted_3","_","_createElementVNode","_hoisted_4","username","_component_b_form","novalidate","onSubmit","_withModifiers","$options","changePassword","_component_b_form_group","label","_component_input_password_toggle","_component_b_form_input","id","modelValue","form","password","_cache","$event","autofocus","type","state","_ctx","getValidationState","$setup","v$","onChange","$touch","_component_b_form_invalid_feedback","role","required","$invalid","_Fragment","_createTextVNode","_createCommentVNode","passwordConfirm","sameAsPassword","_hoisted_5","_component_b_button","onClick","goBack"],"sources":["/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/src/views/ChangePassword/ChangePassword.vue"],"sourcesContent":["<template>\n  <div class=\"change-password-container\">\n    <alert variant=\"danger\" class=\"mb-4\">\n      <p v-if=\"changePasswordError\">\n        {{ $t('pageChangePassword.changePasswordError') }}\n      </p>\n      <p v-else>{{ $t('pageChangePassword.changePasswordAlertMessage') }}</p>\n    </alert>\n    <div class=\"change-password__form-container\">\n      <dl>\n        <dt>{{ $t('pageChangePassword.username') }}</dt>\n        <dd>{{ username }}</dd>\n      </dl>\n      <b-form novalidate @submit.prevent=\"changePassword\">\n        <b-form-group\n          label-for=\"password\"\n          :label=\"$t('pageChangePassword.newPassword')\"\n        >\n          <input-password-toggle>\n            <b-form-input\n              id=\"password\"\n              v-model=\"form.password\"\n              autofocus=\"autofocus\"\n              type=\"password\"\n              :state=\"getValidationState(v$.form.password)\"\n              class=\"form-control-with-button\"\n              @change=\"v$.form.password.$touch()\"\n            >\n            </b-form-input>\n            <b-form-invalid-feedback role=\"alert\">\n              <template v-if=\"v$.form.password.required.$invalid\">\n                {{ $t('global.form.fieldRequired') }}\n              </template>\n            </b-form-invalid-feedback>\n          </input-password-toggle>\n        </b-form-group>\n        <b-form-group\n          label-for=\"password-confirm\"\n          :label=\"$t('pageChangePassword.confirmNewPassword')\"\n        >\n          <input-password-toggle>\n            <b-form-input\n              id=\"password-confirm\"\n              v-model=\"form.passwordConfirm\"\n              type=\"password\"\n              :state=\"getValidationState(v$.form.passwordConfirm)\"\n              class=\"form-control-with-button\"\n              @change=\"v$.form.passwordConfirm.$touch()\"\n            >\n            </b-form-input>\n            <b-form-invalid-feedback role=\"alert\">\n              <template v-if=\"v$.form.passwordConfirm.required.$invalid\">\n                {{ $t('global.form.fieldRequired') }}\n              </template>\n              <template\n                v-else-if=\"v$.form.passwordConfirm.sameAsPassword.$invalid\"\n              >\n                {{ $t('global.form.passwordsDoNotMatch') }}\n              </template>\n            </b-form-invalid-feedback>\n          </input-password-toggle>\n        </b-form-group>\n        <div class=\"text-right\">\n          <b-button type=\"button\" variant=\"link\" @click=\"goBack\">\n            {{ $t('pageChangePassword.goBack') }}\n          </b-button>\n          <b-button type=\"submit\" variant=\"primary\">\n            {{ $t('pageChangePassword.changePassword') }}\n          </b-button>\n        </div>\n      </b-form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { required, sameAs } from '@vuelidate/validators';\nimport Alert from '@/components/Global/Alert';\nimport VuelidateMixin from '@/components/Mixins/VuelidateMixin';\nimport InputPasswordToggle from '@/components/Global/InputPasswordToggle';\nimport BVToastMixin from '@/components/Mixins/BVToastMixin';\nimport { useVuelidate } from '@vuelidate/core';\nimport { useI18n } from 'vue-i18n';\n\nexport default {\n  name: 'ChangePassword',\n  components: { Alert, InputPasswordToggle },\n  mixins: [VuelidateMixin, BVToastMixin],\n  setup() {\n    return {\n      v$: useVuelidate(),\n    };\n  },\n  data() {\n    return {\n      $t: useI18n().t,\n      form: {\n        password: null,\n        passwordConfirm: null,\n      },\n      username: this.$store.getters['global/username'],\n      changePasswordError: false,\n    };\n  },\n  validations() {\n    return {\n      form: {\n        password: { required },\n        passwordConfirm: {\n          required,\n          sameAsPassword: sameAs('password'),\n        },\n      },\n    };\n  },\n  methods: {\n    goBack() {\n      // Remove session created if navigating back to the Login page\n      this.$store.dispatch('authentication/logout');\n    },\n    changePassword() {\n      this.v$.$touch();\n      if (this.v$.$invalid) return;\n      let data = {\n        originalUsername: this.username,\n        password: this.form.password,\n      };\n\n      this.$store\n        .dispatch('userManagement/updateUser', data)\n        .then(() => this.$router.push('/'))\n        .catch(() => (this.changePasswordError = true));\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import '@/assets/styles/bmc/helpers/_index.scss';\n@import '@/assets/styles/bootstrap/_helpers.scss';\n\n@import '@/assets/styles/bootstrap/_helpers.scss';\n\n.change-password__form-container {\n  @include media-breakpoint-up('md') {\n    max-width: 360px;\n  }\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}