{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport StatusIcon from '../Global/StatusIcon';\nimport i18n from '@/i18n';\nconst BVToastMixin = {\n  components: {\n    StatusIcon\n  },\n  methods: {\n    $_BVToastMixin_createTitle(title, status) {\n      const statusIcon = this.$createElement('StatusIcon', {\n        props: {\n          status\n        }\n      });\n      const titleWithIcon = this.$createElement('strong', {\n        class: 'toast-icon'\n      }, [statusIcon, title]);\n      return titleWithIcon;\n    },\n    $_BVToastMixin_createBody(messageBody) {\n      if (Array.isArray(messageBody)) {\n        return messageBody.map(message => this.$createElement('p', {\n          class: 'mb-0'\n        }, message));\n      } else {\n        return [this.$createElement('p', {\n          class: 'mb-0'\n        }, messageBody)];\n      }\n    },\n    $_BVToastMixin_createTimestamp() {\n      const timestamp = this.$filters.formatTime(new Date());\n      return this.$createElement('p', {\n        class: 'mt-3 mb-0'\n      }, timestamp);\n    },\n    $_BVToastMixin_createRefreshAction() {\n      return this.$createElement('BLink', {\n        class: 'd-inline-block mt-3',\n        on: {\n          click: () => {\n            this.$root.$emit('refresh-application');\n          }\n        }\n      }, i18n.global.t('global.action.refresh'));\n    },\n    $_BVToastMixin_initToast(body, title, variant) {\n      this.$root.$bvToast.toast(body, {\n        title,\n        variant,\n        autoHideDelay: 10000,\n        //auto hide in milliseconds\n        noAutoHide: variant !== 'success',\n        isStatus: true,\n        solid: true\n      });\n    },\n    successToast(message, {\n      title: t = i18n.global.t('global.status.success'),\n      timestamp,\n      refreshAction\n    } = {}) {\n      const body = this.$_BVToastMixin_createBody(message);\n      const title = this.$_BVToastMixin_createTitle(t, 'success');\n      if (refreshAction) body.push(this.$_BVToastMixin_createRefreshAction());\n      if (timestamp) body.push(this.$_BVToastMixin_createTimestamp());\n      this.$_BVToastMixin_initToast(body, title, 'success');\n    },\n    errorToast(message, {\n      title: t = i18n.global.t('global.status.error'),\n      timestamp,\n      refreshAction\n    } = {}) {\n      const body = this.$_BVToastMixin_createBody(message);\n      const title = this.$_BVToastMixin_createTitle(t, 'danger');\n      if (refreshAction) body.push(this.$_BVToastMixin_createRefreshAction());\n      if (timestamp) body.push(this.$_BVToastMixin_createTimestamp());\n      this.$_BVToastMixin_initToast(body, title, 'danger');\n    },\n    warningToast(message, {\n      title: t = i18n.global.t('global.status.warning'),\n      timestamp,\n      refreshAction\n    } = {}) {\n      const body = this.$_BVToastMixin_createBody(message);\n      const title = this.$_BVToastMixin_createTitle(t, 'warning');\n      if (refreshAction) body.push(this.$_BVToastMixin_createRefreshAction());\n      if (timestamp) body.push(this.$_BVToastMixin_createTimestamp());\n      this.$_BVToastMixin_initToast(body, title, 'warning');\n    },\n    infoToast(message, {\n      title: t = i18n.global.t('global.status.informational'),\n      timestamp,\n      refreshAction\n    } = {}) {\n      const body = this.$_BVToastMixin_createBody(message);\n      const title = this.$_BVToastMixin_createTitle(t, 'info');\n      if (refreshAction) body.push(this.$_BVToastMixin_createRefreshAction());\n      if (timestamp) body.push(this.$_BVToastMixin_createTimestamp());\n      this.$_BVToastMixin_initToast(body, title, 'info');\n    }\n  }\n};\nexport default BVToastMixin;","map":{"version":3,"names":["StatusIcon","i18n","BVToastMixin","components","methods","$_BVToastMixin_createTitle","title","status","statusIcon","$createElement","props","titleWithIcon","class","$_BVToastMixin_createBody","messageBody","Array","isArray","map","message","$_BVToastMixin_createTimestamp","timestamp","$filters","formatTime","Date","$_BVToastMixin_createRefreshAction","on","click","$root","$emit","global","t","$_BVToastMixin_initToast","body","variant","$bvToast","toast","autoHideDelay","noAutoHide","isStatus","solid","successToast","refreshAction","push","errorToast","warningToast","infoToast"],"sources":["/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/src/components/Mixins/BVToastMixin.js"],"sourcesContent":["import StatusIcon from '../Global/StatusIcon';\nimport i18n from '@/i18n';\n\nconst BVToastMixin = {\n  components: {\n    StatusIcon,\n  },\n  methods: {\n    $_BVToastMixin_createTitle(title, status) {\n      const statusIcon = this.$createElement('StatusIcon', {\n        props: { status },\n      });\n      const titleWithIcon = this.$createElement(\n        'strong',\n        { class: 'toast-icon' },\n        [statusIcon, title],\n      );\n      return titleWithIcon;\n    },\n    $_BVToastMixin_createBody(messageBody) {\n      if (Array.isArray(messageBody)) {\n        return messageBody.map((message) =>\n          this.$createElement('p', { class: 'mb-0' }, message),\n        );\n      } else {\n        return [this.$createElement('p', { class: 'mb-0' }, messageBody)];\n      }\n    },\n    $_BVToastMixin_createTimestamp() {\n      const timestamp = this.$filters.formatTime(new Date());\n      return this.$createElement('p', { class: 'mt-3 mb-0' }, timestamp);\n    },\n    $_BVToastMixin_createRefreshAction() {\n      return this.$createElement(\n        'BLink',\n        {\n          class: 'd-inline-block mt-3',\n          on: {\n            click: () => {\n              this.$root.$emit('refresh-application');\n            },\n          },\n        },\n        i18n.global.t('global.action.refresh'),\n      );\n    },\n    $_BVToastMixin_initToast(body, title, variant) {\n      this.$root.$bvToast.toast(body, {\n        title,\n        variant,\n        autoHideDelay: 10000, //auto hide in milliseconds\n        noAutoHide: variant !== 'success',\n        isStatus: true,\n        solid: true,\n      });\n    },\n    successToast(\n      message,\n      {\n        title: t = i18n.global.t('global.status.success'),\n        timestamp,\n        refreshAction,\n      } = {},\n    ) {\n      const body = this.$_BVToastMixin_createBody(message);\n      const title = this.$_BVToastMixin_createTitle(t, 'success');\n      if (refreshAction) body.push(this.$_BVToastMixin_createRefreshAction());\n      if (timestamp) body.push(this.$_BVToastMixin_createTimestamp());\n      this.$_BVToastMixin_initToast(body, title, 'success');\n    },\n    errorToast(\n      message,\n      {\n        title: t = i18n.global.t('global.status.error'),\n        timestamp,\n        refreshAction,\n      } = {},\n    ) {\n      const body = this.$_BVToastMixin_createBody(message);\n      const title = this.$_BVToastMixin_createTitle(t, 'danger');\n      if (refreshAction) body.push(this.$_BVToastMixin_createRefreshAction());\n      if (timestamp) body.push(this.$_BVToastMixin_createTimestamp());\n      this.$_BVToastMixin_initToast(body, title, 'danger');\n    },\n    warningToast(\n      message,\n      {\n        title: t = i18n.global.t('global.status.warning'),\n        timestamp,\n        refreshAction,\n      } = {},\n    ) {\n      const body = this.$_BVToastMixin_createBody(message);\n      const title = this.$_BVToastMixin_createTitle(t, 'warning');\n      if (refreshAction) body.push(this.$_BVToastMixin_createRefreshAction());\n      if (timestamp) body.push(this.$_BVToastMixin_createTimestamp());\n      this.$_BVToastMixin_initToast(body, title, 'warning');\n    },\n    infoToast(\n      message,\n      {\n        title: t = i18n.global.t('global.status.informational'),\n        timestamp,\n        refreshAction,\n      } = {},\n    ) {\n      const body = this.$_BVToastMixin_createBody(message);\n      const title = this.$_BVToastMixin_createTitle(t, 'info');\n      if (refreshAction) body.push(this.$_BVToastMixin_createRefreshAction());\n      if (timestamp) body.push(this.$_BVToastMixin_createTimestamp());\n      this.$_BVToastMixin_initToast(body, title, 'info');\n    },\n  },\n};\n\nexport default BVToastMixin;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}