{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, withCtx as _withCtx, withModifiers as _withModifiers, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_b_form_input = _resolveComponent(\"b-form-input\");\n  const _component_b_form_invalid_feedback = _resolveComponent(\"b-form-invalid-feedback\");\n  const _component_b_form_group = _resolveComponent(\"b-form-group\");\n  const _component_b_col = _resolveComponent(\"b-col\");\n  const _component_b_row = _resolveComponent(\"b-row\");\n  const _component_b_form = _resolveComponent(\"b-form\");\n  const _component_b_button = _resolveComponent(\"b-button\");\n  const _component_b_modal = _resolveComponent(\"b-modal\");\n  return _openBlock(), _createBlock(_component_b_modal, {\n    id: \"modal-dns\",\n    ref: \"modal\",\n    title: $data.$t('pageNetwork.table.addDnsAddress'),\n    onHidden: $options.resetForm\n  }, {\n    \"modal-footer\": _withCtx(({\n      cancel\n    }) => [_createVNode(_component_b_button, {\n      variant: \"secondary\",\n      onClick: $event => cancel()\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString($data.$t('global.action.cancel')), 1 /* TEXT */)], undefined, true),\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"]), _createVNode(_component_b_button, {\n      form: \"form-dns\",\n      type: \"submit\",\n      variant: \"primary\",\n      onClick: $options.onOk\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString($data.$t('global.action.add')), 1 /* TEXT */)], undefined, true),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"onClick\"])]),\n    default: _withCtx(() => [_createVNode(_component_b_form, {\n      id: \"form-dns\",\n      onSubmit: _withModifiers($options.handleSubmit, [\"prevent\"])\n    }, {\n      default: _withCtx(() => [_createVNode(_component_b_row, null, {\n        default: _withCtx(() => [_createVNode(_component_b_col, {\n          sm: \"6\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_b_form_group, {\n            label: $data.$t('pageNetwork.modal.staticDns'),\n            \"label-for\": \"staticDns\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_b_form_input, {\n              id: \"staticDns\",\n              modelValue: $data.form.staticDns,\n              \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.form.staticDns = $event),\n              type: \"text\",\n              state: _ctx.getValidationState($setup.v$.form.staticDns),\n              onInput: _cache[1] || (_cache[1] = $event => $setup.v$.form.staticDns.$touch())\n            }, null, 8 /* PROPS */, [\"modelValue\", \"state\"]), _createVNode(_component_b_form_invalid_feedback, {\n              role: \"alert\"\n            }, {\n              default: _withCtx(() => [$setup.v$.form.staticDns.required.$invalid ? (_openBlock(), _createElementBlock(_Fragment, {\n                key: 0\n              }, [_createTextVNode(_toDisplayString($data.$t('global.form.fieldRequired')), 1 /* TEXT */)], 64 /* STABLE_FRAGMENT */)) : _createCommentVNode(\"v-if\", true), $setup.v$.form.staticDns.ipAddress.$invalid ? (_openBlock(), _createElementBlock(_Fragment, {\n                key: 1\n              }, [_createTextVNode(_toDisplayString($data.$t('global.form.invalidFormat')), 1 /* TEXT */)], 64 /* STABLE_FRAGMENT */)) : _createCommentVNode(\"v-if\", true)], undefined, true),\n              _: 1 /* STABLE */\n            })], undefined, true),\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"label\"])], undefined, true),\n          _: 1 /* STABLE */\n        })], undefined, true),\n        _: 1 /* STABLE */\n      })], undefined, true),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"onSubmit\"])], undefined, true),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"title\", \"onHidden\"]);\n}","map":{"version":3,"names":["_createBlock","_component_b_modal","id","ref","title","$data","$t","onHidden","$options","resetForm","_withCtx","cancel","_createVNode","_component_b_button","variant","onClick","$event","default","_createTextVNode","_toDisplayString","_","form","type","onOk","_component_b_form","onSubmit","_withModifiers","handleSubmit","_component_b_row","_component_b_col","sm","_component_b_form_group","label","_component_b_form_input","modelValue","staticDns","_cache","state","_ctx","getValidationState","$setup","v$","onInput","$touch","_component_b_form_invalid_feedback","role","required","$invalid","_createElementBlock","_Fragment","key","_createCommentVNode","ipAddress"],"sources":["/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/src/views/Settings/Network/ModalDns.vue"],"sourcesContent":["<template>\n  <b-modal\n    id=\"modal-dns\"\n    ref=\"modal\"\n    :title=\"$t('pageNetwork.table.addDnsAddress')\"\n    @hidden=\"resetForm\"\n  >\n    <b-form id=\"form-dns\" @submit.prevent=\"handleSubmit\">\n      <b-row>\n        <b-col sm=\"6\">\n          <b-form-group\n            :label=\"$t('pageNetwork.modal.staticDns')\"\n            label-for=\"staticDns\"\n          >\n            <b-form-input\n              id=\"staticDns\"\n              v-model=\"form.staticDns\"\n              type=\"text\"\n              :state=\"getValidationState(v$.form.staticDns)\"\n              @input=\"v$.form.staticDns.$touch()\"\n            />\n            <b-form-invalid-feedback role=\"alert\">\n              <template v-if=\"v$.form.staticDns.required.$invalid\">\n                {{ $t('global.form.fieldRequired') }}\n              </template>\n              <template v-if=\"v$.form.staticDns.ipAddress.$invalid\">\n                {{ $t('global.form.invalidFormat') }}\n              </template>\n            </b-form-invalid-feedback>\n          </b-form-group>\n        </b-col>\n      </b-row>\n    </b-form>\n    <template #modal-footer=\"{ cancel }\">\n      <b-button variant=\"secondary\" @click=\"cancel()\">\n        {{ $t('global.action.cancel') }}\n      </b-button>\n      <b-button form=\"form-dns\" type=\"submit\" variant=\"primary\" @click=\"onOk\">\n        {{ $t('global.action.add') }}\n      </b-button>\n    </template>\n  </b-modal>\n</template>\n\n<script>\nimport VuelidateMixin from '@/components/Mixins/VuelidateMixin.js';\nimport { useVuelidate } from '@vuelidate/core';\n\nimport { ipAddress, required } from '@vuelidate/validators';\nimport { useI18n } from 'vue-i18n';\n\nexport default {\n  mixins: [VuelidateMixin],\n  setup() {\n    return {\n      v$: useVuelidate(),\n    };\n  },\n  data() {\n    return {\n      $t: useI18n().t,\n      form: {\n        staticDns: null,\n      },\n    };\n  },\n  validations() {\n    return {\n      form: {\n        staticDns: {\n          required,\n          ipAddress,\n        },\n      },\n    };\n  },\n  methods: {\n    handleSubmit() {\n      this.v$.$touch();\n      if (this.v$.$invalid) return;\n      this.$emit('ok', [this.form.staticDns]);\n      this.closeModal();\n    },\n    closeModal() {\n      this.$nextTick(() => {\n        this.$refs.modal.hide();\n      });\n    },\n    resetForm() {\n      this.form.staticDns = null;\n      this.v$.$reset();\n      this.$emit('hidden');\n    },\n    onOk(bvModalEvt) {\n      // prevent modal close\n      bvModalEvt.preventDefault();\n      this.handleSubmit();\n    },\n  },\n};\n</script>\n"],"mappings":";;;;;;;;;;uBACEA,YAAA,CAwCUC,kBAAA;IAvCRC,EAAE,EAAC,WAAW;IACdC,GAAG,EAAC,OAAO;IACVC,KAAK,EAAEC,KAAA,CAAAC,EAAE;IACTC,QAAM,EAAEC,QAAA,CAAAC;;IA4BE,cAAY,EAAAC,QAAA,CACrB,CAEW;MAHcC;IAAM,OAC/BC,YAAA,CAEWC,mBAAA;MAFDC,OAAO,EAAC,WAAW;MAAEC,OAAK,EAAAC,MAAA,IAAEL,MAAM;;MAlClDM,OAAA,EAAAP,QAAA,CAmCQ,MAAgC,CAnCxCQ,gBAAA,CAAAC,gBAAA,CAmCWd,KAAA,CAAAC,EAAE,yC;MAnCbc,CAAA;sDAqCMR,YAAA,CAEWC,mBAAA;MAFDQ,IAAI,EAAC,UAAU;MAACC,IAAI,EAAC,QAAQ;MAACR,OAAO,EAAC,SAAS;MAAEC,OAAK,EAAEP,QAAA,CAAAe;;MArCxEN,OAAA,EAAAP,QAAA,CAsCQ,MAA6B,CAtCrCQ,gBAAA,CAAAC,gBAAA,CAsCWd,KAAA,CAAAC,EAAE,sC;MAtCbc,CAAA;;IAAAH,OAAA,EAAAP,QAAA,CAOI,MAyBS,CAzBTE,YAAA,CAyBSY,iBAAA;MAzBDtB,EAAE,EAAC,UAAU;MAAEuB,QAAM,EAPjCC,cAAA,CAO2ClB,QAAA,CAAAmB,YAAY;;MAPvDV,OAAA,EAAAP,QAAA,CAQM,MAuBQ,CAvBRE,YAAA,CAuBQgB,gBAAA;QA/BdX,OAAA,EAAAP,QAAA,CASQ,MAqBQ,CArBRE,YAAA,CAqBQiB,gBAAA;UArBDC,EAAE,EAAC;QAAG;UATrBb,OAAA,EAAAP,QAAA,CAUU,MAmBe,CAnBfE,YAAA,CAmBemB,uBAAA;YAlBZC,KAAK,EAAE3B,KAAA,CAAAC,EAAE;YACV,WAAS,EAAC;;YAZtBW,OAAA,EAAAP,QAAA,CAcY,MAME,CANFE,YAAA,CAMEqB,uBAAA;cALA/B,EAAE,EAAC,WAAW;cAf5BgC,UAAA,EAgBuB7B,KAAA,CAAAgB,IAAI,CAACc,SAAS;cAhBrC,uBAAAC,MAAA,QAAAA,MAAA,MAAApB,MAAA,IAgBuBX,KAAA,CAAAgB,IAAI,CAACc,SAAS,GAAAnB,MAAA;cACvBM,IAAI,EAAC,MAAM;cACVe,KAAK,EAAEC,IAAA,CAAAC,kBAAkB,CAACC,MAAA,CAAAC,EAAE,CAACpB,IAAI,CAACc,SAAS;cAC3CO,OAAK,EAAAN,MAAA,QAAAA,MAAA,MAAApB,MAAA,IAAEwB,MAAA,CAAAC,EAAE,CAACpB,IAAI,CAACc,SAAS,CAACQ,MAAM;8DAElC/B,YAAA,CAO0BgC,kCAAA;cAPDC,IAAI,EAAC;YAAO;cArBjD5B,OAAA,EAAAP,QAAA,CAsBc,MAEW,CAFK8B,MAAA,CAAAC,EAAE,CAACpB,IAAI,CAACc,SAAS,CAACW,QAAQ,CAACC,QAAQ,I,cAAnDC,mBAAA,CAEWC,SAAA;gBAxBzBC,GAAA;cAAA,IAAAhC,gBAAA,CAAAC,gBAAA,CAuBmBd,KAAA,CAAAC,EAAE,8C,+BAvBrB6C,mBAAA,gBAyB8BX,MAAA,CAAAC,EAAE,CAACpB,IAAI,CAACc,SAAS,CAACiB,SAAS,CAACL,QAAQ,I,cAApDC,mBAAA,CAEWC,SAAA;gBA3BzBC,GAAA;cAAA,IAAAhC,gBAAA,CAAAC,gBAAA,CA0BmBd,KAAA,CAAAC,EAAE,8C,+BA1BrB6C,mBAAA,e;cAAA/B,CAAA;;YAAAA,CAAA;;UAAAA,CAAA;;QAAAA,CAAA;;MAAAA,CAAA;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}