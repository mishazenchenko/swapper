{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, withCtx as _withCtx, withModifiers as _withModifiers, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_b_form_input = _resolveComponent(\"b-form-input\");\n  const _component_b_form_invalid_feedback = _resolveComponent(\"b-form-invalid-feedback\");\n  const _component_b_form_group = _resolveComponent(\"b-form-group\");\n  const _component_b_col = _resolveComponent(\"b-col\");\n  const _component_b_row = _resolveComponent(\"b-row\");\n  const _component_b_form = _resolveComponent(\"b-form\");\n  const _component_b_button = _resolveComponent(\"b-button\");\n  const _component_b_modal = _resolveComponent(\"b-modal\");\n  return _openBlock(), _createBlock(_component_b_modal, {\n    id: \"modal-add-ipv4\",\n    ref: \"modal\",\n    title: $data.$t('pageNetwork.table.addIpv4Address'),\n    onHidden: $options.resetForm\n  }, {\n    \"modal-footer\": _withCtx(({\n      cancel\n    }) => [_createVNode(_component_b_button, {\n      variant: \"secondary\",\n      onClick: $event => cancel()\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString($data.$t('global.action.cancel')), 1 /* TEXT */)], undefined, true),\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"]), _createVNode(_component_b_button, {\n      form: \"form-ipv4\",\n      type: \"submit\",\n      variant: \"primary\",\n      onClick: $options.onOk\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString($data.$t('global.action.add')), 1 /* TEXT */)], undefined, true),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"onClick\"])]),\n    default: _withCtx(() => [_createVNode(_component_b_form, {\n      id: \"form-ipv4\",\n      onSubmit: _withModifiers($options.handleSubmit, [\"prevent\"])\n    }, {\n      default: _withCtx(() => [_createVNode(_component_b_row, null, {\n        default: _withCtx(() => [_createVNode(_component_b_col, {\n          sm: \"6\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_b_form_group, {\n            label: $data.$t('pageNetwork.modal.ipAddress'),\n            \"label-for\": \"ipAddress\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_b_form_input, {\n              id: \"ipAddress\",\n              modelValue: $data.form.ipAddress,\n              \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.form.ipAddress = $event),\n              type: \"text\",\n              state: _ctx.getValidationState($setup.v$.form.ipAddress),\n              onInput: _cache[1] || (_cache[1] = $event => $setup.v$.form.ipAddress.$touch())\n            }, null, 8 /* PROPS */, [\"modelValue\", \"state\"]), _createVNode(_component_b_form_invalid_feedback, {\n              role: \"alert\"\n            }, {\n              default: _withCtx(() => [$setup.v$.form.ipAddress.required.$invalid ? (_openBlock(), _createElementBlock(_Fragment, {\n                key: 0\n              }, [_createTextVNode(_toDisplayString($data.$t('global.form.fieldRequired')), 1 /* TEXT */)], 64 /* STABLE_FRAGMENT */)) : _createCommentVNode(\"v-if\", true), $setup.v$.form.ipAddress.ipAddress.$invalid ? (_openBlock(), _createElementBlock(_Fragment, {\n                key: 1\n              }, [_createTextVNode(_toDisplayString($data.$t('global.form.invalidFormat')), 1 /* TEXT */)], 64 /* STABLE_FRAGMENT */)) : _createCommentVNode(\"v-if\", true)], undefined, true),\n              _: 1 /* STABLE */\n            })], undefined, true),\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"label\"])], undefined, true),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_b_col, {\n          sm: \"6\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_b_form_group, {\n            label: $data.$t('pageNetwork.modal.gateway'),\n            \"label-for\": \"gateway\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_b_form_input, {\n              id: \"gateway\",\n              modelValue: $data.form.gateway,\n              \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.form.gateway = $event),\n              type: \"text\",\n              state: _ctx.getValidationState($setup.v$.form.gateway),\n              onInput: _cache[3] || (_cache[3] = $event => $setup.v$.form.gateway.$touch())\n            }, null, 8 /* PROPS */, [\"modelValue\", \"state\"]), _createVNode(_component_b_form_invalid_feedback, {\n              role: \"alert\"\n            }, {\n              default: _withCtx(() => [$setup.v$.form.gateway.required.$invalid ? (_openBlock(), _createElementBlock(_Fragment, {\n                key: 0\n              }, [_createTextVNode(_toDisplayString($data.$t('global.form.fieldRequired')), 1 /* TEXT */)], 64 /* STABLE_FRAGMENT */)) : _createCommentVNode(\"v-if\", true), $setup.v$.form.gateway.ipAddress.$invalid ? (_openBlock(), _createElementBlock(_Fragment, {\n                key: 1\n              }, [_createTextVNode(_toDisplayString($data.$t('global.form.invalidFormat')), 1 /* TEXT */)], 64 /* STABLE_FRAGMENT */)) : _createCommentVNode(\"v-if\", true)], undefined, true),\n              _: 1 /* STABLE */\n            })], undefined, true),\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"label\"])], undefined, true),\n          _: 1 /* STABLE */\n        })], undefined, true),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_b_row, null, {\n        default: _withCtx(() => [_createVNode(_component_b_col, {\n          sm: \"6\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_b_form_group, {\n            label: $data.$t('pageNetwork.modal.subnetMask'),\n            \"label-for\": \"subnetMask\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_b_form_input, {\n              id: \"subnetMask\",\n              modelValue: $data.form.subnetMask,\n              \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.form.subnetMask = $event),\n              type: \"text\",\n              state: _ctx.getValidationState($setup.v$.form.subnetMask),\n              onInput: _cache[5] || (_cache[5] = $event => $setup.v$.form.subnetMask.$touch())\n            }, null, 8 /* PROPS */, [\"modelValue\", \"state\"]), _createVNode(_component_b_form_invalid_feedback, {\n              role: \"alert\"\n            }, {\n              default: _withCtx(() => [$setup.v$.form.subnetMask.required.$invalid ? (_openBlock(), _createElementBlock(_Fragment, {\n                key: 0\n              }, [_createTextVNode(_toDisplayString($data.$t('global.form.fieldRequired')), 1 /* TEXT */)], 64 /* STABLE_FRAGMENT */)) : _createCommentVNode(\"v-if\", true), $setup.v$.form.subnetMask.ipAddress.$invalid ? (_openBlock(), _createElementBlock(_Fragment, {\n                key: 1\n              }, [_createTextVNode(_toDisplayString($data.$t('global.form.invalidFormat')), 1 /* TEXT */)], 64 /* STABLE_FRAGMENT */)) : _createCommentVNode(\"v-if\", true)], undefined, true),\n              _: 1 /* STABLE */\n            })], undefined, true),\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"label\"])], undefined, true),\n          _: 1 /* STABLE */\n        })], undefined, true),\n        _: 1 /* STABLE */\n      })], undefined, true),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"onSubmit\"])], undefined, true),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"title\", \"onHidden\"]);\n}","map":{"version":3,"names":["_createBlock","_component_b_modal","id","ref","title","$data","$t","onHidden","$options","resetForm","_withCtx","cancel","_createVNode","_component_b_button","variant","onClick","$event","default","_createTextVNode","_toDisplayString","_","form","type","onOk","_component_b_form","onSubmit","_withModifiers","handleSubmit","_component_b_row","_component_b_col","sm","_component_b_form_group","label","_component_b_form_input","modelValue","ipAddress","_cache","state","_ctx","getValidationState","$setup","v$","onInput","$touch","_component_b_form_invalid_feedback","role","required","$invalid","_createElementBlock","_Fragment","key","_createCommentVNode","gateway","subnetMask"],"sources":["/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/src/views/Settings/Network/ModalIpv4.vue"],"sourcesContent":["<template>\n  <b-modal\n    id=\"modal-add-ipv4\"\n    ref=\"modal\"\n    :title=\"$t('pageNetwork.table.addIpv4Address')\"\n    @hidden=\"resetForm\"\n  >\n    <b-form id=\"form-ipv4\" @submit.prevent=\"handleSubmit\">\n      <b-row>\n        <b-col sm=\"6\">\n          <b-form-group\n            :label=\"$t('pageNetwork.modal.ipAddress')\"\n            label-for=\"ipAddress\"\n          >\n            <b-form-input\n              id=\"ipAddress\"\n              v-model=\"form.ipAddress\"\n              type=\"text\"\n              :state=\"getValidationState(v$.form.ipAddress)\"\n              @input=\"v$.form.ipAddress.$touch()\"\n            />\n            <b-form-invalid-feedback role=\"alert\">\n              <template v-if=\"v$.form.ipAddress.required.$invalid\">\n                {{ $t('global.form.fieldRequired') }}\n              </template>\n              <template v-if=\"v$.form.ipAddress.ipAddress.$invalid\">\n                {{ $t('global.form.invalidFormat') }}\n              </template>\n            </b-form-invalid-feedback>\n          </b-form-group>\n        </b-col>\n        <b-col sm=\"6\">\n          <b-form-group\n            :label=\"$t('pageNetwork.modal.gateway')\"\n            label-for=\"gateway\"\n          >\n            <b-form-input\n              id=\"gateway\"\n              v-model=\"form.gateway\"\n              type=\"text\"\n              :state=\"getValidationState(v$.form.gateway)\"\n              @input=\"v$.form.gateway.$touch()\"\n            />\n            <b-form-invalid-feedback role=\"alert\">\n              <template v-if=\"v$.form.gateway.required.$invalid\">\n                {{ $t('global.form.fieldRequired') }}\n              </template>\n              <template v-if=\"v$.form.gateway.ipAddress.$invalid\">\n                {{ $t('global.form.invalidFormat') }}\n              </template>\n            </b-form-invalid-feedback>\n          </b-form-group>\n        </b-col>\n      </b-row>\n      <b-row>\n        <b-col sm=\"6\">\n          <b-form-group\n            :label=\"$t('pageNetwork.modal.subnetMask')\"\n            label-for=\"subnetMask\"\n          >\n            <b-form-input\n              id=\"subnetMask\"\n              v-model=\"form.subnetMask\"\n              type=\"text\"\n              :state=\"getValidationState(v$.form.subnetMask)\"\n              @input=\"v$.form.subnetMask.$touch()\"\n            />\n            <b-form-invalid-feedback role=\"alert\">\n              <template v-if=\"v$.form.subnetMask.required.$invalid\">\n                {{ $t('global.form.fieldRequired') }}\n              </template>\n              <template v-if=\"v$.form.subnetMask.ipAddress.$invalid\">\n                {{ $t('global.form.invalidFormat') }}\n              </template>\n            </b-form-invalid-feedback>\n          </b-form-group>\n        </b-col>\n      </b-row>\n    </b-form>\n    <template #modal-footer=\"{ cancel }\">\n      <b-button variant=\"secondary\" @click=\"cancel()\">\n        {{ $t('global.action.cancel') }}\n      </b-button>\n      <b-button form=\"form-ipv4\" type=\"submit\" variant=\"primary\" @click=\"onOk\">\n        {{ $t('global.action.add') }}\n      </b-button>\n    </template>\n  </b-modal>\n</template>\n\n<script>\nimport VuelidateMixin from '@/components/Mixins/VuelidateMixin.js';\nimport { useVuelidate } from '@vuelidate/core';\n\nimport { ipAddress, required } from '@vuelidate/validators';\nimport { useI18n } from 'vue-i18n';\n\nexport default {\n  mixins: [VuelidateMixin],\n  props: {\n    defaultGateway: {\n      type: String,\n      default: '',\n    },\n  },\n  setup() {\n    return {\n      v$: useVuelidate(),\n    };\n  },\n  data() {\n    return {\n      $t: useI18n().t,\n      form: {\n        ipAddress: '',\n        gateway: '',\n        subnetMask: '',\n      },\n    };\n  },\n  watch: {\n    defaultGateway() {\n      this.form.gateway = this.defaultGateway;\n    },\n  },\n  validations() {\n    return {\n      form: {\n        ipAddress: {\n          required,\n          ipAddress,\n        },\n        gateway: {\n          required,\n          ipAddress,\n        },\n        subnetMask: {\n          required,\n          ipAddress,\n        },\n      },\n    };\n  },\n  methods: {\n    handleSubmit() {\n      this.v$.$touch();\n      if (this.v$.$invalid) return;\n      this.$emit('ok', {\n        Address: this.form.ipAddress,\n        Gateway: this.form.gateway,\n        SubnetMask: this.form.subnetMask,\n      });\n      this.closeModal();\n    },\n    closeModal() {\n      this.$nextTick(() => {\n        this.$refs.modal.hide();\n      });\n    },\n    resetForm() {\n      this.form.ipAddress = null;\n      this.form.gateway = this.defaultGateway;\n      this.form.subnetMask = null;\n      this.v$.$reset();\n      this.$emit('hidden');\n    },\n    onOk(bvModalEvt) {\n      // prevent modal close\n      bvModalEvt.preventDefault();\n      this.handleSubmit();\n    },\n  },\n};\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}