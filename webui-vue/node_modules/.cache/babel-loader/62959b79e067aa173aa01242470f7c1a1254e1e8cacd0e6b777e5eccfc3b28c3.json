{"ast":null,"code":"import RFB from '@novnc/novnc/core/rfb';\nimport StatusIcon from '@/components/Global/StatusIcon';\nimport IconLaunch from '@carbon/icons-vue/es/launch/20';\nimport IconArrowDown from '@carbon/icons-vue/es/arrow--down/16';\nimport { throttle } from 'lodash';\nimport { useI18n } from 'vue-i18n';\nimport i18n from '@/i18n';\nconst Connecting = 0;\nconst Connected = 1;\nconst Disconnected = 2;\nexport default {\n  name: 'KvmConsole',\n  components: {\n    StatusIcon,\n    IconLaunch,\n    IconArrowDown\n  },\n  props: {\n    isFullWindow: {\n      type: Boolean,\n      default: true\n    }\n  },\n  data() {\n    return {\n      $t: useI18n().t,\n      rfb: null,\n      isConnected: false,\n      terminalClass: this.isFullWindow ? 'full-window' : '',\n      marginClass: this.isFullWindow ? 'margin-left-full-window' : '',\n      status: Connecting,\n      convasRef: null,\n      resizeKvmWindow: null\n    };\n  },\n  computed: {\n    serverStatusIcon() {\n      if (this.status === Connected) {\n        return 'success';\n      } else if (this.status === Disconnected) {\n        return 'danger';\n      }\n      return 'secondary';\n    },\n    serverStatus() {\n      if (this.status === Connected) {\n        return i18n.global.t('pageKvm.connected');\n      } else if (this.status === Disconnected) {\n        return i18n.global.t('pageKvm.disconnected');\n      }\n      return i18n.global.t('pageKvm.connecting');\n    }\n  },\n  created() {\n    this.$store.dispatch('global/getSystemInfo');\n  },\n  mounted() {\n    this.openTerminal();\n  },\n  beforeUnmount() {\n    window.removeEventListener('resize', this.resizeKvmWindow);\n    this.closeTerminal();\n  },\n  methods: {\n    sendCtrlAltDel() {\n      this.rfb.sendCtrlAltDel();\n    },\n    closeTerminal() {\n      this.rfb.disconnect();\n      this.rfb = null;\n    },\n    openTerminal() {\n      const token = this.$store.getters['authentication/token'];\n      this.rfb = new RFB(this.$refs.panel, `wss://${window.location.host}/kvm/0`, {\n        wsProtocols: [token]\n      });\n      this.rfb.scaleViewport = true;\n      this.rfb.clipViewport = true;\n      const that = this;\n      this.resizeKvmWindow = throttle(() => {\n        setTimeout(that.setWidthToolbar, 0);\n      }, 1000);\n      window.addEventListener('resize', this.resizeKvmWindow);\n      this.rfb.addEventListener('connect', () => {\n        that.isConnected = true;\n        that.status = Connected;\n        that.setWidthToolbar();\n      });\n      this.rfb.addEventListener('disconnect', () => {\n        this.isConnected = false;\n        that.status = Disconnected;\n      });\n    },\n    setWidthToolbar() {\n      if (this.$refs.panel.children && this.$refs.panel.children.length > 0 && this.$refs.panel.children[0].children.length > 0) {\n        this.$refs.toolbar.style.width = this.$refs.panel.children[0].children[0].clientWidth - 10 + 'px';\n      }\n    },\n    openConsoleWindow() {\n      // If consoleWindow is not null\n      // Check the newly opened window is closed or not\n      if (this.$eventBus.$consoleWindow) {\n        // If window is not closed set focus to new window\n        // If window is closed, do open new window\n        if (!this.$eventBus.$consoleWindow.closed) {\n          this.$eventBus.$consoleWindow.focus();\n          return;\n        } else {\n          this.openNewWindow();\n        }\n      } else {\n        // If consoleWindow is null, open new window\n        this.openNewWindow();\n      }\n    },\n    openNewWindow() {\n      this.$eventBus.$consoleWindow = window.open('#/console/kvm', 'kvmConsoleWindow', 'directories=no,titlebar=no,toolbar=no,location=no,status=no,menubar=no,scrollbars=no,resizable=yes,width=700,height=550');\n    }\n  }\n};","map":{"version":3,"names":["RFB","StatusIcon","IconLaunch","IconArrowDown","throttle","useI18n","i18n","Connecting","Connected","Disconnected","name","components","props","isFullWindow","type","Boolean","default","data","$t","t","rfb","isConnected","terminalClass","marginClass","status","convasRef","resizeKvmWindow","computed","serverStatusIcon","serverStatus","global","created","$store","dispatch","mounted","openTerminal","beforeUnmount","window","removeEventListener","closeTerminal","methods","sendCtrlAltDel","disconnect","token","getters","$refs","panel","location","host","wsProtocols","scaleViewport","clipViewport","that","setTimeout","setWidthToolbar","addEventListener","children","length","toolbar","style","width","clientWidth","openConsoleWindow","$eventBus","$consoleWindow","closed","focus","openNewWindow","open"],"sources":["/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/src/views/Operations/Kvm/KvmConsole.vue"],"sourcesContent":["<template>\n  <div :class=\"marginClass\">\n    <div ref=\"toolbar\" class=\"kvm-toolbar\">\n      <b-row class=\"d-flex\">\n        <b-col class=\"d-flex flex-column justify-content-end\" cols=\"4\">\n          <dl class=\"mb-2\" sm=\"2\" md=\"2\">\n            <dt class=\"d-inline font-weight-bold mr-1\">\n              {{ $t('pageKvm.status') }}:\n            </dt>\n            <dd class=\"d-inline\">\n              <status-icon :status=\"serverStatusIcon\" />\n              <span class=\"d-none d-md-inline\"> {{ serverStatus }}</span>\n            </dd>\n          </dl>\n        </b-col>\n\n        <b-col class=\"d-flex justify-content-end pr-1\">\n          <b-button\n            v-if=\"isConnected\"\n            variant=\"link\"\n            type=\"button\"\n            @click=\"sendCtrlAltDel\"\n          >\n            <icon-arrow-down />\n            {{ $t('pageKvm.buttonCtrlAltDelete') }}\n          </b-button>\n          <b-button\n            v-if=\"!isFullWindow\"\n            variant=\"link\"\n            type=\"button\"\n            @click=\"openConsoleWindow()\"\n          >\n            <icon-launch />\n            {{ $t('pageKvm.openNewTab') }}\n          </b-button>\n        </b-col>\n      </b-row>\n    </div>\n    <div id=\"terminal-kvm\" ref=\"panel\" :class=\"terminalClass\"></div>\n  </div>\n</template>\n\n<script>\nimport RFB from '@novnc/novnc/core/rfb';\nimport StatusIcon from '@/components/Global/StatusIcon';\nimport IconLaunch from '@carbon/icons-vue/es/launch/20';\nimport IconArrowDown from '@carbon/icons-vue/es/arrow--down/16';\nimport { throttle } from 'lodash';\nimport { useI18n } from 'vue-i18n';\nimport i18n from '@/i18n';\n\nconst Connecting = 0;\nconst Connected = 1;\nconst Disconnected = 2;\n\nexport default {\n  name: 'KvmConsole',\n  components: { StatusIcon, IconLaunch, IconArrowDown },\n  props: {\n    isFullWindow: {\n      type: Boolean,\n      default: true,\n    },\n  },\n  data() {\n    return {\n      $t: useI18n().t,\n      rfb: null,\n      isConnected: false,\n      terminalClass: this.isFullWindow ? 'full-window' : '',\n      marginClass: this.isFullWindow ? 'margin-left-full-window' : '',\n      status: Connecting,\n      convasRef: null,\n      resizeKvmWindow: null,\n    };\n  },\n  computed: {\n    serverStatusIcon() {\n      if (this.status === Connected) {\n        return 'success';\n      } else if (this.status === Disconnected) {\n        return 'danger';\n      }\n      return 'secondary';\n    },\n    serverStatus() {\n      if (this.status === Connected) {\n        return i18n.global.t('pageKvm.connected');\n      } else if (this.status === Disconnected) {\n        return i18n.global.t('pageKvm.disconnected');\n      }\n      return i18n.global.t('pageKvm.connecting');\n    },\n  },\n  created() {\n    this.$store.dispatch('global/getSystemInfo');\n  },\n  mounted() {\n    this.openTerminal();\n  },\n  beforeUnmount() {\n    window.removeEventListener('resize', this.resizeKvmWindow);\n    this.closeTerminal();\n  },\n  methods: {\n    sendCtrlAltDel() {\n      this.rfb.sendCtrlAltDel();\n    },\n    closeTerminal() {\n      this.rfb.disconnect();\n      this.rfb = null;\n    },\n    openTerminal() {\n      const token = this.$store.getters['authentication/token'];\n      this.rfb = new RFB(\n        this.$refs.panel,\n        `wss://${window.location.host}/kvm/0`,\n        { wsProtocols: [token] },\n      );\n\n      this.rfb.scaleViewport = true;\n      this.rfb.clipViewport = true;\n      const that = this;\n\n      this.resizeKvmWindow = throttle(() => {\n        setTimeout(that.setWidthToolbar, 0);\n      }, 1000);\n      window.addEventListener('resize', this.resizeKvmWindow);\n\n      this.rfb.addEventListener('connect', () => {\n        that.isConnected = true;\n        that.status = Connected;\n        that.setWidthToolbar();\n      });\n\n      this.rfb.addEventListener('disconnect', () => {\n        this.isConnected = false;\n        that.status = Disconnected;\n      });\n    },\n    setWidthToolbar() {\n      if (\n        this.$refs.panel.children &&\n        this.$refs.panel.children.length > 0 &&\n        this.$refs.panel.children[0].children.length > 0\n      ) {\n        this.$refs.toolbar.style.width =\n          this.$refs.panel.children[0].children[0].clientWidth - 10 + 'px';\n      }\n    },\n    openConsoleWindow() {\n      // If consoleWindow is not null\n      // Check the newly opened window is closed or not\n      if (this.$eventBus.$consoleWindow) {\n        // If window is not closed set focus to new window\n        // If window is closed, do open new window\n        if (!this.$eventBus.$consoleWindow.closed) {\n          this.$eventBus.$consoleWindow.focus();\n          return;\n        } else {\n          this.openNewWindow();\n        }\n      } else {\n        // If consoleWindow is null, open new window\n        this.openNewWindow();\n      }\n    },\n    openNewWindow() {\n      this.$eventBus.$consoleWindow = window.open(\n        '#/console/kvm',\n        'kvmConsoleWindow',\n        'directories=no,titlebar=no,toolbar=no,location=no,status=no,menubar=no,scrollbars=no,resizable=yes,width=700,height=550',\n      );\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\">\n@import '@/assets/styles/bmc/custom/_kvm.scss';\n</style>\n\n<style lang=\"scss\" scoped>\n@import '@/assets/styles/bmc/helpers/_index.scss';\n@import '@/assets/styles/bootstrap/_helpers.scss';\n\n.button-ctrl-alt-delete {\n  float: right;\n}\n\n.kvm-status {\n  padding-top: $spacer / 2;\n  padding-left: $spacer / 4;\n  display: inline-block;\n}\n\n.margin-left-full-window {\n  margin-left: 5px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}