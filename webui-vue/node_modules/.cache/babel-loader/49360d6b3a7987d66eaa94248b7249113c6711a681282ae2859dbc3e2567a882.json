{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createTextVNode as _createTextVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"login-error-alert\"\n};\nconst _hoisted_2 = {\n  class: \"login-form__section mb-3\"\n};\nconst _hoisted_3 = {\n  for: \"password\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_alert = _resolveComponent(\"alert\");\n  const _component_b_form_select = _resolveComponent(\"b-form-select\");\n  const _component_b_form_group = _resolveComponent(\"b-form-group\");\n  const _component_b_form_input = _resolveComponent(\"b-form-input\");\n  const _component_b_form_invalid_feedback = _resolveComponent(\"b-form-invalid-feedback\");\n  const _component_input_password_toggle = _resolveComponent(\"input-password-toggle\");\n  const _component_b_button = _resolveComponent(\"b-button\");\n  const _component_b_form = _resolveComponent(\"b-form\");\n  return _openBlock(), _createBlock(_component_b_form, {\n    class: \"login-form\",\n    novalidate: \"\",\n    onSubmit: _withModifiers($options.login, [\"prevent\"])\n  }, {\n    default: _withCtx(() => [_createVNode(_component_alert, {\n      class: \"login-error mb-4\",\n      show: $options.authError,\n      variant: \"danger\"\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"p\", _hoisted_1, _toDisplayString($data.$t('pageLogin.alert.message')), 1 /* TEXT */)], undefined, true),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"show\"]), _createVNode(_component_b_form_group, {\n      \"label-for\": \"language\",\n      label: $data.$t('pageLogin.language')\n    }, {\n      default: _withCtx(() => [_createVNode(_component_b_form_select, {\n        id: \"language\",\n        modelValue: $setup.userLocale,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.userLocale = $event),\n        options: $data.languages,\n        \"data-test-id\": \"login-select-language\"\n      }, null, 8 /* PROPS */, [\"modelValue\", \"options\"])], undefined, true),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"label\"]), _createVNode(_component_b_form_group, {\n      \"label-for\": \"username\",\n      label: $data.$t('pageLogin.username')\n    }, {\n      default: _withCtx(() => [_createVNode(_component_b_form_input, {\n        id: \"username\",\n        modelValue: $data.userInfo.username,\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.userInfo.username = $event),\n        \"aria-describedby\": \"login-error-alert username-required\",\n        state: _ctx.getValidationState($setup.v$.userInfo.username),\n        type: \"text\",\n        autofocus: \"autofocus\",\n        \"data-test-id\": \"login-input-username\",\n        onInput: _cache[2] || (_cache[2] = $event => $setup.v$.userInfo.username.$touch())\n      }, null, 8 /* PROPS */, [\"modelValue\", \"state\"]), _createVNode(_component_b_form_invalid_feedback, {\n        id: \"username-required\",\n        role: \"alert\"\n      }, {\n        default: _withCtx(() => [$setup.v$.userInfo.username.required.$invalid ? (_openBlock(), _createElementBlock(_Fragment, {\n          key: 0\n        }, [_createTextVNode(_toDisplayString($data.$t('global.form.fieldRequired')), 1 /* TEXT */)], 64 /* STABLE_FRAGMENT */)) : _createCommentVNode(\"v-if\", true)], undefined, true),\n        _: 1 /* STABLE */\n      })], undefined, true),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"label\"]), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"label\", _hoisted_3, _toDisplayString($data.$t('pageLogin.password')), 1 /* TEXT */), _createVNode(_component_input_password_toggle, null, {\n      default: _withCtx(() => [_createVNode(_component_b_form_input, {\n        id: \"password\",\n        modelValue: $data.userInfo.password,\n        \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.userInfo.password = $event),\n        \"aria-describedby\": \"login-error-alert password-required\",\n        state: _ctx.getValidationState($setup.v$.userInfo.password),\n        type: \"password\",\n        \"data-test-id\": \"login-input-password\",\n        class: \"form-control-with-button\",\n        onInput: _cache[4] || (_cache[4] = $event => $setup.v$.userInfo.password.$touch())\n      }, null, 8 /* PROPS */, [\"modelValue\", \"state\"]), _createVNode(_component_b_form_invalid_feedback, {\n        id: \"password-required\",\n        role: \"alert\"\n      }, {\n        default: _withCtx(() => [$setup.v$.userInfo.password.required.$invalid ? (_openBlock(), _createElementBlock(_Fragment, {\n          key: 0\n        }, [_createTextVNode(_toDisplayString($data.$t('global.form.fieldRequired')), 1 /* TEXT */)], 64 /* STABLE_FRAGMENT */)) : _createCommentVNode(\"v-if\", true)], undefined, true),\n        _: 1 /* STABLE */\n      })], undefined, true),\n      _: 1 /* STABLE */\n    })]), _createVNode(_component_b_button, {\n      class: \"mt-3\",\n      type: \"submit\",\n      variant: \"primary\",\n      \"data-test-id\": \"login-button-submit\",\n      disabled: $data.disableSubmitButton\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString($data.$t('pageLogin.logIn')), 1 /* TEXT */)], undefined, true),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"disabled\"])], undefined, true),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onSubmit\"]);\n}","map":{"version":3,"names":["id","class","for","_createBlock","_component_b_form","novalidate","onSubmit","_withModifiers","$options","login","default","_withCtx","_createVNode","_component_alert","show","authError","variant","_createElementVNode","_hoisted_1","_toDisplayString","$data","$t","_","_component_b_form_group","label","_component_b_form_select","modelValue","$setup","userLocale","_cache","$event","options","languages","_component_b_form_input","userInfo","username","state","_ctx","getValidationState","v$","type","autofocus","onInput","$touch","_component_b_form_invalid_feedback","role","required","$invalid","_createElementBlock","_Fragment","key","_createTextVNode","_createCommentVNode","_hoisted_2","_hoisted_3","_component_input_password_toggle","password","_component_b_button","disabled","disableSubmitButton"],"sources":["/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/src/views/Login/Login.vue"],"sourcesContent":["<template>\n  <b-form class=\"login-form\" novalidate @submit.prevent=\"login\">\n    <alert class=\"login-error mb-4\" :show=\"authError\" variant=\"danger\">\n      <p id=\"login-error-alert\">\n        {{ $t('pageLogin.alert.message') }}\n      </p>\n    </alert>\n    <b-form-group label-for=\"language\" :label=\"$t('pageLogin.language')\">\n      <b-form-select\n        id=\"language\"\n        v-model=\"userLocale\"\n        :options=\"languages\"\n        data-test-id=\"login-select-language\"\n      ></b-form-select>\n    </b-form-group>\n    <b-form-group label-for=\"username\" :label=\"$t('pageLogin.username')\">\n      <b-form-input\n        id=\"username\"\n        v-model=\"userInfo.username\"\n        aria-describedby=\"login-error-alert username-required\"\n        :state=\"getValidationState(v$.userInfo.username)\"\n        type=\"text\"\n        autofocus=\"autofocus\"\n        data-test-id=\"login-input-username\"\n        @input=\"v$.userInfo.username.$touch()\"\n      >\n      </b-form-input>\n      <b-form-invalid-feedback id=\"username-required\" role=\"alert\">\n        <template v-if=\"v$.userInfo.username.required.$invalid\">\n          {{ $t('global.form.fieldRequired') }}\n        </template>\n      </b-form-invalid-feedback>\n    </b-form-group>\n    <div class=\"login-form__section mb-3\">\n      <label for=\"password\">{{ $t('pageLogin.password') }}</label>\n      <input-password-toggle>\n        <b-form-input\n          id=\"password\"\n          v-model=\"userInfo.password\"\n          aria-describedby=\"login-error-alert password-required\"\n          :state=\"getValidationState(v$.userInfo.password)\"\n          type=\"password\"\n          data-test-id=\"login-input-password\"\n          class=\"form-control-with-button\"\n          @input=\"v$.userInfo.password.$touch()\"\n        >\n        </b-form-input>\n        <b-form-invalid-feedback id=\"password-required\" role=\"alert\">\n          <template v-if=\"v$.userInfo.password.required.$invalid\">\n            {{ $t('global.form.fieldRequired') }}\n          </template>\n        </b-form-invalid-feedback>\n      </input-password-toggle>\n    </div>\n    <b-button\n      class=\"mt-3\"\n      type=\"submit\"\n      variant=\"primary\"\n      data-test-id=\"login-button-submit\"\n      :disabled=\"disableSubmitButton\"\n      >{{ $t('pageLogin.logIn') }}</b-button\n    >\n  </b-form>\n</template>\n\n<script>\nimport { required } from '@vuelidate/validators';\nimport VuelidateMixin from '@/components/Mixins/VuelidateMixin.js';\nimport { useVuelidate } from '@vuelidate/core';\nimport { ref, watch } from 'vue';\nimport { useI18n } from 'vue-i18n';\nimport Alert from '@/components/Global/Alert';\nimport InputPasswordToggle from '@/components/Global/InputPasswordToggle';\n\nexport default {\n  name: 'Login',\n  components: { Alert, InputPasswordToggle },\n  mixins: [VuelidateMixin],\n  setup() {\n    const { locale } = useI18n();\n    const userLocale = ref(locale.value);\n    watch(userLocale, (newLocale) => {\n      locale.value = newLocale;\n      localStorage.setItem('storedLanguage', newLocale);\n    });\n    return {\n      userLocale,\n      v$: useVuelidate(),\n    };\n  },\n  data() {\n    return {\n      $t: useI18n().t,\n      userInfo: {\n        username: null,\n        password: null,\n      },\n      disableSubmitButton: false,\n      languages: [\n        {\n          value: 'en-US',\n          text: 'English',\n        },\n        {\n          value: 'ru-RU',\n          text: 'Русский',\n        },\n      ],\n    };\n  },\n  computed: {\n    authError() {\n      return this.$store.getters['authentication/authError'];\n    },\n  },\n  validations: {\n    userInfo: {\n      username: {\n        required,\n      },\n      password: {\n        required,\n      },\n    },\n  },\n  methods: {\n    login: function () {\n      this.v$.$touch();\n      if (this.v$.$invalid) return;\n      this.disableSubmitButton = true;\n      const username = this.userInfo.username;\n      const password = this.userInfo.password;\n      this.$store\n        .dispatch('authentication/login', { username, password })\n        .then((PasswordChangeRequired) => {\n          localStorage.setItem('storedLanguage', this.userLocale);\n          localStorage.setItem('storedUsername', username);\n          this.$store.commit('global/setUsername', username);\n          this.$store.commit('global/setLanguagePreference', this.userLocale);\n          if (PasswordChangeRequired) {\n            this.$router.push('/change-password');\n          } else {\n            this.$router.push('/');\n          }\n        })\n        .catch((error) => console.log(error))\n        .finally(() => (this.disableSubmitButton = false));\n    },\n  },\n};\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}