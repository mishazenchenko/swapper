{"ast":null,"code":"import api from '@/store/api';\nimport i18n from '@/i18n';\nconst FactoryResetStore = {\n  namespaced: true,\n  actions: {\n    async resetToDefaults() {\n      return await api.post(`${await this.dispatch('global/getBmcPath')}/Actions/Manager.ResetToDefaults`, {\n        ResetType: 'ResetAll'\n      }).then(() => i18n.global.t('pageFactoryReset.toast.resetToDefaultsSuccess')).catch(error => {\n        console.log('Factory Reset: ', error);\n        throw new Error(i18n.global.t('pageFactoryReset.toast.resetToDefaultsError'));\n      });\n    },\n    async resetBios() {\n      return await api.post(`${await this.dispatch('global/getSystemPath')}/Bios/Actions/Bios.ResetBios`).then(() => i18n.global.t('pageFactoryReset.toast.resetBiosSuccess')).catch(error => {\n        console.log('Factory Reset: ', error);\n        throw new Error(i18n.global.t('pageFactoryReset.toast.resetBiosError'));\n      });\n    }\n  }\n};\nexport default FactoryResetStore;","map":{"version":3,"names":["api","i18n","FactoryResetStore","namespaced","actions","resetToDefaults","post","dispatch","ResetType","then","global","t","catch","error","console","log","Error","resetBios"],"sources":["/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/src/store/modules/Operations/FactoryResetStore.js"],"sourcesContent":["import api from '@/store/api';\nimport i18n from '@/i18n';\n\nconst FactoryResetStore = {\n  namespaced: true,\n  actions: {\n    async resetToDefaults() {\n      return await api\n        .post(\n          `${await this.dispatch('global/getBmcPath')}/Actions/Manager.ResetToDefaults`,\n          {\n            ResetType: 'ResetAll',\n          },\n        )\n        .then(() =>\n          i18n.global.t('pageFactoryReset.toast.resetToDefaultsSuccess'),\n        )\n        .catch((error) => {\n          console.log('Factory Reset: ', error);\n          throw new Error(\n            i18n.global.t('pageFactoryReset.toast.resetToDefaultsError'),\n          );\n        });\n    },\n    async resetBios() {\n      return await api\n        .post(\n          `${await this.dispatch('global/getSystemPath')}/Bios/Actions/Bios.ResetBios`,\n        )\n        .then(() => i18n.global.t('pageFactoryReset.toast.resetBiosSuccess'))\n        .catch((error) => {\n          console.log('Factory Reset: ', error);\n          throw new Error(\n            i18n.global.t('pageFactoryReset.toast.resetBiosError'),\n          );\n        });\n    },\n  },\n};\n\nexport default FactoryResetStore;\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,aAAa;AAC7B,OAAOC,IAAI,MAAM,QAAQ;AAEzB,MAAMC,iBAAiB,GAAG;EACxBC,UAAU,EAAE,IAAI;EAChBC,OAAO,EAAE;IACP,MAAMC,eAAeA,CAAA,EAAG;MACtB,OAAO,MAAML,GAAG,CACbM,IAAI,CACH,GAAG,MAAM,IAAI,CAACC,QAAQ,CAAC,mBAAmB,CAAC,kCAAkC,EAC7E;QACEC,SAAS,EAAE;MACb,CACF,CAAC,CACAC,IAAI,CAAC,MACJR,IAAI,CAACS,MAAM,CAACC,CAAC,CAAC,+CAA+C,CAC/D,CAAC,CACAC,KAAK,CAAEC,KAAK,IAAK;QAChBC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEF,KAAK,CAAC;QACrC,MAAM,IAAIG,KAAK,CACbf,IAAI,CAACS,MAAM,CAACC,CAAC,CAAC,6CAA6C,CAC7D,CAAC;MACH,CAAC,CAAC;IACN,CAAC;IACD,MAAMM,SAASA,CAAA,EAAG;MAChB,OAAO,MAAMjB,GAAG,CACbM,IAAI,CACH,GAAG,MAAM,IAAI,CAACC,QAAQ,CAAC,sBAAsB,CAAC,8BAChD,CAAC,CACAE,IAAI,CAAC,MAAMR,IAAI,CAACS,MAAM,CAACC,CAAC,CAAC,yCAAyC,CAAC,CAAC,CACpEC,KAAK,CAAEC,KAAK,IAAK;QAChBC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEF,KAAK,CAAC;QACrC,MAAM,IAAIG,KAAK,CACbf,IAAI,CAACS,MAAM,CAACC,CAAC,CAAC,uCAAuC,CACvD,CAAC;MACH,CAAC,CAAC;IACN;EACF;AACF,CAAC;AAED,eAAeT,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}