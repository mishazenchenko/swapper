{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, withCtx as _withCtx, createBlock as _createBlock, vShow as _vShow, withDirectives as _withDirectives } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_page_title = _resolveComponent(\"page-title\");\n  const _component_network_global_settings = _resolveComponent(\"network-global-settings\");\n  const _component_network_interface_settings = _resolveComponent(\"network-interface-settings\");\n  const _component_table_ipv_4 = _resolveComponent(\"table-ipv-4\");\n  const _component_table_ipv_6 = _resolveComponent(\"table-ipv-6\");\n  const _component_table_dns = _resolveComponent(\"table-dns\");\n  const _component_b_tab = _resolveComponent(\"b-tab\");\n  const _component_b_tabs = _resolveComponent(\"b-tabs\");\n  const _component_b_card = _resolveComponent(\"b-card\");\n  const _component_b_col = _resolveComponent(\"b-col\");\n  const _component_b_row = _resolveComponent(\"b-row\");\n  const _component_page_section = _resolveComponent(\"page-section\");\n  const _component_modal_ipv4 = _resolveComponent(\"modal-ipv4\");\n  const _component_modal_ipv6 = _resolveComponent(\"modal-ipv6\");\n  const _component_modal_dns = _resolveComponent(\"modal-dns\");\n  const _component_modal_hostname = _resolveComponent(\"modal-hostname\");\n  const _component_modal_mac_address = _resolveComponent(\"modal-mac-address\");\n  const _component_modal_default_gateway = _resolveComponent(\"modal-default-gateway\");\n  const _component_b_container = _resolveComponent(\"b-container\");\n  return _openBlock(), _createBlock(_component_b_container, {\n    fluid: \"xl\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_page_title, {\n      description: $data.$t('pageNetwork.pageDescription')\n    }, null, 8 /* PROPS */, [\"description\"]), _createCommentVNode(\" Global settings for all interfaces \"), _createVNode(_component_network_global_settings), _createCommentVNode(\" Interface tabs \"), _withDirectives(_createVNode(_component_page_section, null, {\n      default: _withCtx(() => [_createVNode(_component_b_row, null, {\n        default: _withCtx(() => [_createVNode(_component_b_col, null, {\n          default: _withCtx(() => [_createVNode(_component_b_card, {\n            \"no-body\": \"\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_b_tabs, {\n              \"active-nav-item-class\": \"font-weight-bold\",\n              card: \"\",\n              \"content-class\": \"mt-3\"\n            }, {\n              default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.ethernetData, (data, index) => {\n                return _openBlock(), _createBlock(_component_b_tab, {\n                  key: data.Id,\n                  title: data.Id,\n                  onClick: $event => $options.getTabIndex(index)\n                }, {\n                  default: _withCtx(() => [_createCommentVNode(\" Interface settings \"), _createVNode(_component_network_interface_settings, {\n                    \"tab-index\": $data.tabIndex\n                  }, null, 8 /* PROPS */, [\"tab-index\"]), _createCommentVNode(\" IPV4 table \"), _createVNode(_component_table_ipv_4, {\n                    \"tab-index\": $data.tabIndex\n                  }, null, 8 /* PROPS */, [\"tab-index\"]), _createCommentVNode(\" IPV6 table \"), _createVNode(_component_table_ipv_6, {\n                    \"tab-index\": $data.tabIndex\n                  }, null, 8 /* PROPS */, [\"tab-index\"]), _createCommentVNode(\" Static DNS table \"), _createVNode(_component_table_dns, {\n                    \"tab-index\": $data.tabIndex\n                  }, null, 8 /* PROPS */, [\"tab-index\"])], undefined, true),\n                  _: 2 /* DYNAMIC */\n                }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"title\", \"onClick\"]);\n              }), 128 /* KEYED_FRAGMENT */))], undefined, true),\n              _: 1 /* STABLE */\n            })], undefined, true),\n            _: 1 /* STABLE */\n          })], undefined, true),\n          _: 1 /* STABLE */\n        })], undefined, true),\n        _: 1 /* STABLE */\n      })], undefined, true),\n      _: 1 /* STABLE */\n    }, 512 /* NEED_PATCH */), [[_vShow, _ctx.ethernetData]]), _createCommentVNode(\" Modals \"), _createVNode(_component_modal_ipv4, {\n      \"default-gateway\": $data.defaultGateway,\n      onOk: $options.saveIpv4Address\n    }, null, 8 /* PROPS */, [\"default-gateway\", \"onOk\"]), _createVNode(_component_modal_ipv6, {\n      onOk: $options.saveIpv6Address\n    }, null, 8 /* PROPS */, [\"onOk\"]), _createVNode(_component_modal_dns, {\n      onOk: $options.saveDnsAddress\n    }, null, 8 /* PROPS */, [\"onOk\"]), _createVNode(_component_modal_hostname, {\n      hostname: $data.currentHostname,\n      onOk: $options.saveSettings\n    }, null, 8 /* PROPS */, [\"hostname\", \"onOk\"]), _createVNode(_component_modal_mac_address, {\n      \"mac-address\": $data.currentMacAddress,\n      onOk: $options.saveSettings\n    }, null, 8 /* PROPS */, [\"mac-address\", \"onOk\"]), _createVNode(_component_modal_default_gateway, {\n      \"default-gateway\": $data.ipv6DefaultGateway,\n      onOk: $options.saveSettings\n    }, null, 8 /* PROPS */, [\"default-gateway\", \"onOk\"])], undefined, true),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createBlock","_component_b_container","fluid","default","_withCtx","_createVNode","_component_page_title","description","$data","$t","_createCommentVNode","_component_network_global_settings","_component_page_section","_component_b_row","_component_b_col","_component_b_card","_component_b_tabs","card","_createElementBlock","_Fragment","_renderList","_ctx","ethernetData","data","index","_component_b_tab","key","Id","title","onClick","$event","$options","getTabIndex","_component_network_interface_settings","tabIndex","_component_table_ipv_4","_component_table_ipv_6","_component_table_dns","_","_component_modal_ipv4","defaultGateway","onOk","saveIpv4Address","_component_modal_ipv6","saveIpv6Address","_component_modal_dns","saveDnsAddress","_component_modal_hostname","hostname","currentHostname","saveSettings","_component_modal_mac_address","currentMacAddress","_component_modal_default_gateway","ipv6DefaultGateway"],"sources":["/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/src/views/Settings/Network/Network.vue"],"sourcesContent":["<template>\n  <b-container fluid=\"xl\">\n    <page-title :description=\"$t('pageNetwork.pageDescription')\" />\n    <!-- Global settings for all interfaces -->\n    <network-global-settings />\n    <!-- Interface tabs -->\n    <page-section v-show=\"ethernetData\">\n      <b-row>\n        <b-col>\n          <b-card no-body>\n            <b-tabs\n              active-nav-item-class=\"font-weight-bold\"\n              card\n              content-class=\"mt-3\"\n            >\n              <b-tab\n                v-for=\"(data, index) in ethernetData\"\n                :key=\"data.Id\"\n                :title=\"data.Id\"\n                @click=\"getTabIndex(index)\"\n              >\n                <!-- Interface settings -->\n                <network-interface-settings :tab-index=\"tabIndex\" />\n                <!-- IPV4 table -->\n                <table-ipv-4 :tab-index=\"tabIndex\" />\n                <!-- IPV6 table -->\n                <table-ipv-6 :tab-index=\"tabIndex\" />\n                <!-- Static DNS table -->\n                <table-dns :tab-index=\"tabIndex\" />\n              </b-tab>\n            </b-tabs>\n          </b-card>\n        </b-col>\n      </b-row>\n    </page-section>\n    <!-- Modals -->\n    <modal-ipv4 :default-gateway=\"defaultGateway\" @ok=\"saveIpv4Address\" />\n    <modal-ipv6 @ok=\"saveIpv6Address\" />\n    <modal-dns @ok=\"saveDnsAddress\" />\n    <modal-hostname :hostname=\"currentHostname\" @ok=\"saveSettings\" />\n    <modal-mac-address :mac-address=\"currentMacAddress\" @ok=\"saveSettings\" />\n    <modal-default-gateway\n      :default-gateway=\"ipv6DefaultGateway\"\n      @ok=\"saveSettings\"\n    />\n  </b-container>\n</template>\n\n<script>\nimport BVToastMixin from '@/components/Mixins/BVToastMixin';\nimport DataFormatterMixin from '@/components/Mixins/DataFormatterMixin';\nimport LoadingBarMixin, { loading } from '@/components/Mixins/LoadingBarMixin';\nimport ModalMacAddress from './ModalMacAddress.vue';\nimport ModalDefaultGateway from './ModalDefaultGateway.vue';\nimport ModalHostname from './ModalHostname.vue';\nimport ModalIpv4 from './ModalIpv4.vue';\nimport ModalIpv6 from './ModalIpv6.vue';\nimport ModalDns from './ModalDns.vue';\nimport NetworkGlobalSettings from './NetworkGlobalSettings.vue';\nimport NetworkInterfaceSettings from './NetworkInterfaceSettings.vue';\nimport PageSection from '@/components/Global/PageSection';\nimport PageTitle from '@/components/Global/PageTitle';\nimport TableIpv4 from './TableIpv4.vue';\nimport TableIpv6 from './TableIpv6.vue';\nimport TableDns from './TableDns.vue';\nimport { mapState } from 'vuex';\nimport { useI18n } from 'vue-i18n';\n\nexport default {\n  name: 'Network',\n  components: {\n    ModalHostname,\n    ModalMacAddress,\n    ModalDefaultGateway,\n    ModalIpv4,\n    ModalIpv6,\n    ModalDns,\n    NetworkGlobalSettings,\n    NetworkInterfaceSettings,\n    PageSection,\n    PageTitle,\n    TableDns,\n    TableIpv4,\n    TableIpv6,\n  },\n  mixins: [BVToastMixin, DataFormatterMixin, LoadingBarMixin],\n  beforeRouteLeave(to, from, next) {\n    this.hideLoader();\n    next();\n  },\n  data() {\n    return {\n      $t: useI18n().t,\n      currentHostname: '',\n      currentMacAddress: '',\n      defaultGateway: '',\n      ipv6DefaultGateway: '',\n      loading,\n      tabIndex: 0,\n    };\n  },\n  computed: {\n    ...mapState('network', ['ethernetData']),\n  },\n  watch: {\n    ethernetData() {\n      this.getModalInfo();\n    },\n  },\n  created() {\n    this.startLoader();\n    const globalSettings = new Promise((resolve) => {\n      this.$root.$on('network-global-settings-complete', () => resolve());\n    });\n    const interfaceSettings = new Promise((resolve) => {\n      this.$root.$on('network-interface-settings-complete', () => resolve());\n    });\n    const networkTableDns = new Promise((resolve) => {\n      this.$root.$on('network-table-dns-complete', () => resolve());\n    });\n    const networkTableIpv4 = new Promise((resolve) => {\n      this.$root.$on('network-table-ipv4-complete', () => resolve());\n    });\n    const networkTableIpv6 = new Promise((resolve) => {\n      this.$root.$on('network-table-ipv6-complete', () => resolve());\n    });\n    // Combine all child component Promises to indicate\n    // when page data load complete\n    Promise.all([\n      this.$store.dispatch('network/getEthernetData'),\n      globalSettings,\n      interfaceSettings,\n      networkTableDns,\n      networkTableIpv4,\n      networkTableIpv6,\n    ]).finally(() => this.endLoader());\n  },\n  methods: {\n    getModalInfo() {\n      this.defaultGateway =\n        this.$store.getters['network/globalNetworkSettings'][\n          this.tabIndex\n        ].defaultGateway;\n\n      this.currentHostname =\n        this.$store.getters['network/globalNetworkSettings'][\n          this.tabIndex\n        ].hostname;\n\n      this.currentMacAddress =\n        this.$store.getters['network/globalNetworkSettings'][\n          this.tabIndex\n        ].macAddress;\n      this.ipv6DefaultGateway =\n        this.$store.getters['network/globalNetworkSettings'][\n          this.tabIndex\n        ].ipv6DefaultGateway;\n    },\n    getTabIndex(selectedIndex) {\n      this.tabIndex = selectedIndex;\n      this.$store.dispatch('network/setSelectedTabIndex', this.tabIndex);\n      this.$store.dispatch(\n        'network/setSelectedTabId',\n        this.ethernetData[selectedIndex].Id,\n      );\n      this.getModalInfo();\n    },\n    saveIpv4Address(modalFormData) {\n      this.startLoader();\n      this.$store\n        .dispatch('network/saveIpv4Address', modalFormData)\n        .then((message) => this.successToast(message))\n        .catch(({ message }) => this.errorToast(message))\n        .finally(() => this.endLoader());\n    },\n    saveIpv6Address(modalFormData) {\n      this.startLoader();\n      this.$store\n        .dispatch('network/saveIpv6Address', modalFormData)\n        .then((message) => this.successToast(message))\n        .catch(({ message }) => this.errorToast(message))\n        .finally(() => this.endLoader());\n    },\n    saveDnsAddress(modalFormData) {\n      this.startLoader();\n      this.$store\n        .dispatch('network/saveDnsAddress', modalFormData)\n        .then((message) => this.successToast(message))\n        .catch(({ message }) => this.errorToast(message))\n        .finally(() => this.endLoader());\n    },\n    saveSettings(modalFormData) {\n      this.startLoader();\n      this.$store\n        .dispatch('network/saveSettings', modalFormData)\n        .then((message) => this.successToast(message))\n        .catch(({ message }) => this.errorToast(message))\n        .finally(() => this.endLoader());\n    },\n  },\n};\n</script>\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;uBACEA,YAAA,CA4CcC,sBAAA;IA5CDC,KAAK,EAAC;EAAI;IADzBC,OAAA,EAAAC,QAAA,CAEI,MAA+D,CAA/DC,YAAA,CAA+DC,qBAAA;MAAlDC,WAAW,EAAEC,KAAA,CAAAC,EAAE;8CAC5BC,mBAAA,wCAA2C,EAC3CL,YAAA,CAA2BM,kCAAA,GAC3BD,mBAAA,oBAAuB,E,gBACvBL,YAAA,CA4BeO,uBAAA;MAlCnBT,OAAA,EAAAC,QAAA,CAOM,MA0BQ,CA1BRC,YAAA,CA0BQQ,gBAAA;QAjCdV,OAAA,EAAAC,QAAA,CAQQ,MAwBQ,CAxBRC,YAAA,CAwBQS,gBAAA;UAhChBX,OAAA,EAAAC,QAAA,CASU,MAsBS,CAtBTC,YAAA,CAsBSU,iBAAA;YAtBD,SAAO,EAAP;UAAO;YATzBZ,OAAA,EAAAC,QAAA,CAUY,MAoBS,CApBTC,YAAA,CAoBSW,iBAAA;cAnBP,uBAAqB,EAAC,kBAAkB;cACxCC,IAAI,EAAJ,EAAI;cACJ,eAAa,EAAC;;cAb5Bd,OAAA,EAAAC,QAAA,CAgBgB,MAAqC,E,kBADvCc,mBAAA,CAcQC,SAAA,QA7BtBC,WAAA,CAgBwCC,IAAA,CAAAC,YAAY,EAhBpD,CAgBwBC,IAAI,EAAEC,KAAK;qCADrBxB,YAAA,CAcQyB,gBAAA;kBAZLC,GAAG,EAAEH,IAAI,CAACI,EAAE;kBACZC,KAAK,EAAEL,IAAI,CAACI,EAAE;kBACdE,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,WAAW,CAACR,KAAK;;kBAnBzCrB,OAAA,EAAAC,QAAA,CAqBgB,MAA2B,CAA3BM,mBAAA,wBAA2B,EAC3BL,YAAA,CAAoD4B,qCAAA;oBAAvB,WAAS,EAAEzB,KAAA,CAAA0B;kBAAQ,wCAChDxB,mBAAA,gBAAmB,EACnBL,YAAA,CAAqC8B,sBAAA;oBAAvB,WAAS,EAAE3B,KAAA,CAAA0B;kBAAQ,wCACjCxB,mBAAA,gBAAmB,EACnBL,YAAA,CAAqC+B,sBAAA;oBAAvB,WAAS,EAAE5B,KAAA,CAAA0B;kBAAQ,wCACjCxB,mBAAA,sBAAyB,EACzBL,YAAA,CAAmCgC,oBAAA;oBAAvB,WAAS,EAAE7B,KAAA,CAAA0B;kBAAQ,uC;kBA5B/CI,CAAA;;;cAAAA,CAAA;;YAAAA,CAAA;;UAAAA,CAAA;;QAAAA,CAAA;;MAAAA,CAAA;wCAM0BjB,IAAA,CAAAC,YAAY,E,GA6BlCZ,mBAAA,YAAe,EACfL,YAAA,CAAsEkC,qBAAA;MAAzD,iBAAe,EAAE/B,KAAA,CAAAgC,cAAc;MAAGC,IAAE,EAAEV,QAAA,CAAAW;0DACnDrC,YAAA,CAAoCsC,qBAAA;MAAvBF,IAAE,EAAEV,QAAA,CAAAa;IAAe,mCAChCvC,YAAA,CAAkCwC,oBAAA;MAAtBJ,IAAE,EAAEV,QAAA,CAAAe;IAAc,mCAC9BzC,YAAA,CAAiE0C,yBAAA;MAAhDC,QAAQ,EAAExC,KAAA,CAAAyC,eAAe;MAAGR,IAAE,EAAEV,QAAA,CAAAmB;mDACjD7C,YAAA,CAAyE8C,4BAAA;MAArD,aAAW,EAAE3C,KAAA,CAAA4C,iBAAiB;MAAGX,IAAE,EAAEV,QAAA,CAAAmB;sDACzD7C,YAAA,CAGEgD,gCAAA;MAFC,iBAAe,EAAE7C,KAAA,CAAA8C,kBAAkB;MACnCb,IAAE,EAAEV,QAAA,CAAAmB;;IA3CXZ,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}