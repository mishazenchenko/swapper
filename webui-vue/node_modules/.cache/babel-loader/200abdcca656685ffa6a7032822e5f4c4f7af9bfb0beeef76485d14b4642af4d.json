{"ast":null,"code":"import IconSwitch from '@carbon/icons-vue/es/arrows--horizontal/20';\nimport PageSection from '@/components/Global/PageSection';\nimport LoadingBarMixin, { loading } from '@/components/Mixins/LoadingBarMixin';\nimport BVToastMixin from '@/components/Mixins/BVToastMixin';\nimport ModalSwitchToRunning from './FirmwareModalSwitchToRunning';\nimport { useI18n } from 'vue-i18n';\nimport i18n from '@/i18n';\nexport default {\n  components: {\n    IconSwitch,\n    ModalSwitchToRunning,\n    PageSection\n  },\n  mixins: [BVToastMixin, LoadingBarMixin],\n  props: {\n    isPageDisabled: {\n      required: true,\n      type: Boolean,\n      default: false\n    },\n    isServerOff: {\n      required: true,\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n      $t: useI18n().t,\n      loading,\n      switchToBackupImageDisabled: process.env.VUE_APP_SWITCH_TO_BACKUP_IMAGE_DISABLED === 'true'\n    };\n  },\n  computed: {\n    isSingleFileUploadEnabled() {\n      return this.$store.getters['firmware/isSingleFileUploadEnabled'];\n    },\n    sectionTitle() {\n      if (this.isSingleFileUploadEnabled) {\n        return i18n.global.t('pageFirmware.sectionTitleBmcCardsCombined');\n      }\n      return i18n.global.t('pageFirmware.sectionTitleBmcCards');\n    },\n    running() {\n      return this.$store.getters['firmware/activeBmcFirmware'];\n    },\n    backup() {\n      return this.$store.getters['firmware/backupBmcFirmware'];\n    },\n    runningVersion() {\n      return this.running?.version || '--';\n    },\n    backupVersion() {\n      return this.backup?.version || '--';\n    },\n    backupStatus() {\n      return this.backup?.status || null;\n    },\n    showBackupImageStatus() {\n      return this.backupStatus === 'Critical' || this.backupStatus === 'Warning';\n    }\n  },\n  methods: {\n    switchToRunning() {\n      this.startLoader();\n      const timerId = setTimeout(() => {\n        this.endLoader();\n        this.infoToast(i18n.global.t('pageFirmware.toast.verifySwitchMessage'), {\n          title: i18n.global.t('pageFirmware.toast.verifySwitch'),\n          refreshAction: true\n        });\n      }, 60000);\n      this.$store.dispatch('firmware/switchBmcFirmwareAndReboot').then(() => this.infoToast(i18n.global.t('pageFirmware.toast.rebootStartedMessage'), {\n        title: i18n.global.t('pageFirmware.toast.rebootStarted')\n      })).catch(({\n        message\n      }) => {\n        this.errorToast(message);\n        clearTimeout(timerId);\n        this.endLoader();\n      });\n    }\n  }\n};","map":{"version":3,"names":["IconSwitch","PageSection","LoadingBarMixin","loading","BVToastMixin","ModalSwitchToRunning","useI18n","i18n","components","mixins","props","isPageDisabled","required","type","Boolean","default","isServerOff","data","$t","t","switchToBackupImageDisabled","process","env","VUE_APP_SWITCH_TO_BACKUP_IMAGE_DISABLED","computed","isSingleFileUploadEnabled","$store","getters","sectionTitle","global","running","backup","runningVersion","version","backupVersion","backupStatus","status","showBackupImageStatus","methods","switchToRunning","startLoader","timerId","setTimeout","endLoader","infoToast","title","refreshAction","dispatch","then","catch","message","errorToast","clearTimeout"],"sources":["/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/src/views/Operations/Firmware/FirmwareCardsBmc.vue"],"sourcesContent":["<template>\n  <div>\n    <page-section :section-title=\"sectionTitle\">\n      <b-card-group deck>\n        <!-- Running image -->\n        <b-card>\n          <template #header>\n            <p class=\"font-weight-bold m-0\">\n              {{ $t('pageFirmware.cardTitleRunning') }}\n            </p>\n          </template>\n          <dl class=\"mb-0\">\n            <dt>{{ $t('pageFirmware.cardBodyVersion') }}</dt>\n            <dd class=\"mb-0\">{{ runningVersion }}</dd>\n          </dl>\n        </b-card>\n\n        <!-- Backup image -->\n        <b-card>\n          <template #header>\n            <p class=\"font-weight-bold m-0\">\n              {{ $t('pageFirmware.cardTitleBackup') }}\n            </p>\n          </template>\n          <dl>\n            <dt>{{ $t('pageFirmware.cardBodyVersion') }}</dt>\n            <dd>\n              <status-icon v-if=\"showBackupImageStatus\" status=\"danger\" />\n              <span v-if=\"showBackupImageStatus\" class=\"sr-only\">\n                {{ backupStatus }}\n              </span>\n              {{ backupVersion }}\n            </dd>\n          </dl>\n          <b-btn\n            v-if=\"!switchToBackupImageDisabled\"\n            v-b-modal.modal-switch-to-running\n            data-test-id=\"firmware-button-switchToRunning\"\n            variant=\"link\"\n            size=\"sm\"\n            class=\"py-0 px-1 mt-2\"\n            :disabled=\"isPageDisabled || !backup || !isServerOff\"\n          >\n            <icon-switch class=\"d-none d-sm-inline-block\" />\n            {{ $t('pageFirmware.cardActionSwitchToRunning') }}\n          </b-btn>\n        </b-card>\n      </b-card-group>\n    </page-section>\n    <modal-switch-to-running :backup=\"backupVersion\" @ok=\"switchToRunning\" />\n  </div>\n</template>\n\n<script>\nimport IconSwitch from '@carbon/icons-vue/es/arrows--horizontal/20';\nimport PageSection from '@/components/Global/PageSection';\nimport LoadingBarMixin, { loading } from '@/components/Mixins/LoadingBarMixin';\nimport BVToastMixin from '@/components/Mixins/BVToastMixin';\n\nimport ModalSwitchToRunning from './FirmwareModalSwitchToRunning';\nimport { useI18n } from 'vue-i18n';\nimport i18n from '@/i18n';\n\nexport default {\n  components: { IconSwitch, ModalSwitchToRunning, PageSection },\n  mixins: [BVToastMixin, LoadingBarMixin],\n  props: {\n    isPageDisabled: {\n      required: true,\n      type: Boolean,\n      default: false,\n    },\n    isServerOff: {\n      required: true,\n      type: Boolean,\n      default: false,\n    },\n  },\n  data() {\n    return {\n      $t: useI18n().t,\n      loading,\n      switchToBackupImageDisabled:\n        process.env.VUE_APP_SWITCH_TO_BACKUP_IMAGE_DISABLED === 'true',\n    };\n  },\n  computed: {\n    isSingleFileUploadEnabled() {\n      return this.$store.getters['firmware/isSingleFileUploadEnabled'];\n    },\n    sectionTitle() {\n      if (this.isSingleFileUploadEnabled) {\n        return i18n.global.t('pageFirmware.sectionTitleBmcCardsCombined');\n      }\n      return i18n.global.t('pageFirmware.sectionTitleBmcCards');\n    },\n    running() {\n      return this.$store.getters['firmware/activeBmcFirmware'];\n    },\n    backup() {\n      return this.$store.getters['firmware/backupBmcFirmware'];\n    },\n    runningVersion() {\n      return this.running?.version || '--';\n    },\n    backupVersion() {\n      return this.backup?.version || '--';\n    },\n    backupStatus() {\n      return this.backup?.status || null;\n    },\n    showBackupImageStatus() {\n      return (\n        this.backupStatus === 'Critical' || this.backupStatus === 'Warning'\n      );\n    },\n  },\n  methods: {\n    switchToRunning() {\n      this.startLoader();\n      const timerId = setTimeout(() => {\n        this.endLoader();\n        this.infoToast(\n          i18n.global.t('pageFirmware.toast.verifySwitchMessage'),\n          {\n            title: i18n.global.t('pageFirmware.toast.verifySwitch'),\n            refreshAction: true,\n          },\n        );\n      }, 60000);\n\n      this.$store\n        .dispatch('firmware/switchBmcFirmwareAndReboot')\n        .then(() =>\n          this.infoToast(\n            i18n.global.t('pageFirmware.toast.rebootStartedMessage'),\n            {\n              title: i18n.global.t('pageFirmware.toast.rebootStarted'),\n            },\n          ),\n        )\n        .catch(({ message }) => {\n          this.errorToast(message);\n          clearTimeout(timerId);\n          this.endLoader();\n        });\n    },\n  },\n};\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}