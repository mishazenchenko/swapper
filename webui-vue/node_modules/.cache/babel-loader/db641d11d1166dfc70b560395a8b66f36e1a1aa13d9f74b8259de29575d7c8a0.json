{"ast":null,"code":"import VuelidateMixin from '@/components/Mixins/VuelidateMixin.js';\nimport { required } from '@vuelidate/validators';\nimport { helpers } from 'vuelidate/lib/validators';\nimport { useI18n } from 'vue-i18n';\nimport { useVuelidate } from '@vuelidate/core';\nconst validateIpv6 = helpers.regex('validateIpv6', /^((?:[a-fA-F0-9]{1,4}:){7}[a-fA-F0-9]{1,4}|(?:[a-fA-F0-9]{1,4}:){1,7}:|(?:[a-fA-F0-9]{1,4}:){1,6}:[a-fA-F0-9]{1,4}|(?:[a-fA-F0-9]{1,4}:){1,5}(?::[a-fA-F0-9]{1,4}){1,2}|(?:[a-fA-F0-9]{1,4}:){1,4}(?::[a-fA-F0-9]{1,4}){1,3}|(?:[a-fA-F0-9]{1,4}:){1,3}(?::[a-fA-F0-9]{1,4}){1,4}|(?:[a-fA-F0-9]{1,4}:){1,2}(?::[a-fA-F0-9]{1,4}){1,5}|[a-fA-F0-9]{1,4}:(?::[a-fA-F0-9]{1,4}){1,6}|:(?::[a-fA-F0-9]{1,4}){1,7}|::|(?:[a-fA-F0-9]{1,4}:){6}(?:[0-9]{1,3}\\.){3}[0-9]{1,3}|::(?:[a-fA-F0-9]{1,4}:){0,5}(?:[0-9]{1,3}\\.){3}[0-9]{1,3}|(?:[a-fA-F0-9]{1,4}:){1,5}:(?:[0-9]{1,3}\\.){3}[0-9]{1,3}|(?:[a-fA-F0-9]{1,4}:){1,4}:(?:[0-9]{1,3}\\.){3}[0-9]{1,3}|(?:[a-fA-F0-9]{1,4}:){1,3}:(?:[0-9]{1,3}\\.){3}[0-9]{1,3}|(?:[a-fA-F0-9]{1,4}:){1,2}:(?:[0-9]{1,3}\\.){3}[0-9]{1,3}|[a-fA-F0-9]{1,4}:(?:[0-9]{1,3}\\.){3}[0-9]{1,3}|::(?:[0-9]{1,3}\\.){3}[0-9]{1,3})$/);\nconst validatePrefixLength = helpers.regex('validatePrefixLength', /^(12[0-8]|1[0-9]|[1-9][0-9]|[0-9])$/);\nexport default {\n  mixins: [VuelidateMixin],\n  setup() {\n    return {\n      v$: useVuelidate()\n    };\n  },\n  data() {\n    return {\n      $t: useI18n().t,\n      form: {\n        ipAddress: '',\n        prefixLength: ''\n      }\n    };\n  },\n  validations() {\n    return {\n      form: {\n        ipAddress: {\n          required,\n          validateIpv6\n        },\n        prefixLength: {\n          required,\n          validatePrefixLength\n        }\n      }\n    };\n  },\n  methods: {\n    handleSubmit() {\n      this.v$.$touch();\n      if (this.v$.$invalid) return;\n      this.$emit('ok', {\n        Address: this.form.ipAddress,\n        PrefixLength: parseInt(this.form.prefixLength)\n      });\n      this.closeModal();\n    },\n    closeModal() {\n      this.$nextTick(() => {\n        this.$refs.modal.hide();\n      });\n    },\n    resetForm() {\n      this.form.ipAddress = null;\n      this.form.prefixLength = null;\n      this.v$.$reset();\n      this.$emit('hidden');\n    },\n    onOk(bvModalEvt) {\n      // prevent modal close\n      bvModalEvt.preventDefault();\n      this.handleSubmit();\n    }\n  }\n};","map":{"version":3,"names":["VuelidateMixin","required","helpers","useI18n","useVuelidate","validateIpv6","regex","validatePrefixLength","mixins","setup","v$","data","$t","t","form","ipAddress","prefixLength","validations","methods","handleSubmit","$touch","$invalid","$emit","Address","PrefixLength","parseInt","closeModal","$nextTick","$refs","modal","hide","resetForm","$reset","onOk","bvModalEvt","preventDefault"],"sources":["/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/src/views/Settings/Network/ModalIpv6.vue"],"sourcesContent":["<template>\n  <b-modal\n    id=\"modal-add-ipv6\"\n    ref=\"modal\"\n    :title=\"$t('pageNetwork.table.addIpv6Address')\"\n    @hidden=\"resetForm\"\n  >\n    <b-form id=\"form-ipv6\" @submit.prevent=\"handleSubmit\">\n      <b-row>\n        <b-col sm=\"6\">\n          <b-form-group\n            :label=\"$t('pageNetwork.modal.ipAddress')\"\n            label-for=\"ipAddress\"\n          >\n            <b-form-input\n              id=\"ipAddress\"\n              v-model=\"form.ipAddress\"\n              type=\"text\"\n              :state=\"getValidationState(v$.form.ipAddress)\"\n              @input=\"v$.form.ipAddress.$touch()\"\n            />\n            <b-form-invalid-feedback role=\"alert\">\n              <template v-if=\"v$.form.ipAddress.required.$invalid\">\n                {{ $t('global.form.fieldRequired') }}\n              </template>\n              <template v-if=\"v$.form.ipAddress.validateIpv6.$invalid\">\n                {{ $t('global.form.invalidFormat') }}\n              </template>\n            </b-form-invalid-feedback>\n          </b-form-group>\n        </b-col>\n        <b-col sm=\"6\">\n          <b-form-group\n            :label=\"$t('pageNetwork.modal.prefixLength')\"\n            label-for=\"prefixLength\"\n          >\n            <b-form-input\n              id=\"prefixLength\"\n              v-model=\"form.prefixLength\"\n              type=\"text\"\n              :state=\"getValidationState(v$.form.prefixLength)\"\n              @input=\"v$.form.prefixLength.$touch()\"\n            />\n            <b-form-invalid-feedback role=\"alert\">\n              <template v-if=\"v$.form.prefixLength.required.$invalid\">\n                {{ $t('global.form.fieldRequired') }}\n              </template>\n              <template\n                v-if=\"v$.form.prefixLength.validatePrefixLength.$invalid\"\n              >\n                {{ $t('global.form.invalidFormat') }}\n              </template>\n            </b-form-invalid-feedback>\n          </b-form-group>\n        </b-col>\n      </b-row>\n    </b-form>\n    <template #modal-footer=\"{ cancel }\">\n      <b-button variant=\"secondary\" @click=\"cancel()\">\n        {{ $t('global.action.cancel') }}\n      </b-button>\n      <b-button form=\"form-ipv6\" type=\"submit\" variant=\"primary\" @click=\"onOk\">\n        {{ $t('global.action.add') }}\n      </b-button>\n    </template>\n  </b-modal>\n</template>\n\n<script>\nimport VuelidateMixin from '@/components/Mixins/VuelidateMixin.js';\nimport { required } from '@vuelidate/validators';\nimport { helpers } from 'vuelidate/lib/validators';\nimport { useI18n } from 'vue-i18n';\nimport { useVuelidate } from '@vuelidate/core';\n\nconst validateIpv6 = helpers.regex(\n  'validateIpv6',\n  /^((?:[a-fA-F0-9]{1,4}:){7}[a-fA-F0-9]{1,4}|(?:[a-fA-F0-9]{1,4}:){1,7}:|(?:[a-fA-F0-9]{1,4}:){1,6}:[a-fA-F0-9]{1,4}|(?:[a-fA-F0-9]{1,4}:){1,5}(?::[a-fA-F0-9]{1,4}){1,2}|(?:[a-fA-F0-9]{1,4}:){1,4}(?::[a-fA-F0-9]{1,4}){1,3}|(?:[a-fA-F0-9]{1,4}:){1,3}(?::[a-fA-F0-9]{1,4}){1,4}|(?:[a-fA-F0-9]{1,4}:){1,2}(?::[a-fA-F0-9]{1,4}){1,5}|[a-fA-F0-9]{1,4}:(?::[a-fA-F0-9]{1,4}){1,6}|:(?::[a-fA-F0-9]{1,4}){1,7}|::|(?:[a-fA-F0-9]{1,4}:){6}(?:[0-9]{1,3}\\.){3}[0-9]{1,3}|::(?:[a-fA-F0-9]{1,4}:){0,5}(?:[0-9]{1,3}\\.){3}[0-9]{1,3}|(?:[a-fA-F0-9]{1,4}:){1,5}:(?:[0-9]{1,3}\\.){3}[0-9]{1,3}|(?:[a-fA-F0-9]{1,4}:){1,4}:(?:[0-9]{1,3}\\.){3}[0-9]{1,3}|(?:[a-fA-F0-9]{1,4}:){1,3}:(?:[0-9]{1,3}\\.){3}[0-9]{1,3}|(?:[a-fA-F0-9]{1,4}:){1,2}:(?:[0-9]{1,3}\\.){3}[0-9]{1,3}|[a-fA-F0-9]{1,4}:(?:[0-9]{1,3}\\.){3}[0-9]{1,3}|::(?:[0-9]{1,3}\\.){3}[0-9]{1,3})$/,\n);\n\nconst validatePrefixLength = helpers.regex(\n  'validatePrefixLength',\n  /^(12[0-8]|1[0-9]|[1-9][0-9]|[0-9])$/,\n);\n\nexport default {\n  mixins: [VuelidateMixin],\n  setup() {\n    return {\n      v$: useVuelidate(),\n    };\n  },\n  data() {\n    return {\n      $t: useI18n().t,\n      form: {\n        ipAddress: '',\n        prefixLength: '',\n      },\n    };\n  },\n  validations() {\n    return {\n      form: {\n        ipAddress: {\n          required,\n          validateIpv6,\n        },\n        prefixLength: {\n          required,\n          validatePrefixLength,\n        },\n      },\n    };\n  },\n  methods: {\n    handleSubmit() {\n      this.v$.$touch();\n      if (this.v$.$invalid) return;\n      this.$emit('ok', {\n        Address: this.form.ipAddress,\n        PrefixLength: parseInt(this.form.prefixLength),\n      });\n      this.closeModal();\n    },\n    closeModal() {\n      this.$nextTick(() => {\n        this.$refs.modal.hide();\n      });\n    },\n    resetForm() {\n      this.form.ipAddress = null;\n      this.form.prefixLength = null;\n      this.v$.$reset();\n      this.$emit('hidden');\n    },\n    onOk(bvModalEvt) {\n      // prevent modal close\n      bvModalEvt.preventDefault();\n      this.handleSubmit();\n    },\n  },\n};\n</script>\n"],"mappings":"AAqEA,OAAOA,cAAa,MAAO,uCAAuC;AAClE,SAASC,QAAO,QAAS,uBAAuB;AAChD,SAASC,OAAM,QAAS,0BAA0B;AAClD,SAASC,OAAM,QAAS,UAAU;AAClC,SAASC,YAAW,QAAS,iBAAiB;AAE9C,MAAMC,YAAW,GAAIH,OAAO,CAACI,KAAK,CAChC,cAAc,EACd,wzBACF,CAAC;AAED,MAAMC,oBAAmB,GAAIL,OAAO,CAACI,KAAK,CACxC,sBAAsB,EACtB,qCACF,CAAC;AAED,eAAe;EACbE,MAAM,EAAE,CAACR,cAAc,CAAC;EACxBS,KAAKA,CAAA,EAAG;IACN,OAAO;MACLC,EAAE,EAAEN,YAAY,CAAC;IACnB,CAAC;EACH,CAAC;EACDO,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,EAAE,EAAET,OAAO,CAAC,CAAC,CAACU,CAAC;MACfC,IAAI,EAAE;QACJC,SAAS,EAAE,EAAE;QACbC,YAAY,EAAE;MAChB;IACF,CAAC;EACH,CAAC;EACDC,WAAWA,CAAA,EAAG;IACZ,OAAO;MACLH,IAAI,EAAE;QACJC,SAAS,EAAE;UACTd,QAAQ;UACRI;QACF,CAAC;QACDW,YAAY,EAAE;UACZf,QAAQ;UACRM;QACF;MACF;IACF,CAAC;EACH,CAAC;EACDW,OAAO,EAAE;IACPC,YAAYA,CAAA,EAAG;MACb,IAAI,CAACT,EAAE,CAACU,MAAM,CAAC,CAAC;MAChB,IAAI,IAAI,CAACV,EAAE,CAACW,QAAQ,EAAE;MACtB,IAAI,CAACC,KAAK,CAAC,IAAI,EAAE;QACfC,OAAO,EAAE,IAAI,CAACT,IAAI,CAACC,SAAS;QAC5BS,YAAY,EAAEC,QAAQ,CAAC,IAAI,CAACX,IAAI,CAACE,YAAY;MAC/C,CAAC,CAAC;MACF,IAAI,CAACU,UAAU,CAAC,CAAC;IACnB,CAAC;IACDA,UAAUA,CAAA,EAAG;MACX,IAAI,CAACC,SAAS,CAAC,MAAM;QACnB,IAAI,CAACC,KAAK,CAACC,KAAK,CAACC,IAAI,CAAC,CAAC;MACzB,CAAC,CAAC;IACJ,CAAC;IACDC,SAASA,CAAA,EAAG;MACV,IAAI,CAACjB,IAAI,CAACC,SAAQ,GAAI,IAAI;MAC1B,IAAI,CAACD,IAAI,CAACE,YAAW,GAAI,IAAI;MAC7B,IAAI,CAACN,EAAE,CAACsB,MAAM,CAAC,CAAC;MAChB,IAAI,CAACV,KAAK,CAAC,QAAQ,CAAC;IACtB,CAAC;IACDW,IAAIA,CAACC,UAAU,EAAE;MACf;MACAA,UAAU,CAACC,cAAc,CAAC,CAAC;MAC3B,IAAI,CAAChB,YAAY,CAAC,CAAC;IACrB;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}