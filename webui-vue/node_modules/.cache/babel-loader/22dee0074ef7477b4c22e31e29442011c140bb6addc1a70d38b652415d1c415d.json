{"ast":null,"code":"import VuelidateMixin from '@/components/Mixins/VuelidateMixin.js';\nimport { useVuelidate } from '@vuelidate/core';\nimport { ipAddress, required } from '@vuelidate/validators';\nimport { useI18n } from 'vue-i18n';\nexport default {\n  mixins: [VuelidateMixin],\n  setup() {\n    return {\n      v$: useVuelidate()\n    };\n  },\n  data() {\n    return {\n      $t: useI18n().t,\n      form: {\n        staticDns: null\n      }\n    };\n  },\n  validations() {\n    return {\n      form: {\n        staticDns: {\n          required,\n          ipAddress\n        }\n      }\n    };\n  },\n  methods: {\n    handleSubmit() {\n      this.v$.$touch();\n      if (this.v$.$invalid) return;\n      this.$emit('ok', [this.form.staticDns]);\n      this.closeModal();\n    },\n    closeModal() {\n      this.$nextTick(() => {\n        this.$refs.modal.hide();\n      });\n    },\n    resetForm() {\n      this.form.staticDns = null;\n      this.v$.$reset();\n      this.$emit('hidden');\n    },\n    onOk(bvModalEvt) {\n      // prevent modal close\n      bvModalEvt.preventDefault();\n      this.handleSubmit();\n    }\n  }\n};","map":{"version":3,"names":["VuelidateMixin","useVuelidate","ipAddress","required","useI18n","mixins","setup","v$","data","$t","t","form","staticDns","validations","methods","handleSubmit","$touch","$invalid","$emit","closeModal","$nextTick","$refs","modal","hide","resetForm","$reset","onOk","bvModalEvt","preventDefault"],"sources":["/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/src/views/Settings/Network/ModalDns.vue"],"sourcesContent":["<template>\n  <b-modal\n    id=\"modal-dns\"\n    ref=\"modal\"\n    :title=\"$t('pageNetwork.table.addDnsAddress')\"\n    @hidden=\"resetForm\"\n  >\n    <b-form id=\"form-dns\" @submit.prevent=\"handleSubmit\">\n      <b-row>\n        <b-col sm=\"6\">\n          <b-form-group\n            :label=\"$t('pageNetwork.modal.staticDns')\"\n            label-for=\"staticDns\"\n          >\n            <b-form-input\n              id=\"staticDns\"\n              v-model=\"form.staticDns\"\n              type=\"text\"\n              :state=\"getValidationState(v$.form.staticDns)\"\n              @input=\"v$.form.staticDns.$touch()\"\n            />\n            <b-form-invalid-feedback role=\"alert\">\n              <template v-if=\"v$.form.staticDns.required.$invalid\">\n                {{ $t('global.form.fieldRequired') }}\n              </template>\n              <template v-if=\"v$.form.staticDns.ipAddress.$invalid\">\n                {{ $t('global.form.invalidFormat') }}\n              </template>\n            </b-form-invalid-feedback>\n          </b-form-group>\n        </b-col>\n      </b-row>\n    </b-form>\n    <template #modal-footer=\"{ cancel }\">\n      <b-button variant=\"secondary\" @click=\"cancel()\">\n        {{ $t('global.action.cancel') }}\n      </b-button>\n      <b-button form=\"form-dns\" type=\"submit\" variant=\"primary\" @click=\"onOk\">\n        {{ $t('global.action.add') }}\n      </b-button>\n    </template>\n  </b-modal>\n</template>\n\n<script>\nimport VuelidateMixin from '@/components/Mixins/VuelidateMixin.js';\nimport { useVuelidate } from '@vuelidate/core';\n\nimport { ipAddress, required } from '@vuelidate/validators';\nimport { useI18n } from 'vue-i18n';\n\nexport default {\n  mixins: [VuelidateMixin],\n  setup() {\n    return {\n      v$: useVuelidate(),\n    };\n  },\n  data() {\n    return {\n      $t: useI18n().t,\n      form: {\n        staticDns: null,\n      },\n    };\n  },\n  validations() {\n    return {\n      form: {\n        staticDns: {\n          required,\n          ipAddress,\n        },\n      },\n    };\n  },\n  methods: {\n    handleSubmit() {\n      this.v$.$touch();\n      if (this.v$.$invalid) return;\n      this.$emit('ok', [this.form.staticDns]);\n      this.closeModal();\n    },\n    closeModal() {\n      this.$nextTick(() => {\n        this.$refs.modal.hide();\n      });\n    },\n    resetForm() {\n      this.form.staticDns = null;\n      this.v$.$reset();\n      this.$emit('hidden');\n    },\n    onOk(bvModalEvt) {\n      // prevent modal close\n      bvModalEvt.preventDefault();\n      this.handleSubmit();\n    },\n  },\n};\n</script>\n"],"mappings":"AA6CA,OAAOA,cAAa,MAAO,uCAAuC;AAClE,SAASC,YAAW,QAAS,iBAAiB;AAE9C,SAASC,SAAS,EAAEC,QAAO,QAAS,uBAAuB;AAC3D,SAASC,OAAM,QAAS,UAAU;AAElC,eAAe;EACbC,MAAM,EAAE,CAACL,cAAc,CAAC;EACxBM,KAAKA,CAAA,EAAG;IACN,OAAO;MACLC,EAAE,EAAEN,YAAY,CAAC;IACnB,CAAC;EACH,CAAC;EACDO,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,EAAE,EAAEL,OAAO,CAAC,CAAC,CAACM,CAAC;MACfC,IAAI,EAAE;QACJC,SAAS,EAAE;MACb;IACF,CAAC;EACH,CAAC;EACDC,WAAWA,CAAA,EAAG;IACZ,OAAO;MACLF,IAAI,EAAE;QACJC,SAAS,EAAE;UACTT,QAAQ;UACRD;QACF;MACF;IACF,CAAC;EACH,CAAC;EACDY,OAAO,EAAE;IACPC,YAAYA,CAAA,EAAG;MACb,IAAI,CAACR,EAAE,CAACS,MAAM,CAAC,CAAC;MAChB,IAAI,IAAI,CAACT,EAAE,CAACU,QAAQ,EAAE;MACtB,IAAI,CAACC,KAAK,CAAC,IAAI,EAAE,CAAC,IAAI,CAACP,IAAI,CAACC,SAAS,CAAC,CAAC;MACvC,IAAI,CAACO,UAAU,CAAC,CAAC;IACnB,CAAC;IACDA,UAAUA,CAAA,EAAG;MACX,IAAI,CAACC,SAAS,CAAC,MAAM;QACnB,IAAI,CAACC,KAAK,CAACC,KAAK,CAACC,IAAI,CAAC,CAAC;MACzB,CAAC,CAAC;IACJ,CAAC;IACDC,SAASA,CAAA,EAAG;MACV,IAAI,CAACb,IAAI,CAACC,SAAQ,GAAI,IAAI;MAC1B,IAAI,CAACL,EAAE,CAACkB,MAAM,CAAC,CAAC;MAChB,IAAI,CAACP,KAAK,CAAC,QAAQ,CAAC;IACtB,CAAC;IACDQ,IAAIA,CAACC,UAAU,EAAE;MACf;MACAA,UAAU,CAACC,cAAc,CAAC,CAAC;MAC3B,IAAI,CAACb,YAAY,CAAC,CAAC;IACrB;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}