{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"sr-only\"\n};\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = {\n  key: 1\n};\nconst _hoisted_4 = {\n  key: 1\n};\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"section-divider mb-3 mt-3\"\n}, null, -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_search = _resolveComponent(\"search\");\n  const _component_b_col = _resolveComponent(\"b-col\");\n  const _component_table_cell_count = _resolveComponent(\"table-cell-count\");\n  const _component_b_row = _resolveComponent(\"b-row\");\n  const _component_icon_chevron = _resolveComponent(\"icon-chevron\");\n  const _component_b_button = _resolveComponent(\"b-button\");\n  const _component_status_icon = _resolveComponent(\"status-icon\");\n  const _component_b_form_checkbox = _resolveComponent(\"b-form-checkbox\");\n  const _component_b_container = _resolveComponent(\"b-container\");\n  const _component_b_table = _resolveComponent(\"b-table\");\n  const _component_page_section = _resolveComponent(\"page-section\");\n  return _openBlock(), _createBlock(_component_page_section, {\n    \"section-title\": $data.$t('pageInventory.dimmSlot')\n  }, {\n    default: _withCtx(() => [_createVNode(_component_b_row, {\n      class: \"align-items-end\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_b_col, {\n        sm: \"6\",\n        md: \"5\",\n        xl: \"4\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_search, {\n          onChangeSearch: _ctx.onChangeSearchInput,\n          onClearSearch: _ctx.onClearSearchInput\n        }, null, 8 /* PROPS */, [\"onChangeSearch\", \"onClearSearch\"])], undefined, true),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_b_col, {\n        sm: \"6\",\n        md: \"3\",\n        xl: \"2\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_table_cell_count, {\n          \"filtered-items-count\": $options.filteredRows,\n          \"total-number-of-cells\": $options.dimms.length\n        }, null, 8 /* PROPS */, [\"filtered-items-count\", \"total-number-of-cells\"])], undefined, true),\n        _: 1 /* STABLE */\n      })], undefined, true),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_b_table, {\n      \"sort-icon-left\": \"\",\n      \"no-sort-reset\": \"\",\n      hover: \"\",\n      \"sort-by\": \"health\",\n      responsive: \"md\",\n      \"show-empty\": \"\",\n      items: $options.dimms,\n      fields: $data.fields,\n      \"sort-desc\": true,\n      \"sort-compare\": $options.sortCompare,\n      filter: $data.searchFilter,\n      \"empty-text\": $data.$t('global.table.emptyMessage'),\n      \"empty-filtered-text\": $data.$t('global.table.emptySearchMessage'),\n      busy: $data.isBusy,\n      onFiltered: $options.onFiltered\n    }, {\n      \"cell(expandRow)\": _withCtx(row => [_createVNode(_component_b_button, {\n        variant: \"link\",\n        \"data-test-id\": \"hardwareStatus-button-expandDimms\",\n        title: $data.expandRowLabel,\n        class: \"btn-icon-only\",\n        onClick: $event => _ctx.toggleRowDetails(row)\n      }, {\n        default: _withCtx(() => [_createVNode(_component_icon_chevron), _createElementVNode(\"span\", _hoisted_1, _toDisplayString($data.expandRowLabel), 1 /* TEXT */)], undefined, true),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"title\", \"onClick\"])]),\n      \"cell(health)\": _withCtx(({\n        value\n      }) => [_createVNode(_component_status_icon, {\n        status: _ctx.statusIcon(value)\n      }, null, 8 /* PROPS */, [\"status\"]), _createTextVNode(\" \" + _toDisplayString(value), 1 /* TEXT */)]),\n      \"cell(statusState)\": _withCtx(({\n        value\n      }) => [_createVNode(_component_status_icon, {\n        status: $options.statusStateIcon(value)\n      }, null, 8 /* PROPS */, [\"status\"]), _createTextVNode(\" \" + _toDisplayString(value), 1 /* TEXT */)]),\n      \"cell(identifyLed)\": _withCtx(row => [$options.hasIdentifyLed(row.item.identifyLed) ? (_openBlock(), _createBlock(_component_b_form_checkbox, {\n        key: 0,\n        modelValue: row.item.identifyLed,\n        \"onUpdate:modelValue\": $event => row.item.identifyLed = $event,\n        name: \"switch\",\n        switch: \"\",\n        onChange: $event => $options.toggleIdentifyLedValue(row.item)\n      }, {\n        default: _withCtx(() => [row.item.identifyLed ? (_openBlock(), _createElementBlock(\"span\", _hoisted_2, _toDisplayString($data.$t('global.status.on')), 1 /* TEXT */)) : (_openBlock(), _createElementBlock(\"span\", _hoisted_3, _toDisplayString($data.$t('global.status.off')), 1 /* TEXT */))], undefined, true),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"modelValue\", \"onUpdate:modelValue\", \"onChange\"])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_4, \"--\"))]),\n      \"row-details\": _withCtx(({\n        item\n      }) => [_createVNode(_component_b_container, {\n        fluid: \"\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_b_row, null, {\n          default: _withCtx(() => [_createVNode(_component_b_col, {\n            sm: \"6\",\n            xl: \"6\"\n          }, {\n            default: _withCtx(() => [_createElementVNode(\"dl\", null, [_createCommentVNode(\" Manufacturer \"), _createElementVNode(\"dt\", null, _toDisplayString($data.$t('pageInventory.table.manufacturer')) + \":\", 1 /* TEXT */), _createElementVNode(\"dd\", null, _toDisplayString(_ctx.dataFormatter(item.manufacturer)), 1 /* TEXT */)]), _createElementVNode(\"dl\", null, [_createCommentVNode(\" Part Number \"), _createElementVNode(\"dt\", null, _toDisplayString($data.$t('pageInventory.table.partNumber')) + \":\", 1 /* TEXT */), _createElementVNode(\"dd\", null, _toDisplayString(_ctx.dataFormatter(item.partNumber)), 1 /* TEXT */)]), _createElementVNode(\"dl\", null, [_createCommentVNode(\" Serial Number \"), _createElementVNode(\"dt\", null, _toDisplayString($data.$t('pageInventory.table.serialNumber')) + \":\", 1 /* TEXT */), _createElementVNode(\"dd\", null, _toDisplayString(_ctx.dataFormatter(item.serialNumber)), 1 /* TEXT */)]), _createElementVNode(\"dl\", null, [_createCommentVNode(\" Spare Part Number \"), _createElementVNode(\"dt\", null, _toDisplayString($data.$t('pageInventory.table.sparePartNumber')) + \":\", 1 /* TEXT */), _createElementVNode(\"dd\", null, _toDisplayString(_ctx.dataFormatter(item.sparePartNumber)), 1 /* TEXT */)]), _createElementVNode(\"dl\", null, [_createCommentVNode(\" Model \"), _createElementVNode(\"dt\", null, _toDisplayString($data.$t('pageInventory.table.model')) + \":\", 1 /* TEXT */), _createElementVNode(\"dd\", null, _toDisplayString(_ctx.dataFormatter(item.model)), 1 /* TEXT */)])], undefined, true),\n            _: 2 /* DYNAMIC */\n          }, 1024 /* DYNAMIC_SLOTS */), _createVNode(_component_b_col, {\n            sm: \"6\",\n            xl: \"6\"\n          }, {\n            default: _withCtx(() => [_createElementVNode(\"dl\", null, [_createCommentVNode(\" Capacity MiB \"), _createElementVNode(\"dt\", null, _toDisplayString($data.$t('pageInventory.table.capacityMiB')) + \":\", 1 /* TEXT */), _createElementVNode(\"dd\", null, _toDisplayString(_ctx.dataFormatter(item.capacityMiB)) + \" \" + _toDisplayString($data.$t('unit.MiB')), 1 /* TEXT */)]), _createElementVNode(\"dl\", null, [_createCommentVNode(\" Rank Count \"), _createElementVNode(\"dt\", null, _toDisplayString($data.$t('pageInventory.table.rankCount')) + \":\", 1 /* TEXT */), _createElementVNode(\"dd\", null, _toDisplayString(_ctx.dataFormatter(item.rankCount)), 1 /* TEXT */)]), _createElementVNode(\"dl\", null, [_createCommentVNode(\" Status\"), _createElementVNode(\"dt\", null, _toDisplayString($data.$t('pageInventory.table.statusState')) + \":\", 1 /* TEXT */), _createElementVNode(\"dd\", null, _toDisplayString(_ctx.dataFormatter(item.statusState)), 1 /* TEXT */)]), _createElementVNode(\"dl\", null, [_createCommentVNode(\" Enabled\"), _createElementVNode(\"dt\", null, _toDisplayString($data.$t('pageInventory.table.enabled')) + \":\", 1 /* TEXT */), _createElementVNode(\"dd\", null, _toDisplayString(_ctx.dataFormatter(item.enabled)), 1 /* TEXT */)])], undefined, true),\n            _: 2 /* DYNAMIC */\n          }, 1024 /* DYNAMIC_SLOTS */)], undefined, true),\n          _: 2 /* DYNAMIC */\n        }, 1024 /* DYNAMIC_SLOTS */), _hoisted_5, _createVNode(_component_b_row, null, {\n          default: _withCtx(() => [_createVNode(_component_b_col, {\n            sm: \"6\",\n            xl: \"6\"\n          }, {\n            default: _withCtx(() => [_createElementVNode(\"dl\", null, [_createCommentVNode(\" Description \"), _createElementVNode(\"dt\", null, _toDisplayString($data.$t('pageInventory.table.description')) + \":\", 1 /* TEXT */), _createElementVNode(\"dd\", null, _toDisplayString(_ctx.dataFormatter(item.description)), 1 /* TEXT */)]), _createElementVNode(\"dl\", null, [_createCommentVNode(\" Memory Type \"), _createElementVNode(\"dt\", null, _toDisplayString($data.$t('pageInventory.table.memoryType')) + \":\", 1 /* TEXT */), _createElementVNode(\"dd\", null, _toDisplayString(_ctx.dataFormatter(item.memoryType)), 1 /* TEXT */)]), _createElementVNode(\"dl\", null, [_createCommentVNode(\" Base Module Type \"), _createElementVNode(\"dt\", null, _toDisplayString($data.$t('pageInventory.table.baseModuleType')) + \":\", 1 /* TEXT */), _createElementVNode(\"dd\", null, _toDisplayString(_ctx.dataFormatter(item.baseModuleType)), 1 /* TEXT */)])], undefined, true),\n            _: 2 /* DYNAMIC */\n          }, 1024 /* DYNAMIC_SLOTS */), _createVNode(_component_b_col, {\n            sm: \"6\",\n            xl: \"6\"\n          }, {\n            default: _withCtx(() => [_createElementVNode(\"dl\", null, [_createCommentVNode(\" Bus Width Bits \"), _createElementVNode(\"dt\", null, _toDisplayString($data.$t('pageInventory.table.busWidthBits')) + \":\", 1 /* TEXT */), _createElementVNode(\"dd\", null, _toDisplayString(_ctx.dataFormatter(item.busWidthBits)) + \" \" + _toDisplayString($data.$t('unit.bit')), 1 /* TEXT */)]), _createElementVNode(\"dl\", null, [_createCommentVNode(\" Data Width Bits \"), _createElementVNode(\"dt\", null, _toDisplayString($data.$t('pageInventory.table.dataWidthBits')) + \":\", 1 /* TEXT */), _createElementVNode(\"dd\", null, _toDisplayString(_ctx.dataFormatter(item.dataWidthBits)) + \" \" + _toDisplayString($data.$t('unit.bit')), 1 /* TEXT */)]), _createElementVNode(\"dl\", null, [_createCommentVNode(\" Operating Speed Mhz \"), _createElementVNode(\"dt\", null, _toDisplayString($data.$t('pageInventory.table.operatingSpeedMhz')) + \":\", 1 /* TEXT */), _createElementVNode(\"dd\", null, _toDisplayString(_ctx.dataFormatter(item.operatingSpeedMhz)) + \" \" + _toDisplayString($data.$t('unit.MHz')), 1 /* TEXT */)]), _createElementVNode(\"dl\", null, [_createCommentVNode(\" Error Correction \"), _createElementVNode(\"dt\", null, _toDisplayString($data.$t('pageInventory.table.errorCorrection')) + \":\", 1 /* TEXT */), _createElementVNode(\"dd\", null, _toDisplayString(_ctx.dataFormatter(item.errorCorrection)), 1 /* TEXT */)])], undefined, true),\n            _: 2 /* DYNAMIC */\n          }, 1024 /* DYNAMIC_SLOTS */)], undefined, true),\n          _: 2 /* DYNAMIC */\n        }, 1024 /* DYNAMIC_SLOTS */)], undefined, true),\n        _: 2 /* DYNAMIC */\n      }, 1024 /* DYNAMIC_SLOTS */)]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"items\", \"fields\", \"sort-compare\", \"filter\", \"empty-text\", \"empty-filtered-text\", \"busy\", \"onFiltered\"])], undefined, true),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"section-title\"]);\n}","map":{"version":3,"names":["class","key","_createElementVNode","_createBlock","_component_page_section","$data","$t","default","_withCtx","_createVNode","_component_b_row","_component_b_col","sm","md","xl","_component_search","onChangeSearch","_ctx","onChangeSearchInput","onClearSearch","onClearSearchInput","_","_component_table_cell_count","$options","filteredRows","dimms","length","_component_b_table","hover","responsive","items","fields","sortCompare","filter","searchFilter","busy","isBusy","onFiltered","row","_component_b_button","variant","title","expandRowLabel","onClick","$event","toggleRowDetails","_component_icon_chevron","_hoisted_1","_toDisplayString","value","_component_status_icon","status","statusIcon","_createTextVNode","statusStateIcon","hasIdentifyLed","item","identifyLed","_component_b_form_checkbox","modelValue","name","switch","onChange","toggleIdentifyLedValue","_createElementBlock","_hoisted_2","_hoisted_3","_hoisted_4","_component_b_container","fluid","_createCommentVNode","dataFormatter","manufacturer","partNumber","serialNumber","sparePartNumber","model","capacityMiB","rankCount","statusState","enabled","_hoisted_5","description","memoryType","baseModuleType","busWidthBits","dataWidthBits","operatingSpeedMhz","errorCorrection"],"sources":["/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/src/views/HardwareStatus/Inventory/InventoryTableDimmSlot.vue"],"sourcesContent":["<template>\n  <page-section :section-title=\"$t('pageInventory.dimmSlot')\">\n    <b-row class=\"align-items-end\">\n      <b-col sm=\"6\" md=\"5\" xl=\"4\">\n        <search\n          @change-search=\"onChangeSearchInput\"\n          @clear-search=\"onClearSearchInput\"\n        />\n      </b-col>\n      <b-col sm=\"6\" md=\"3\" xl=\"2\">\n        <table-cell-count\n          :filtered-items-count=\"filteredRows\"\n          :total-number-of-cells=\"dimms.length\"\n        ></table-cell-count>\n      </b-col>\n    </b-row>\n    <b-table\n      sort-icon-left\n      no-sort-reset\n      hover\n      sort-by=\"health\"\n      responsive=\"md\"\n      show-empty\n      :items=\"dimms\"\n      :fields=\"fields\"\n      :sort-desc=\"true\"\n      :sort-compare=\"sortCompare\"\n      :filter=\"searchFilter\"\n      :empty-text=\"$t('global.table.emptyMessage')\"\n      :empty-filtered-text=\"$t('global.table.emptySearchMessage')\"\n      :busy=\"isBusy\"\n      @filtered=\"onFiltered\"\n    >\n      <!-- Expand chevron icon -->\n      <template #cell(expandRow)=\"row\">\n        <b-button\n          variant=\"link\"\n          data-test-id=\"hardwareStatus-button-expandDimms\"\n          :title=\"expandRowLabel\"\n          class=\"btn-icon-only\"\n          @click=\"toggleRowDetails(row)\"\n        >\n          <icon-chevron />\n          <span class=\"sr-only\">{{ expandRowLabel }}</span>\n        </b-button>\n      </template>\n\n      <!-- Health -->\n      <template #cell(health)=\"{ value }\">\n        <status-icon :status=\"statusIcon(value)\" />\n        {{ value }}\n      </template>\n\n      <!-- StatusState -->\n      <template #cell(statusState)=\"{ value }\">\n        <status-icon :status=\"statusStateIcon(value)\" />\n        {{ value }}\n      </template>\n\n      <!-- Toggle identify LED -->\n      <template #cell(identifyLed)=\"row\">\n        <b-form-checkbox\n          v-if=\"hasIdentifyLed(row.item.identifyLed)\"\n          v-model=\"row.item.identifyLed\"\n          name=\"switch\"\n          switch\n          @change=\"toggleIdentifyLedValue(row.item)\"\n        >\n          <span v-if=\"row.item.identifyLed\">\n            {{ $t('global.status.on') }}\n          </span>\n          <span v-else> {{ $t('global.status.off') }} </span>\n        </b-form-checkbox>\n        <div v-else>--</div>\n      </template>\n      <template #row-details=\"{ item }\">\n        <b-container fluid>\n          <b-row>\n            <b-col sm=\"6\" xl=\"6\">\n              <dl>\n                <!-- Manufacturer -->\n                <dt>{{ $t('pageInventory.table.manufacturer') }}:</dt>\n                <dd>{{ dataFormatter(item.manufacturer) }}</dd>\n              </dl>\n              <dl>\n                <!-- Part Number -->\n                <dt>{{ $t('pageInventory.table.partNumber') }}:</dt>\n                <dd>{{ dataFormatter(item.partNumber) }}</dd>\n              </dl>\n              <dl>\n                <!-- Serial Number -->\n                <dt>{{ $t('pageInventory.table.serialNumber') }}:</dt>\n                <dd>{{ dataFormatter(item.serialNumber) }}</dd>\n              </dl>\n              <dl>\n                <!-- Spare Part Number -->\n                <dt>{{ $t('pageInventory.table.sparePartNumber') }}:</dt>\n                <dd>{{ dataFormatter(item.sparePartNumber) }}</dd>\n              </dl>\n              <dl>\n                <!-- Model -->\n                <dt>{{ $t('pageInventory.table.model') }}:</dt>\n                <dd>{{ dataFormatter(item.model) }}</dd>\n              </dl>\n            </b-col>\n            <b-col sm=\"6\" xl=\"6\">\n              <dl>\n                <!-- Capacity MiB -->\n                <dt>{{ $t('pageInventory.table.capacityMiB') }}:</dt>\n                <dd>\n                  {{ dataFormatter(item.capacityMiB) }}\n                  {{ $t('unit.MiB') }}\n                </dd>\n              </dl>\n              <dl>\n                <!-- Rank Count -->\n                <dt>{{ $t('pageInventory.table.rankCount') }}:</dt>\n                <dd>{{ dataFormatter(item.rankCount) }}</dd>\n              </dl>\n              <dl>\n                <!-- Status-->\n                <dt>{{ $t('pageInventory.table.statusState') }}:</dt>\n                <dd>{{ dataFormatter(item.statusState) }}</dd>\n              </dl>\n              <dl>\n                <!-- Enabled-->\n                <dt>{{ $t('pageInventory.table.enabled') }}:</dt>\n                <dd>{{ dataFormatter(item.enabled) }}</dd>\n              </dl>\n            </b-col>\n          </b-row>\n          <div class=\"section-divider mb-3 mt-3\"></div>\n          <b-row>\n            <b-col sm=\"6\" xl=\"6\">\n              <dl>\n                <!-- Description -->\n                <dt>{{ $t('pageInventory.table.description') }}:</dt>\n                <dd>{{ dataFormatter(item.description) }}</dd>\n              </dl>\n              <dl>\n                <!-- Memory Type -->\n                <dt>{{ $t('pageInventory.table.memoryType') }}:</dt>\n                <dd>{{ dataFormatter(item.memoryType) }}</dd>\n              </dl>\n              <dl>\n                <!-- Base Module Type -->\n                <dt>{{ $t('pageInventory.table.baseModuleType') }}:</dt>\n                <dd>{{ dataFormatter(item.baseModuleType) }}</dd>\n              </dl>\n            </b-col>\n            <b-col sm=\"6\" xl=\"6\">\n              <dl>\n                <!-- Bus Width Bits -->\n                <dt>{{ $t('pageInventory.table.busWidthBits') }}:</dt>\n                <dd>\n                  {{ dataFormatter(item.busWidthBits) }}\n                  {{ $t('unit.bit') }}\n                </dd>\n              </dl>\n              <dl>\n                <!-- Data Width Bits -->\n                <dt>{{ $t('pageInventory.table.dataWidthBits') }}:</dt>\n                <dd>\n                  {{ dataFormatter(item.dataWidthBits) }}\n                  {{ $t('unit.bit') }}\n                </dd>\n              </dl>\n              <dl>\n                <!-- Operating Speed Mhz -->\n                <dt>{{ $t('pageInventory.table.operatingSpeedMhz') }}:</dt>\n                <dd>\n                  {{ dataFormatter(item.operatingSpeedMhz) }}\n                  {{ $t('unit.MHz') }}\n                </dd>\n              </dl>\n              <dl>\n                <!-- Error Correction -->\n                <dt>{{ $t('pageInventory.table.errorCorrection') }}:</dt>\n                <dd>{{ dataFormatter(item.errorCorrection) }}</dd>\n              </dl>\n            </b-col>\n          </b-row>\n        </b-container>\n      </template>\n    </b-table>\n  </page-section>\n</template>\n\n<script>\nimport PageSection from '@/components/Global/PageSection';\nimport IconChevron from '@carbon/icons-vue/es/chevron--down/20';\n\nimport StatusIcon from '@/components/Global/StatusIcon';\nimport TableCellCount from '@/components/Global/TableCellCount';\n\nimport BVToastMixin from '@/components/Mixins/BVToastMixin';\nimport DataFormatterMixin from '@/components/Mixins/DataFormatterMixin';\nimport TableSortMixin from '@/components/Mixins/TableSortMixin';\nimport Search from '@/components/Global/Search';\nimport SearchFilterMixin, {\n  searchFilter,\n} from '@/components/Mixins/SearchFilterMixin';\nimport TableRowExpandMixin, {\n  expandRowLabel,\n} from '@/components/Mixins/TableRowExpandMixin';\nimport { useI18n } from 'vue-i18n';\nimport i18n from '@/i18n';\n\nexport default {\n  components: { IconChevron, PageSection, StatusIcon, Search, TableCellCount },\n  mixins: [\n    BVToastMixin,\n    TableRowExpandMixin,\n    DataFormatterMixin,\n    TableSortMixin,\n    SearchFilterMixin,\n  ],\n  data() {\n    return {\n      $t: useI18n().t,\n      isBusy: true,\n      fields: [\n        {\n          key: 'expandRow',\n          label: '',\n          tdClass: 'table-row-expand',\n        },\n        {\n          key: 'id',\n          label: i18n.global.t('pageInventory.table.id'),\n          formatter: this.dataFormatter,\n        },\n        {\n          key: 'health',\n          label: i18n.global.t('pageInventory.table.health'),\n          formatter: this.dataFormatter,\n          tdClass: 'text-nowrap',\n        },\n        {\n          key: 'statusState',\n          label: i18n.global.t('pageInventory.table.state'),\n          formatter: this.dataFormatter,\n          tdClass: 'text-nowrap',\n        },\n        {\n          key: 'locationNumber',\n          label: i18n.global.t('pageInventory.table.locationNumber'),\n          formatter: this.dataFormatter,\n        },\n        {\n          key: 'identifyLed',\n          label: i18n.global.t('pageInventory.table.identifyLed'),\n          formatter: this.dataFormatter,\n        },\n      ],\n      searchFilter: searchFilter,\n      searchTotalFilteredRows: 0,\n      expandRowLabel: expandRowLabel,\n    };\n  },\n  computed: {\n    filteredRows() {\n      return this.searchFilter\n        ? this.searchTotalFilteredRows\n        : this.dimms.length;\n    },\n    dimms() {\n      return this.$store.getters['memory/dimms'];\n    },\n  },\n  created() {\n    this.$store.dispatch('memory/getDimms').finally(() => {\n      // Emit initial data fetch complete to parent component\n      this.$root.$emit('hardware-status-dimm-slot-complete');\n      this.isBusy = false;\n    });\n  },\n  methods: {\n    sortCompare(a, b, key) {\n      if (key === 'health') {\n        return this.sortStatus(a, b, key);\n      } else if (key === 'statusState') {\n        return this.sortStatusState(a, b, key);\n      }\n    },\n    onFiltered(filteredItems) {\n      this.searchTotalFilteredRows = filteredItems.length;\n    },\n    toggleIdentifyLedValue(row) {\n      this.$store\n        .dispatch('memory/updateIdentifyLedValue', {\n          uri: row.uri,\n          identifyLed: row.identifyLed,\n        })\n        .then((message) => this.successToast(message))\n        .catch(({ message }) => this.errorToast(message));\n    },\n    hasIdentifyLed(identifyLed) {\n      return typeof identifyLed === 'boolean';\n    },\n    statusStateIcon(status) {\n      switch (status) {\n        case 'Enabled':\n          return 'success';\n        case 'Absent':\n          return 'warning';\n        default:\n          return '';\n      }\n    },\n    sortStatusState(a, b, key) {\n      const statusState = ['Enabled', 'Absent'];\n      return statusState.indexOf(a[key]) - statusState.indexOf(b[key]);\n    },\n  },\n};\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}