{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, withCtx as _withCtx, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"sr-only\"\n};\nconst _hoisted_2 = {\n  class: \"sr-only\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_page_title = _resolveComponent(\"page-title\");\n  const _component_icon_add = _resolveComponent(\"icon-add\");\n  const _component_b_button = _resolveComponent(\"b-button\");\n  const _component_b_col = _resolveComponent(\"b-col\");\n  const _component_b_row = _resolveComponent(\"b-row\");\n  const _component_table_toolbar = _resolveComponent(\"table-toolbar\");\n  const _component_b_form_checkbox = _resolveComponent(\"b-form-checkbox\");\n  const _component_icon_trashcan = _resolveComponent(\"icon-trashcan\");\n  const _component_table_row_action = _resolveComponent(\"table-row-action\");\n  const _component_b_table = _resolveComponent(\"b-table\");\n  const _component_modal_add_destination = _resolveComponent(\"modal-add-destination\");\n  const _component_b_container = _resolveComponent(\"b-container\");\n  return _openBlock(), _createBlock(_component_b_container, {\n    fluid: \"xl\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_page_title, {\n      description: $data.$t('pageSnmpAlerts.pageDescription')\n    }, null, 8 /* PROPS */, [\"description\"]), _createVNode(_component_b_row, null, {\n      default: _withCtx(() => [_createVNode(_component_b_col, {\n        xl: \"9\",\n        class: \"text-right\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_b_button, {\n          variant: \"primary\",\n          onClick: $options.initModalAddDestination\n        }, {\n          default: _withCtx(() => [_createVNode(_component_icon_add), _createTextVNode(\" \" + _toDisplayString($data.$t('pageSnmpAlerts.addDestination')), 1 /* TEXT */)], undefined, true),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"onClick\"])], undefined, true),\n        _: 1 /* STABLE */\n      })], undefined, true),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_b_row, null, {\n      default: _withCtx(() => [_createVNode(_component_b_col, {\n        xl: \"9\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_table_toolbar, {\n          ref: \"toolbar\",\n          \"selected-items-count\": $data.selectedRows.length,\n          actions: $data.tableToolbarActions,\n          onClearSelected: _cache[0] || (_cache[0] = $event => _ctx.clearSelectedRows(_ctx.$refs.table)),\n          onBatchAction: $options.onBatchAction\n        }, null, 8 /* PROPS */, [\"selected-items-count\", \"actions\", \"onBatchAction\"]), _createVNode(_component_b_table, {\n          ref: \"table\",\n          responsive: \"md\",\n          selectable: \"\",\n          \"show-empty\": \"\",\n          \"no-select-on-click\": \"\",\n          hover: \"\",\n          fields: $data.fields,\n          items: $options.tableItems,\n          \"empty-text\": $data.$t('global.table.emptyMessage'),\n          onRowSelected: _cache[3] || (_cache[3] = $event => _ctx.onRowSelected($event, $options.tableItems.length))\n        }, {\n          \"head(checkbox)\": _withCtx(() => [_createVNode(_component_b_form_checkbox, {\n            modelValue: $data.tableHeaderCheckboxModel,\n            \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.tableHeaderCheckboxModel = $event),\n            \"data-test-id\": \"snmpAlerts-checkbox-selectAll\",\n            indeterminate: $data.tableHeaderCheckboxIndeterminate,\n            onChange: _cache[2] || (_cache[2] = $event => _ctx.onChangeHeaderCheckbox(_ctx.$refs.table))\n          }, {\n            default: _withCtx(() => [_createElementVNode(\"span\", _hoisted_1, _toDisplayString($data.$t('global.table.selectAll')), 1 /* TEXT */)], undefined, true),\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"modelValue\", \"indeterminate\"])]),\n          \"cell(checkbox)\": _withCtx(row => [_createVNode(_component_b_form_checkbox, {\n            modelValue: row.rowSelected,\n            \"onUpdate:modelValue\": $event => row.rowSelected = $event,\n            \"data-test-id\": `snmpAlerts-checkbox-selectRow-${row.index}`,\n            onChange: $event => _ctx.toggleSelectRow(_ctx.$refs.table, row.index)\n          }, {\n            default: _withCtx(() => [_createElementVNode(\"span\", _hoisted_2, _toDisplayString($data.$t('global.table.selectItem')), 1 /* TEXT */)], undefined, true),\n            _: 2 /* DYNAMIC */\n          }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"modelValue\", \"onUpdate:modelValue\", \"data-test-id\", \"onChange\"])]),\n          \"cell(actions)\": _withCtx(({\n            item\n          }) => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(item.actions, (action, index) => {\n            return _openBlock(), _createBlock(_component_table_row_action, {\n              key: index,\n              value: action.value,\n              enabled: action.enabled,\n              title: action.title,\n              \"data-test-id\": `snmpAlerts-button-deleteRow-${item.index}`,\n              onClickTableAction: $event => $options.onTableRowAction($event, item)\n            }, {\n              icon: _withCtx(() => [action.value === 'delete' ? (_openBlock(), _createBlock(_component_icon_trashcan, {\n                key: 0\n              })) : _createCommentVNode(\"v-if\", true)]),\n              _: 2 /* DYNAMIC */\n            }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"value\", \"enabled\", \"title\", \"data-test-id\", \"onClickTableAction\"]);\n          }), 128 /* KEYED_FRAGMENT */))]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"fields\", \"items\", \"empty-text\"])], undefined, true),\n        _: 1 /* STABLE */\n      })], undefined, true),\n      _: 1 /* STABLE */\n    }), _createCommentVNode(\" Modals \"), _createVNode(_component_modal_add_destination, {\n      onOk: $options.onModalOk\n    }, null, 8 /* PROPS */, [\"onOk\"])], undefined, true),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["class","_createBlock","_component_b_container","fluid","default","_withCtx","_createVNode","_component_page_title","description","$data","$t","_component_b_row","_component_b_col","xl","_component_b_button","variant","onClick","$options","initModalAddDestination","_component_icon_add","_createTextVNode","_toDisplayString","_","_component_table_toolbar","ref","selectedRows","length","actions","tableToolbarActions","onClearSelected","_cache","$event","_ctx","clearSelectedRows","$refs","table","onBatchAction","_component_b_table","responsive","selectable","hover","fields","items","tableItems","onRowSelected","_component_b_form_checkbox","modelValue","tableHeaderCheckboxModel","indeterminate","tableHeaderCheckboxIndeterminate","onChange","onChangeHeaderCheckbox","_createElementVNode","_hoisted_1","row","rowSelected","index","toggleSelectRow","_hoisted_2","item","_createElementBlock","_Fragment","_renderList","action","_component_table_row_action","key","value","enabled","title","onClickTableAction","onTableRowAction","icon","_component_icon_trashcan","_createCommentVNode","_component_modal_add_destination","onOk","onModalOk"],"sources":["/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/src/views/Settings/SnmpAlerts/SnmpAlerts.vue"],"sourcesContent":["<template>\n  <b-container fluid=\"xl\">\n    <page-title :description=\"$t('pageSnmpAlerts.pageDescription')\" />\n    <b-row>\n      <b-col xl=\"9\" class=\"text-right\">\n        <b-button variant=\"primary\" @click=\"initModalAddDestination\">\n          <icon-add />\n          {{ $t('pageSnmpAlerts.addDestination') }}\n        </b-button>\n      </b-col>\n    </b-row>\n    <b-row>\n      <b-col xl=\"9\">\n        <table-toolbar\n          ref=\"toolbar\"\n          :selected-items-count=\"selectedRows.length\"\n          :actions=\"tableToolbarActions\"\n          @clear-selected=\"clearSelectedRows($refs.table)\"\n          @batch-action=\"onBatchAction\"\n        />\n        <b-table\n          ref=\"table\"\n          responsive=\"md\"\n          selectable\n          show-empty\n          no-select-on-click\n          hover\n          :fields=\"fields\"\n          :items=\"tableItems\"\n          :empty-text=\"$t('global.table.emptyMessage')\"\n          @row-selected=\"onRowSelected($event, tableItems.length)\"\n        >\n          <!-- Checkbox column -->\n          <template #head(checkbox)>\n            <b-form-checkbox\n              v-model=\"tableHeaderCheckboxModel\"\n              data-test-id=\"snmpAlerts-checkbox-selectAll\"\n              :indeterminate=\"tableHeaderCheckboxIndeterminate\"\n              @change=\"onChangeHeaderCheckbox($refs.table)\"\n            >\n              <span class=\"sr-only\">{{ $t('global.table.selectAll') }}</span>\n            </b-form-checkbox>\n          </template>\n          <template #cell(checkbox)=\"row\">\n            <b-form-checkbox\n              v-model=\"row.rowSelected\"\n              :data-test-id=\"`snmpAlerts-checkbox-selectRow-${row.index}`\"\n              @change=\"toggleSelectRow($refs.table, row.index)\"\n            >\n              <span class=\"sr-only\">{{ $t('global.table.selectItem') }}</span>\n            </b-form-checkbox>\n          </template>\n\n          <!-- table actions column -->\n          <template #cell(actions)=\"{ item }\">\n            <table-row-action\n              v-for=\"(action, index) in item.actions\"\n              :key=\"index\"\n              :value=\"action.value\"\n              :enabled=\"action.enabled\"\n              :title=\"action.title\"\n              :data-test-id=\"`snmpAlerts-button-deleteRow-${item.index}`\"\n              @click-table-action=\"onTableRowAction($event, item)\"\n            >\n              <template #icon>\n                <icon-trashcan v-if=\"action.value === 'delete'\" />\n              </template>\n            </table-row-action>\n          </template>\n        </b-table>\n      </b-col>\n    </b-row>\n    <!-- Modals -->\n    <modal-add-destination @ok=\"onModalOk\" />\n  </b-container>\n</template>\n\n<script>\nimport IconTrashcan from '@carbon/icons-vue/es/trash-can/20';\nimport ModalAddDestination from './ModalAddDestination';\nimport PageTitle from '@/components/Global/PageTitle';\nimport IconAdd from '@carbon/icons-vue/es/add--alt/20';\nimport TableToolbar from '@/components/Global/TableToolbar';\nimport TableRowAction from '@/components/Global/TableRowAction';\nimport LoadingBarMixin from '@/components/Mixins/LoadingBarMixin';\nimport BVToastMixin from '@/components/Mixins/BVToastMixin';\n\nimport BVTableSelectableMixin, {\n  selectedRows,\n  tableHeaderCheckboxModel,\n  tableHeaderCheckboxIndeterminate,\n} from '@/components/Mixins/BVTableSelectableMixin';\nimport { useI18n } from 'vue-i18n';\nimport i18n from '@/i18n';\n\nexport default {\n  name: 'SnmpAlerts',\n  components: {\n    PageTitle,\n    IconAdd,\n    TableToolbar,\n    IconTrashcan,\n    ModalAddDestination,\n    TableRowAction,\n  },\n  mixins: [BVTableSelectableMixin, BVToastMixin, LoadingBarMixin],\n  beforeRouteLeave(to, from, next) {\n    this.hideLoader();\n    next();\n  },\n  data() {\n    return {\n      $t: useI18n().t,\n      fields: [\n        {\n          key: 'checkbox',\n        },\n        {\n          key: 'IP',\n          label: i18n.global.t('pageSnmpAlerts.table.ipaddress'),\n        },\n        {\n          key: 'Port',\n          label: i18n.global.t('pageSnmpAlerts.table.port'),\n        },\n        {\n          key: 'actions',\n          label: '',\n          tdClass: 'text-right text-nowrap',\n        },\n      ],\n      tableToolbarActions: [\n        {\n          value: 'delete',\n          label: i18n.global.t('global.action.delete'),\n        },\n      ],\n      selectedRows: selectedRows,\n      tableHeaderCheckboxModel: tableHeaderCheckboxModel,\n      tableHeaderCheckboxIndeterminate: tableHeaderCheckboxIndeterminate,\n    };\n  },\n  computed: {\n    allSnmpDetails() {\n      return this.$store.getters['snmpAlerts/allSnmpDetails'];\n    },\n    tableItems() {\n      // transform destination data to table data\n      return this.allSnmpDetails.map((subscriptions) => {\n        const [destination, dataWithProtocol, dataWithoutProtocol] = [\n          subscriptions.Destination,\n          subscriptions.Destination.split('/')[2].split(':'),\n          subscriptions.Destination.split(':'),\n        ];\n        //condition to check if destination comes with protocol or not\n        const conditionForProtocolCheck = destination.includes('://');\n        const ip = conditionForProtocolCheck\n          ? dataWithProtocol[0]\n          : dataWithoutProtocol[0];\n        const port = conditionForProtocolCheck\n          ? dataWithProtocol[1]\n          : dataWithoutProtocol[1];\n        return {\n          IP: ip,\n          Port: port,\n          id: subscriptions.Id,\n          actions: [\n            {\n              value: 'delete',\n              enabled: true,\n              title: i18n.global.t('pageSnmpAlerts.deleteDestination'),\n            },\n          ],\n          ...subscriptions,\n        };\n      });\n    },\n  },\n  created() {\n    this.startLoader();\n    this.$store\n      .dispatch('snmpAlerts/getSnmpDetails')\n      .finally(() => this.endLoader());\n  },\n  methods: {\n    onModalOk({ ipAddress, port }) {\n      const protocolIpAddress = 'snmp://' + ipAddress;\n      const destination = port\n        ? protocolIpAddress + ':' + port\n        : protocolIpAddress;\n      const data = {\n        Destination: destination,\n        SubscriptionType: 'SNMPTrap',\n        Protocol: 'SNMPv2c',\n      };\n      this.startLoader();\n      this.$store\n        .dispatch('snmpAlerts/addDestination', { data })\n        .then((success) => this.successToast(success))\n        .catch(({ message }) => this.errorToast(message))\n        .finally(() => this.endLoader());\n    },\n    initModalAddDestination() {\n      this.$bvModal.show('add-destination');\n    },\n    initModalDeleteDestination(destination) {\n      this.$bvModal\n        .msgBoxConfirm(\n          i18n.global.t('pageSnmpAlerts.modal.deleteConfirmMessage', {\n            destination: destination.id,\n          }),\n          {\n            title: i18n.global.t(\n              'pageSnmpAlerts.modal.deleteSnmpDestinationTitle',\n            ),\n            okTitle: i18n.global.t('pageSnmpAlerts.deleteDestination'),\n            cancelTitle: i18n.global.t('global.action.cancel'),\n            autoFocusButton: 'ok',\n          },\n        )\n        .then((deleteConfirmed) => {\n          if (deleteConfirmed) {\n            this.deleteDestination(destination);\n          }\n        });\n    },\n    deleteDestination({ id }) {\n      this.startLoader();\n      this.$store\n        .dispatch('snmpAlerts/deleteDestination', id)\n        .then((success) => this.successToast(success))\n        .catch(({ message }) => this.errorToast(message))\n        .finally(() => this.endLoader());\n    },\n    onBatchAction(action) {\n      if (action === 'delete') {\n        this.$bvModal\n          .msgBoxConfirm(\n            i18n.global.t(\n              'pageSnmpAlerts.modal.batchDeleteConfirmMessage',\n              this.selectedRows.length,\n            ),\n            {\n              title: i18n.global.t(\n                'pageSnmpAlerts.modal.deleteSnmpDestinationTitle',\n                this.selectedRows.length,\n              ),\n              okTitle: i18n.global.t(\n                'pageSnmpAlerts.deleteDestination',\n                this.selectedRows.length,\n              ),\n              cancelTitle: i18n.global.t('global.action.cancel'),\n              autoFocusButton: 'ok',\n            },\n          )\n          .then((deleteConfirmed) => {\n            if (deleteConfirmed) {\n              this.startLoader();\n              this.$store\n                .dispatch(\n                  'snmpAlerts/deleteMultipleDestinations',\n                  this.selectedRows,\n                )\n                .then((messages) => {\n                  messages.forEach(({ type, message }) => {\n                    if (type === 'success') this.successToast(message);\n                    if (type === 'error') this.errorToast(message);\n                  });\n                })\n                .finally(() => this.endLoader());\n            }\n          });\n      }\n    },\n    onTableRowAction(action, row) {\n      if (action === 'delete') {\n        this.initModalDeleteDestination(row);\n      }\n    },\n  },\n};\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}