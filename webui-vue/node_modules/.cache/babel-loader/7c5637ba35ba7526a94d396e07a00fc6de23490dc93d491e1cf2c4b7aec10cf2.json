{"ast":null,"code":"import { required, requiredIf } from '@vuelidate/validators';\nimport VuelidateMixin from '@/components/Mixins/VuelidateMixin.js';\nimport { useVuelidate } from '@vuelidate/core';\nimport FormFile from '@/components/Global/FormFile';\nimport { useI18n } from 'vue-i18n';\nexport default {\n  components: {\n    FormFile\n  },\n  mixins: [VuelidateMixin],\n  props: {\n    certificate: {\n      type: Object,\n      default: null,\n      validator: prop => {\n        if (prop === null) return true;\n        return Object.prototype.hasOwnProperty.call(prop, 'type') && Object.prototype.hasOwnProperty.call(prop, 'certificate');\n      }\n    }\n  },\n  setup() {\n    return {\n      v$: useVuelidate()\n    };\n  },\n  data() {\n    return {\n      $t: useI18n().t,\n      form: {\n        certificateType: null,\n        file: null\n      }\n    };\n  },\n  computed: {\n    certificateTypes() {\n      return this.$store.getters['certificates/availableUploadTypes'];\n    },\n    certificateOptions() {\n      return this.certificateTypes.map(({\n        type,\n        label\n      }) => {\n        return {\n          text: label,\n          value: type\n        };\n      });\n    }\n  },\n  watch: {\n    certificateOptions: function (options) {\n      if (options.length) {\n        this.form.certificateType = options[0].value;\n      }\n    }\n  },\n  validations() {\n    return {\n      form: {\n        certificateType: {\n          required: requiredIf(function () {\n            return !this.certificate;\n          })\n        },\n        file: {\n          required\n        }\n      }\n    };\n  },\n  methods: {\n    handleSubmit() {\n      this.v$.$touch();\n      if (this.v$.$invalid) return;\n      this.$emit('ok', {\n        addNew: !this.certificate,\n        file: this.form.file,\n        location: this.certificate ? this.certificate.location : null,\n        type: this.certificate ? this.certificate.type : this.form.certificateType\n      });\n      this.closeModal();\n    },\n    closeModal() {\n      this.$nextTick(() => {\n        this.$refs.modal.hide();\n      });\n    },\n    resetForm() {\n      this.form.certificateType = this.certificateOptions.length ? this.certificateOptions[0].value : null;\n      this.form.file = null;\n      this.v$.$reset();\n    },\n    onOk(bvModalEvt) {\n      // prevent modal close\n      bvModalEvt.preventDefault();\n      this.handleSubmit();\n    }\n  }\n};","map":{"version":3,"names":["required","requiredIf","VuelidateMixin","useVuelidate","FormFile","useI18n","components","mixins","props","certificate","type","Object","default","validator","prop","prototype","hasOwnProperty","call","setup","v$","data","$t","t","form","certificateType","file","computed","certificateTypes","$store","getters","certificateOptions","map","label","text","value","watch","options","length","validations","methods","handleSubmit","$touch","$invalid","$emit","addNew","location","closeModal","$nextTick","$refs","modal","hide","resetForm","$reset","onOk","bvModalEvt","preventDefault"],"sources":["/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/src/views/SecurityAndAccess/Certificates/ModalUploadCertificate.vue"],"sourcesContent":["<template>\n  <b-modal id=\"upload-certificate\" ref=\"modal\" @ok=\"onOk\" @hidden=\"resetForm\">\n    <template #modal-title>\n      <template v-if=\"certificate\">\n        {{ $t('pageCertificates.replaceCertificate') }}\n      </template>\n      <template v-else>\n        {{ $t('pageCertificates.addNewCertificate') }}\n      </template>\n    </template>\n    <b-form>\n      <!-- Replace Certificate type -->\n      <template v-if=\"certificate !== null\">\n        <dl class=\"mb-4\">\n          <dt>{{ $t('pageCertificates.modal.certificateType') }}</dt>\n          <dd>{{ certificate.certificate }}</dd>\n        </dl>\n      </template>\n\n      <!-- Add new Certificate type -->\n      <template v-else>\n        <b-form-group\n          :label=\"$t('pageCertificates.modal.certificateType')\"\n          label-for=\"certificate-type\"\n        >\n          <b-form-select\n            id=\"certificate-type\"\n            v-model=\"form.certificateType\"\n            :options=\"certificateOptions\"\n            :state=\"getValidationState(v$.form.certificateType)\"\n            @input=\"v$.form.certificateType.$touch()\"\n          >\n          </b-form-select>\n          <b-form-invalid-feedback role=\"alert\">\n            <template v-if=\"v$.form.certificateType.required.$invalid\">\n              {{ $t('global.form.fieldRequired') }}\n            </template>\n          </b-form-invalid-feedback>\n        </b-form-group>\n      </template>\n\n      <b-form-group :label=\"$t('pageCertificates.modal.certificateFile')\">\n        <form-file\n          id=\"certificate-file\"\n          v-model=\"form.file\"\n          accept=\".pem\"\n          :state=\"getValidationState(v$.form.file)\"\n        >\n          <template #invalid>\n            <b-form-invalid-feedback role=\"alert\">\n              {{ $t('global.form.required') }}\n            </b-form-invalid-feedback>\n          </template>\n        </form-file>\n      </b-form-group>\n    </b-form>\n    <template #modal-ok>\n      <template v-if=\"certificate\">\n        {{ $t('global.action.replace') }}\n      </template>\n      <template v-else>\n        {{ $t('global.action.add') }}\n      </template>\n    </template>\n    <template #modal-cancel>\n      {{ $t('global.action.cancel') }}\n    </template>\n  </b-modal>\n</template>\n\n<script>\nimport { required, requiredIf } from '@vuelidate/validators';\nimport VuelidateMixin from '@/components/Mixins/VuelidateMixin.js';\nimport { useVuelidate } from '@vuelidate/core';\n\nimport FormFile from '@/components/Global/FormFile';\nimport { useI18n } from 'vue-i18n';\n\nexport default {\n  components: { FormFile },\n  mixins: [VuelidateMixin],\n  props: {\n    certificate: {\n      type: Object,\n      default: null,\n      validator: (prop) => {\n        if (prop === null) return true;\n        return (\n          Object.prototype.hasOwnProperty.call(prop, 'type') &&\n          Object.prototype.hasOwnProperty.call(prop, 'certificate')\n        );\n      },\n    },\n  },\n  setup() {\n    return {\n      v$: useVuelidate(),\n    };\n  },\n  data() {\n    return {\n      $t: useI18n().t,\n      form: {\n        certificateType: null,\n        file: null,\n      },\n    };\n  },\n  computed: {\n    certificateTypes() {\n      return this.$store.getters['certificates/availableUploadTypes'];\n    },\n    certificateOptions() {\n      return this.certificateTypes.map(({ type, label }) => {\n        return {\n          text: label,\n          value: type,\n        };\n      });\n    },\n  },\n  watch: {\n    certificateOptions: function (options) {\n      if (options.length) {\n        this.form.certificateType = options[0].value;\n      }\n    },\n  },\n  validations() {\n    return {\n      form: {\n        certificateType: {\n          required: requiredIf(function () {\n            return !this.certificate;\n          }),\n        },\n        file: {\n          required,\n        },\n      },\n    };\n  },\n  methods: {\n    handleSubmit() {\n      this.v$.$touch();\n      if (this.v$.$invalid) return;\n      this.$emit('ok', {\n        addNew: !this.certificate,\n        file: this.form.file,\n        location: this.certificate ? this.certificate.location : null,\n        type: this.certificate\n          ? this.certificate.type\n          : this.form.certificateType,\n      });\n      this.closeModal();\n    },\n    closeModal() {\n      this.$nextTick(() => {\n        this.$refs.modal.hide();\n      });\n    },\n    resetForm() {\n      this.form.certificateType = this.certificateOptions.length\n        ? this.certificateOptions[0].value\n        : null;\n      this.form.file = null;\n      this.v$.$reset();\n    },\n    onOk(bvModalEvt) {\n      // prevent modal close\n      bvModalEvt.preventDefault();\n      this.handleSubmit();\n    },\n  },\n};\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}