{"ast":null,"code":"import AppHeader from '@/components/AppHeader';\nimport AppNavigation from '@/components/AppNavigation';\nimport PageContainer from '@/components/Global/PageContainer';\nimport ButtonBackToTop from '@/components/Global/ButtonBackToTop';\nimport JumpLinkMixin from '@/components/Mixins/JumpLinkMixin';\nexport default {\n  name: 'App',\n  components: {\n    AppHeader,\n    AppNavigation,\n    PageContainer,\n    ButtonBackToTop\n  },\n  mixins: [JumpLinkMixin],\n  data() {\n    return {\n      routerKey: 0\n    };\n  },\n  watch: {\n    $route: function () {\n      this.$nextTick(function () {\n        this.setFocus(this.$refs.focusTarget.$el);\n      });\n    }\n  },\n  mounted() {\n    this.$root.$on('refresh-application', () => this.refresh());\n    setInterval(() => {\n      if (!localStorage.getItem('storedUsername')) {\n        this.$eventBus.$consoleWindow?.close();\n        this.refresh();\n      }\n    }, 10000);\n  },\n  methods: {\n    refresh() {\n      // Clear all toast messages\n      document.querySelectorAll('.toast').forEach(toast => {\n        const toastId = toast.id;\n        if (toastId) {\n          this.$bvToast.hide(toastId);\n        }\n      });\n      // Changing the component :key value will trigger\n      // a component re-rendering and 'refresh' the view\n      this.routerKey += 1;\n    }\n  }\n};","map":{"version":3,"names":["AppHeader","AppNavigation","PageContainer","ButtonBackToTop","JumpLinkMixin","name","components","mixins","data","routerKey","watch","$route","$nextTick","setFocus","$refs","focusTarget","$el","mounted","$root","$on","refresh","setInterval","localStorage","getItem","$eventBus","$consoleWindow","close","methods","document","querySelectorAll","forEach","toast","toastId","id","$bvToast","hide"],"sources":["/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/src/layouts/AppLayout.vue"],"sourcesContent":["<template>\n  <div class=\"app-container\">\n    <app-header\n      ref=\"focusTarget\"\n      class=\"app-header\"\n      :router-key=\"routerKey\"\n      @refresh=\"refresh\"\n    />\n    <app-navigation class=\"app-navigation\" />\n    <page-container class=\"app-content\">\n      <router-view ref=\"routerView\" :key=\"routerKey\" />\n      <!-- Scroll to top button -->\n      <button-back-to-top />\n    </page-container>\n  </div>\n</template>\n\n<script>\nimport AppHeader from '@/components/AppHeader';\nimport AppNavigation from '@/components/AppNavigation';\nimport PageContainer from '@/components/Global/PageContainer';\nimport ButtonBackToTop from '@/components/Global/ButtonBackToTop';\nimport JumpLinkMixin from '@/components/Mixins/JumpLinkMixin';\n\nexport default {\n  name: 'App',\n  components: {\n    AppHeader,\n    AppNavigation,\n    PageContainer,\n    ButtonBackToTop,\n  },\n  mixins: [JumpLinkMixin],\n  data() {\n    return {\n      routerKey: 0,\n    };\n  },\n  watch: {\n    $route: function () {\n      this.$nextTick(function () {\n        this.setFocus(this.$refs.focusTarget.$el);\n      });\n    },\n  },\n  mounted() {\n    this.$root.$on('refresh-application', () => this.refresh());\n    setInterval(() => {\n      if (!localStorage.getItem('storedUsername')) {\n        this.$eventBus.$consoleWindow?.close();\n        this.refresh();\n      }\n    }, 10000);\n  },\n  methods: {\n    refresh() {\n      // Clear all toast messages\n      document.querySelectorAll('.toast').forEach((toast) => {\n        const toastId = toast.id;\n        if (toastId) {\n          this.$bvToast.hide(toastId);\n        }\n      });\n      // Changing the component :key value will trigger\n      // a component re-rendering and 'refresh' the view\n      this.routerKey += 1;\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import '@/assets/styles/bmc/helpers/_index.scss';\n@import '@/assets/styles/bootstrap/_helpers.scss';\n\n.app-container {\n  display: grid;\n  grid-template-columns: 100%;\n  grid-template-rows: auto;\n  grid-template-areas:\n    'header'\n    'content';\n\n  @include media-breakpoint-up($responsive-layout-bp) {\n    grid-template-columns: $navigation-width 1fr;\n    grid-template-areas:\n      'header header'\n      'navigation content';\n  }\n}\n\n.app-header {\n  grid-area: header;\n  position: sticky;\n  top: 0;\n  z-index: $zindex-fixed + 1;\n}\n\n.app-navigation {\n  grid-area: navigation;\n}\n\n.app-content {\n  grid-area: content;\n  background-color: $white;\n}\n</style>\n"],"mappings":"AAkBA,OAAOA,SAAQ,MAAO,wBAAwB;AAC9C,OAAOC,aAAY,MAAO,4BAA4B;AACtD,OAAOC,aAAY,MAAO,mCAAmC;AAC7D,OAAOC,eAAc,MAAO,qCAAqC;AACjE,OAAOC,aAAY,MAAO,mCAAmC;AAE7D,eAAe;EACbC,IAAI,EAAE,KAAK;EACXC,UAAU,EAAE;IACVN,SAAS;IACTC,aAAa;IACbC,aAAa;IACbC;EACF,CAAC;EACDI,MAAM,EAAE,CAACH,aAAa,CAAC;EACvBI,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE;IACb,CAAC;EACH,CAAC;EACDC,KAAK,EAAE;IACLC,MAAM,EAAE,SAAAA,CAAA,EAAY;MAClB,IAAI,CAACC,SAAS,CAAC,YAAY;QACzB,IAAI,CAACC,QAAQ,CAAC,IAAI,CAACC,KAAK,CAACC,WAAW,CAACC,GAAG,CAAC;MAC3C,CAAC,CAAC;IACJ;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,KAAK,CAACC,GAAG,CAAC,qBAAqB,EAAE,MAAM,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC;IAC3DC,WAAW,CAAC,MAAM;MAChB,IAAI,CAACC,YAAY,CAACC,OAAO,CAAC,gBAAgB,CAAC,EAAE;QAC3C,IAAI,CAACC,SAAS,CAACC,cAAc,EAAEC,KAAK,CAAC,CAAC;QACtC,IAAI,CAACN,OAAO,CAAC,CAAC;MAChB;IACF,CAAC,EAAE,KAAK,CAAC;EACX,CAAC;EACDO,OAAO,EAAE;IACPP,OAAOA,CAAA,EAAG;MACR;MACAQ,QAAQ,CAACC,gBAAgB,CAAC,QAAQ,CAAC,CAACC,OAAO,CAAEC,KAAK,IAAK;QACrD,MAAMC,OAAM,GAAID,KAAK,CAACE,EAAE;QACxB,IAAID,OAAO,EAAE;UACX,IAAI,CAACE,QAAQ,CAACC,IAAI,CAACH,OAAO,CAAC;QAC7B;MACF,CAAC,CAAC;MACF;MACA;MACA,IAAI,CAACvB,SAAQ,IAAK,CAAC;IACrB;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}