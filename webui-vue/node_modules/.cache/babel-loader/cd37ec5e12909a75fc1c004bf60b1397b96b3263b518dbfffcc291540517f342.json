{"ast":null,"code":"import PageTitle from '@/components/Global/PageTitle';\nimport LoadingBarMixin from '@/components/Mixins/LoadingBarMixin';\nimport BVToastMixin from '@/components/Mixins/BVToastMixin';\nimport { useI18n } from 'vue-i18n';\nimport i18n from '@/i18n';\nexport default {\n  name: 'Policies',\n  components: {\n    PageTitle\n  },\n  mixins: [LoadingBarMixin, BVToastMixin],\n  beforeRouteLeave(to, from, next) {\n    this.hideLoader();\n    next();\n  },\n  data() {\n    return {\n      $t: useI18n().t,\n      modifySSHPolicyDisabled: process.env.VUE_APP_MODIFY_SSH_POLICY_DISABLED === 'true',\n      sessionTimeOutOptions: [{\n        value: 1800,\n        text: i18n.global.t('pagePolicies.options.30minutes')\n      }, {\n        value: 3600,\n        text: i18n.global.t('pagePolicies.options.1hour')\n      }, {\n        value: 7200,\n        text: i18n.global.t('pagePolicies.options.2hours')\n      }, {\n        value: 14400,\n        text: i18n.global.t('pagePolicies.options.4hours')\n      }, {\n        value: 28800,\n        text: i18n.global.t('pagePolicies.options.8hours')\n      }, {\n        value: 86400,\n        text: i18n.global.t('pagePolicies.options.1day')\n      }]\n    };\n  },\n  computed: {\n    sshProtocolState: {\n      get() {\n        return this.$store.getters['policies/sshProtocolEnabled'];\n      },\n      set(newValue) {\n        return newValue;\n      }\n    },\n    ipmiProtocolState: {\n      get() {\n        return this.$store.getters['policies/ipmiProtocolEnabled'];\n      },\n      set(newValue) {\n        return newValue;\n      }\n    },\n    rtadState: {\n      get() {\n        if (this.$store.getters['policies/rtadEnabled'] === 'Enabled') {\n          return true;\n        } else {\n          return false;\n        }\n      },\n      set(newValue) {\n        return newValue;\n      }\n    },\n    vtpmState: {\n      get() {\n        if (this.$store.getters['policies/vtpmEnabled'] === 'Enabled') {\n          return true;\n        } else {\n          return false;\n        }\n      },\n      set(newValue) {\n        return newValue;\n      }\n    },\n    sessionTimeoutState: {\n      get() {\n        return this.$store.getters['policies/getSessionTimeoutValue'];\n      },\n      set(newValue) {\n        return newValue;\n      }\n    }\n  },\n  created() {\n    this.startLoader();\n    Promise.all([this.$store.dispatch('policies/getBiosStatus'), this.$store.dispatch('policies/getNetworkProtocolStatus'), this.$store.dispatch('policies/getSessionTimeout')]).finally(() => this.endLoader());\n  },\n  methods: {\n    changeIpmiProtocolState(state) {\n      this.$store.dispatch('policies/saveIpmiProtocolState', state).then(message => this.successToast(message)).catch(({\n        message\n      }) => this.errorToast(message));\n    },\n    changeSshProtocolState(state) {\n      this.$store.dispatch('policies/saveSshProtocolState', state).then(message => this.successToast(message)).catch(({\n        message\n      }) => this.errorToast(message));\n    },\n    changeRtadState(state) {\n      this.$store.dispatch('policies/saveRtadState', state ? 'Enabled' : 'Disabled').then(message => this.successToast(message)).catch(({\n        message\n      }) => this.errorToast(message));\n    },\n    changeVtpmState(state) {\n      this.$store.dispatch('policies/saveVtpmState', state ? 'Enabled' : 'Disabled').then(message => this.successToast(message)).catch(({\n        message\n      }) => this.errorToast(message));\n    },\n    saveSessionTimeoutValue(sessionTimeoutState) {\n      this.$store.dispatch('policies/saveSessionTimeoutValue', sessionTimeoutState).then(message => this.successToast(message)).catch(({\n        message\n      }) => this.errorToast(message));\n    }\n  }\n};","map":{"version":3,"names":["PageTitle","LoadingBarMixin","BVToastMixin","useI18n","i18n","name","components","mixins","beforeRouteLeave","to","from","next","hideLoader","data","$t","t","modifySSHPolicyDisabled","process","env","VUE_APP_MODIFY_SSH_POLICY_DISABLED","sessionTimeOutOptions","value","text","global","computed","sshProtocolState","get","$store","getters","set","newValue","ipmiProtocolState","rtadState","vtpmState","sessionTimeoutState","created","startLoader","Promise","all","dispatch","finally","endLoader","methods","changeIpmiProtocolState","state","then","message","successToast","catch","errorToast","changeSshProtocolState","changeRtadState","changeVtpmState","saveSessionTimeoutValue"],"sources":["/home/zenchenko/openbmc/build/evb-ast2500/workspace/sources/webui-vue/src/views/SecurityAndAccess/Policies/Policies.vue"],"sourcesContent":["<template>\n  <b-container fluid=\"xl\">\n    <page-title />\n    <b-row>\n      <b-col md=\"8\">\n        <b-row v-if=\"!modifySSHPolicyDisabled\" class=\"setting-section\">\n          <b-col class=\"d-flex align-items-center justify-content-between\">\n            <dl class=\"mr-3 w-75\">\n              <dt>{{ $t('pagePolicies.ssh') }}</dt>\n              <dd>\n                {{ $t('pagePolicies.sshDescription') }}\n              </dd>\n            </dl>\n            <b-form-checkbox\n              id=\"sshSwitch\"\n              v-model=\"sshProtocolState\"\n              data-test-id=\"policies-toggle-bmcShell\"\n              switch\n              @change=\"changeSshProtocolState\"\n            >\n              <span class=\"sr-only\">\n                {{ $t('pagePolicies.ssh') }}\n              </span>\n              <span v-if=\"sshProtocolState\">\n                {{ $t('global.status.enabled') }}\n              </span>\n              <span v-else>{{ $t('global.status.disabled') }}</span>\n            </b-form-checkbox>\n          </b-col>\n        </b-row>\n        <b-row class=\"setting-section\">\n          <b-col class=\"d-flex align-items-center justify-content-between\">\n            <dl class=\"mt-3 mr-3 w-75\">\n              <dt>{{ $t('pagePolicies.ipmi') }}</dt>\n              <dd>\n                {{ $t('pagePolicies.ipmiDescription') }}\n              </dd>\n            </dl>\n            <b-form-checkbox\n              id=\"ipmiSwitch\"\n              v-model=\"ipmiProtocolState\"\n              data-test-id=\"polices-toggle-networkIpmi\"\n              switch\n              @change=\"changeIpmiProtocolState\"\n            >\n              <span class=\"sr-only\">\n                {{ $t('pagePolicies.ipmi') }}\n              </span>\n              <span v-if=\"ipmiProtocolState\">\n                {{ $t('global.status.enabled') }}\n              </span>\n              <span v-else>{{ $t('global.status.disabled') }}</span>\n            </b-form-checkbox>\n          </b-col>\n        </b-row>\n        <b-row class=\"setting-section\">\n          <b-col class=\"d-flex align-items-center justify-content-between\">\n            <dl class=\"mt-3 mr-3 w-75\">\n              <dt>{{ $t('pagePolicies.vtpm') }}</dt>\n              <dd>\n                {{ $t('pagePolicies.vtpmDescription') }}\n              </dd>\n            </dl>\n            <b-form-checkbox\n              id=\"vtpmSwitch\"\n              v-model=\"vtpmState\"\n              data-test-id=\"policies-toggle-vtpm\"\n              switch\n              @change=\"changeVtpmState\"\n            >\n              <span class=\"sr-only\">\n                {{ $t('pagePolicies.vtpm') }}\n              </span>\n              <span v-if=\"vtpmState\">\n                {{ $t('global.status.enabled') }}\n              </span>\n              <span v-else>{{ $t('global.status.disabled') }}</span>\n            </b-form-checkbox>\n          </b-col>\n        </b-row>\n        <b-row class=\"setting-section\">\n          <b-col class=\"d-flex align-items-center justify-content-between\">\n            <dl class=\"mt-3 mr-3 w-75\">\n              <dt>{{ $t('pagePolicies.rtad') }}</dt>\n              <dd>\n                {{ $t('pagePolicies.rtadDescription') }}\n              </dd>\n            </dl>\n            <b-form-checkbox\n              id=\"rtadSwitch\"\n              v-model=\"rtadState\"\n              data-test-id=\"policies-toggle-rtad\"\n              switch\n              @change=\"changeRtadState\"\n            >\n              <span class=\"sr-only\">\n                {{ $t('pagePolicies.rtad') }}\n              </span>\n              <span v-if=\"rtadState\">\n                {{ $t('global.status.enabled') }}\n              </span>\n              <span v-else>{{ $t('global.status.disabled') }}</span>\n            </b-form-checkbox>\n          </b-col>\n        </b-row>\n        <b-row class=\"setting-section\">\n          <b-col class=\"d-flex align-items-center justify-content-between\">\n            <dl class=\"mt-3 mr-3 w-75\">\n              <dt>{{ $t('pagePolicies.webSessionTimeOut') }}</dt>\n              <dd>\n                {{ $t('pagePolicies.webSessionTimeOutDescription') }}\n              </dd>\n            </dl>\n          </b-col>\n          <b-col lg=\"3\" class=\"session-timeout\">\n            <b-form-select\n              id=\"session-timeout-options\"\n              v-model=\"sessionTimeoutState\"\n              :options=\"sessionTimeOutOptions\"\n              @change=\"saveSessionTimeoutValue\"\n            >\n              <template #first>\n                <b-form-select-option :value=\"null\" disabled>\n                  {{ $t('global.form.selectAnOption') }}\n                </b-form-select-option>\n              </template>\n            </b-form-select>\n          </b-col>\n        </b-row>\n      </b-col>\n    </b-row>\n  </b-container>\n</template>\n\n<script>\nimport PageTitle from '@/components/Global/PageTitle';\n\nimport LoadingBarMixin from '@/components/Mixins/LoadingBarMixin';\nimport BVToastMixin from '@/components/Mixins/BVToastMixin';\nimport { useI18n } from 'vue-i18n';\nimport i18n from '@/i18n';\n\nexport default {\n  name: 'Policies',\n  components: { PageTitle },\n  mixins: [LoadingBarMixin, BVToastMixin],\n  beforeRouteLeave(to, from, next) {\n    this.hideLoader();\n    next();\n  },\n  data() {\n    return {\n      $t: useI18n().t,\n      modifySSHPolicyDisabled:\n        process.env.VUE_APP_MODIFY_SSH_POLICY_DISABLED === 'true',\n      sessionTimeOutOptions: [\n        { value: 1800, text: i18n.global.t('pagePolicies.options.30minutes') },\n        { value: 3600, text: i18n.global.t('pagePolicies.options.1hour') },\n        { value: 7200, text: i18n.global.t('pagePolicies.options.2hours') },\n        { value: 14400, text: i18n.global.t('pagePolicies.options.4hours') },\n        { value: 28800, text: i18n.global.t('pagePolicies.options.8hours') },\n        { value: 86400, text: i18n.global.t('pagePolicies.options.1day') },\n      ],\n    };\n  },\n  computed: {\n    sshProtocolState: {\n      get() {\n        return this.$store.getters['policies/sshProtocolEnabled'];\n      },\n      set(newValue) {\n        return newValue;\n      },\n    },\n    ipmiProtocolState: {\n      get() {\n        return this.$store.getters['policies/ipmiProtocolEnabled'];\n      },\n      set(newValue) {\n        return newValue;\n      },\n    },\n    rtadState: {\n      get() {\n        if (this.$store.getters['policies/rtadEnabled'] === 'Enabled') {\n          return true;\n        } else {\n          return false;\n        }\n      },\n      set(newValue) {\n        return newValue;\n      },\n    },\n    vtpmState: {\n      get() {\n        if (this.$store.getters['policies/vtpmEnabled'] === 'Enabled') {\n          return true;\n        } else {\n          return false;\n        }\n      },\n      set(newValue) {\n        return newValue;\n      },\n    },\n    sessionTimeoutState: {\n      get() {\n        return this.$store.getters['policies/getSessionTimeoutValue'];\n      },\n      set(newValue) {\n        return newValue;\n      },\n    },\n  },\n  created() {\n    this.startLoader();\n    Promise.all([\n      this.$store.dispatch('policies/getBiosStatus'),\n      this.$store.dispatch('policies/getNetworkProtocolStatus'),\n      this.$store.dispatch('policies/getSessionTimeout'),\n    ]).finally(() => this.endLoader());\n  },\n  methods: {\n    changeIpmiProtocolState(state) {\n      this.$store\n        .dispatch('policies/saveIpmiProtocolState', state)\n        .then((message) => this.successToast(message))\n        .catch(({ message }) => this.errorToast(message));\n    },\n    changeSshProtocolState(state) {\n      this.$store\n        .dispatch('policies/saveSshProtocolState', state)\n        .then((message) => this.successToast(message))\n        .catch(({ message }) => this.errorToast(message));\n    },\n    changeRtadState(state) {\n      this.$store\n        .dispatch('policies/saveRtadState', state ? 'Enabled' : 'Disabled')\n        .then((message) => this.successToast(message))\n        .catch(({ message }) => this.errorToast(message));\n    },\n    changeVtpmState(state) {\n      this.$store\n        .dispatch('policies/saveVtpmState', state ? 'Enabled' : 'Disabled')\n        .then((message) => this.successToast(message))\n        .catch(({ message }) => this.errorToast(message));\n    },\n    saveSessionTimeoutValue(sessionTimeoutState) {\n      this.$store\n        .dispatch('policies/saveSessionTimeoutValue', sessionTimeoutState)\n        .then((message) => this.successToast(message))\n        .catch(({ message }) => this.errorToast(message));\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import '@/assets/styles/bmc/helpers/_index.scss';\n@import '@/assets/styles/bootstrap/_helpers.scss';\n\n.setting-section {\n  border-bottom: 1px solid gray('300');\n}\n.session-timeout {\n  align-self: center;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}